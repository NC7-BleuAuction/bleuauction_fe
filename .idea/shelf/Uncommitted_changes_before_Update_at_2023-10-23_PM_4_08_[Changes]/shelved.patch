Index: node_modules/.cache/.eslintcache
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[{\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\index.js\":\"1\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\App.js\":\"2\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\reportWebVitals.js\":\"3\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Auth\\\\UserContext.js\":\"4\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Auth\\\\LoginPage.js\":\"5\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Auth\\\\RegisterPage.js\":\"6\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Menu\\\\MenuList.js\":\"7\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Common\\\\SideBar.js\":\"8\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Common\\\\Header.js\":\"9\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Test\\\\Test.js\":\"10\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\routes\\\\Home.js\":\"11\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Common\\\\Footer.js\":\"12\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Menu\\\\MenuRegisterationForm.js\":\"13\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Market\\\\TabBar.js\":\"14\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Market\\\\StoreList.js\":\"15\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Market\\\\MarketDetailPage.js\":\"16\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\MyPage\\\\StoreMyPage.js\":\"17\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\MyPage\\\\StoreItemRegister.js\":\"18\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\MyPage\\\\UserEditPage.js\":\"19\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\MyPage\\\\StoreRegisterPage.js\":\"20\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\MyPage\\\\MyPage.js\":\"21\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\MyPage\\\\MyOrder.js\":\"22\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\StoreItemDailyPrice\\\\StoreItemDailyPrice.js\":\"23\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\utility\\\\common.js\":\"24\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Pay\\\\Pay.js\":\"25\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Test\\\\test2.jsx\":\"26\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Review\\\\ReviewForm.js\":\"27\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\StoreHome.js\":\"28\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Market\\\\StoreListItem.js\":\"29\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Menu\\\\MenuItem.js\":\"30\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\MyPage\\\\InputField.js\":\"31\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Market\\\\StoreInfo.js\":\"32\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Review\\\\ReviewSection.js\":\"33\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\MainPage\\\\Category.js\":\"34\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\MyPage\\\\MyOrderContent.js\":\"35\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\MainPage\\\\Announce.js\":\"36\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\MainPage\\\\Button.js\":\"37\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\StoreHomeItem.js\":\"38\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Review\\\\ReviewList.js\":\"39\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Coupon\\\\Coupon.js\":\"40\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\StoreItemDailyPrice\\\\StoreItemAdd.js\":\"41\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\routes\\\\StoreList.js\":\"42\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Chat\\\\Chat.js\":\"43\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Notice\\\\NoticeDetail.js\":\"44\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Notice\\\\NoticeList.js\":\"45\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Notice\\\\NoticeListItem.js\":\"46\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Market\\\\OrderModal.js\":\"47\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Admin\\\\AdminNoticeList.js\":\"48\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Admin\\\\AdminNoticeDetail.js\":\"49\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Admin\\\\NoticeRegisterationForm.js\":\"50\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Admin\\\\AdminNoticeListItem.js\":\"51\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Market\\\\OrderItem.js\":\"52\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\MyPage\\\\OrderMenuList.js\":\"53\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\MyPage\\\\StoreOrder.js\":\"54\"},{\"size\":661,\"mtime\":1697978277777,\"results\":\"55\",\"hashOfConfig\":\"56\"},{\"size\":5651,\"mtime\":1698038999194,\"results\":\"57\",\"hashOfConfig\":\"56\"},{\"size\":375,\"mtime\":1696236038543,\"results\":\"58\",\"hashOfConfig\":\"56\"},{\"size\":1644,\"mtime\":1697580419735,\"results\":\"59\",\"hashOfConfig\":\"56\"},{\"size\":4892,\"mtime\":1698038999196,\"results\":\"60\",\"hashOfConfig\":\"56\"},{\"size\":6672,\"mtime\":1697693754234,\"results\":\"61\",\"hashOfConfig\":\"56\"},{\"size\":1072,\"mtime\":1697776613316,\"results\":\"62\",\"hashOfConfig\":\"56\"},{\"size\":706,\"mtime\":1697692768881,\"results\":\"63\",\"hashOfConfig\":\"56\"},{\"size\":3320,\"mtime\":1698038999198,\"results\":\"64\",\"hashOfConfig\":\"56\"},{\"size\":1115,\"mtime\":1696943521784,\"results\":\"65\",\"hashOfConfig\":\"56\"},{\"size\":2569,\"mtime\":1698038999217,\"results\":\"66\",\"hashOfConfig\":\"56\"},{\"size\":285,\"mtime\":1697521231622,\"results\":\"67\",\"hashOfConfig\":\"56\"},{\"size\":3962,\"mtime\":1697776613317,\"results\":\"68\",\"hashOfConfig\":\"56\"},{\"size\":1388,\"mtime\":1697097424814,\"results\":\"69\",\"hashOfConfig\":\"56\"},{\"size\":2621,\"mtime\":1698038999200,\"results\":\"70\",\"hashOfConfig\":\"56\"},{\"size\":2965,\"mtime\":1697990268617,\"results\":\"71\",\"hashOfConfig\":\"56\"},{\"size\":0,\"mtime\":1697691593162,\"results\":\"72\",\"hashOfConfig\":\"73\"},{\"size\":8281,\"mtime\":1698038999207,\"results\":\"74\",\"hashOfConfig\":\"56\"},{\"size\":6428,\"mtime\":1698038999208,\"results\":\"75\",\"hashOfConfig\":\"56\"},{\"size\":7165,\"mtime\":1697776613319,\"results\":\"76\",\"hashOfConfig\":\"56\"},{\"size\":4993,\"mtime\":1698038999206,\"results\":\"77\",\"hashOfConfig\":\"56\"},{\"size\":2335,\"mtime\":1697521308636,\"results\":\"78\",\"hashOfConfig\":\"56\"},{\"size\":13418,\"mtime\":1698038999213,\"results\":\"79\",\"hashOfConfig\":\"56\"},{\"size\":6525,\"mtime\":1698038999215,\"results\":\"80\",\"hashOfConfig\":\"56\"},{\"size\":4473,\"mtime\":1697713109592,\"results\":\"81\",\"hashOfConfig\":\"56\"},{\"size\":470,\"mtime\":1696943521785,\"results\":\"82\",\"hashOfConfig\":\"56\"},{\"size\":20110,\"mtime\":1697697390436,\"results\":\"83\",\"hashOfConfig\":\"56\"},{\"size\":800,\"mtime\":1698038999209,\"results\":\"84\",\"hashOfConfig\":\"56\"},{\"size\":1651,\"mtime\":1698038999201,\"results\":\"85\",\"hashOfConfig\":\"56\"},{\"size\":2090,\"mtime\":1697691593156,\"results\":\"86\",\"hashOfConfig\":\"56\"},{\"size\":381,\"mtime\":1698038999204,\"results\":\"87\",\"hashOfConfig\":\"56\"},{\"size\":3829,\"mtime\":1697776613313,\"results\":\"88\",\"hashOfConfig\":\"56\"},{\"size\":750,\"mtime\":1697097424831,\"results\":\"89\",\"hashOfConfig\":\"56\"},{\"size\":642,\"mtime\":1697097424806,\"results\":\"90\",\"hashOfConfig\":\"56\"},{\"size\":2332,\"mtime\":1698038717403,\"results\":\"91\",\"hashOfConfig\":\"56\"},{\"size\":1807,\"mtime\":1697627389378,\"results\":\"92\",\"hashOfConfig\":\"56\"},{\"size\":436,\"mtime\":1697097424804,\"results\":\"93\",\"hashOfConfig\":\"56\"},{\"size\":2417,\"mtime\":1697624654909,\"results\":\"94\",\"hashOfConfig\":\"56\"},{\"size\":1326,\"mtime\":1697097424829,\"results\":\"95\",\"hashOfConfig\":\"56\"},{\"size\":1441,\"mtime\":1697097424799,\"results\":\"96\",\"hashOfConfig\":\"56\"},{\"size\":4808,\"mtime\":1697868489177,\"results\":\"97\",\"hashOfConfig\":\"56\"},{\"size\":1055,\"mtime\":1697691593170,\"results\":\"98\",\"hashOfConfig\":\"73\"},{\"size\":6453,\"mtime\":1697691593146,\"results\":\"99\",\"hashOfConfig\":\"56\"},{\"size\":1078,\"mtime\":1697691593165,\"results\":\"100\",\"hashOfConfig\":\"56\"},{\"size\":691,\"mtime\":1697691593167,\"results\":\"101\",\"hashOfConfig\":\"56\"},{\"size\":1438,\"mtime\":1697691593168,\"results\":\"102\",\"hashOfConfig\":\"56\"},{\"size\":6687,\"mtime\":1698033743056,\"results\":\"103\",\"hashOfConfig\":\"56\"},{\"size\":728,\"mtime\":1697792750306,\"results\":\"104\",\"hashOfConfig\":\"56\"},{\"size\":2560,\"mtime\":1697792750304,\"results\":\"105\",\"hashOfConfig\":\"56\"},{\"size\":2653,\"mtime\":1697792750308,\"results\":\"106\",\"hashOfConfig\":\"56\"},{\"size\":2545,\"mtime\":1697792750307,\"results\":\"107\",\"hashOfConfig\":\"56\"},{\"size\":1316,\"mtime\":1698012733667,\"results\":\"108\",\"hashOfConfig\":\"56\"},{\"size\":3032,\"mtime\":1698038717405,\"results\":\"109\",\"hashOfConfig\":\"56\"},{\"size\":1926,\"mtime\":1698038717406,\"results\":\"110\",\"hashOfConfig\":\"56\"},{\"filePath\":\"111\",\"messages\":\"112\",\"suppressedMessages\":\"113\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0},\"1u8wuzz\",{\"filePath\":\"114\",\"messages\":\"115\",\"suppressedMessages\":\"116\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":8,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":null},{\"filePath\":\"117\",\"messages\":\"118\",\"suppressedMessages\":\"119\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0},{\"filePath\":\"120\",\"messages\":\"121\",\"suppressedMessages\":\"122\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0},{\"filePath\":\"123\",\"messages\":\"124\",\"suppressedMessages\":\"125\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":6,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":null},{\"filePath\":\"126\",\"messages\":\"127\",\"suppressedMessages\":\"128\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":3,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":null},{\"filePath\":\"129\",\"messages\":\"130\",\"suppressedMessages\":\"131\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0},{\"filePath\":\"132\",\"messages\":\"133\",\"suppressedMessages\":\"134\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":1,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"135\"},{\"filePath\":\"136\",\"messages\":\"137\",\"suppressedMessages\":\"138\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":6,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":null},{\"filePath\":\"139\",\"messages\":\"140\",\"suppressedMessages\":\"141\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0},{\"filePath\":\"142\",\"messages\":\"143\",\"suppressedMessages\":\"144\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":10,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":null},{\"filePath\":\"145\",\"messages\":\"146\",\"suppressedMessages\":\"147\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":4,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"148\"},{\"filePath\":\"149\",\"messages\":\"150\",\"suppressedMessages\":\"151\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":1,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"152\"},{\"filePath\":\"153\",\"messages\":\"154\",\"suppressedMessages\":\"155\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0},{\"filePath\":\"156\",\"messages\":\"157\",\"suppressedMessages\":\"158\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":12,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":null},{\"filePath\":\"159\",\"messages\":\"160\",\"suppressedMessages\":\"161\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":3,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"162\"},{\"filePath\":\"163\",\"messages\":\"164\",\"suppressedMessages\":\"165\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0},\"131ovsd\",{\"filePath\":\"166\",\"messages\":\"167\",\"suppressedMessages\":\"168\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":10,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":null},{\"filePath\":\"169\",\"messages\":\"170\",\"suppressedMessages\":\"171\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":3,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":null},{\"filePath\":\"172\",\"messages\":\"173\",\"suppressedMessages\":\"174\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":2,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"175\"},{\"filePath\":\"176\",\"messages\":\"177\",\"suppressedMessages\":\"178\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":3,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":null},{\"filePath\":\"179\",\"messages\":\"180\",\"suppressedMessages\":\"181\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":1,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"182\"},{\"filePath\":\"183\",\"messages\":\"184\",\"suppressedMessages\":\"185\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":11,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":null},{\"filePath\":\"186\",\"messages\":\"187\",\"suppressedMessages\":\"188\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0},{\"filePath\":\"189\",\"messages\":\"190\",\"suppressedMessages\":\"191\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":4,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"192\"},{\"filePath\":\"193\",\"messages\":\"194\",\"suppressedMessages\":\"195\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":3,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"196\"},{\"filePath\":\"197\",\"messages\":\"198\",\"suppressedMessages\":\"199\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":23,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"200\"},{\"filePath\":\"201\",\"messages\":\"202\",\"suppressedMessages\":\"203\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":3,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":null},{\"filePath\":\"204\",\"messages\":\"205\",\"suppressedMessages\":\"206\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":8,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":null},{\"filePath\":\"207\",\"messages\":\"208\",\"suppressedMessages\":\"209\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":3,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":null},{\"filePath\":\"210\",\"messages\":\"211\",\"suppressedMessages\":\"212\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0},{\"filePath\":\"213\",\"messages\":\"214\",\"suppressedMessages\":\"215\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":1,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"216\"},{\"filePath\":\"217\",\"messages\":\"218\",\"suppressedMessages\":\"219\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0},{\"filePath\":\"220\",\"messages\":\"221\",\"suppressedMessages\":\"222\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":3,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"223\"},{\"filePath\":\"224\",\"messages\":\"225\",\"suppressedMessages\":\"226\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":4,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":null},{\"filePath\":\"227\",\"messages\":\"228\",\"suppressedMessages\":\"229\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":4,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"230\"},{\"filePath\":\"231\",\"messages\":\"232\",\"suppressedMessages\":\"233\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0},{\"filePath\":\"234\",\"messages\":\"235\",\"suppressedMessages\":\"236\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":12,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"237\"},{\"filePath\":\"238\",\"messages\":\"239\",\"suppressedMessages\":\"240\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0},{\"filePath\":\"241\",\"messages\":\"242\",\"suppressedMessages\":\"243\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0},{\"filePath\":\"244\",\"messages\":\"245\",\"suppressedMessages\":\"246\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":4,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"247\"},{\"filePath\":\"248\",\"messages\":\"249\",\"suppressedMessages\":\"250\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":5,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":null},{\"filePath\":\"251\",\"messages\":\"252\",\"suppressedMessages\":\"253\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":2,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"254\"},{\"filePath\":\"255\",\"messages\":\"256\",\"suppressedMessages\":\"257\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":1,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"258\"},{\"filePath\":\"259\",\"messages\":\"260\",\"suppressedMessages\":\"261\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":2,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"262\"},{\"filePath\":\"263\",\"messages\":\"264\",\"suppressedMessages\":\"265\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0},{\"filePath\":\"266\",\"messages\":\"267\",\"suppressedMessages\":\"268\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":8,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"269\"},{\"filePath\":\"270\",\"messages\":\"271\",\"suppressedMessages\":\"272\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":2,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"273\"},{\"filePath\":\"274\",\"messages\":\"275\",\"suppressedMessages\":\"276\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0},{\"filePath\":\"277\",\"messages\":\"278\",\"suppressedMessages\":\"279\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":1,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"280\"},{\"filePath\":\"281\",\"messages\":\"282\",\"suppressedMessages\":\"283\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0},{\"filePath\":\"284\",\"messages\":\"285\",\"suppressedMessages\":\"286\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":3,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":\"287\"},{\"filePath\":\"288\",\"messages\":\"289\",\"suppressedMessages\":\"290\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0},{\"filePath\":\"291\",\"messages\":\"292\",\"suppressedMessages\":\"293\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":3,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":null},\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\index.js\",[],[],\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\App.js\",[\"294\",\"295\",\"296\",\"297\",\"298\",\"299\",\"300\",\"301\"],[],\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\reportWebVitals.js\",[],[],\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Auth\\\\UserContext.js\",[],[],\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Auth\\\\LoginPage.js\",[\"302\",\"303\",\"304\",\"305\",\"306\",\"307\"],[],\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Auth\\\\RegisterPage.js\",[\"308\",\"309\",\"310\"],[],\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Menu\\\\MenuList.js\",[],[],\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Common\\\\SideBar.js\",[\"311\"],[],\"import React, { useState } from 'react';\\r\\nimport axios from 'axios';\\r\\nimport styles from './SideBar.module.css';\\r\\nimport { Link } from 'react-router-dom';\\r\\nimport Chat from '../Chat/Chat';\\r\\n\\r\\nfunction SideBar() {\\r\\n    const [isModalOpen, setIsModalOpen] = useState(false);\\r\\n\\r\\n    const toggleModal = () => {\\r\\n        setIsModalOpen(!isModalOpen);\\r\\n    };\\r\\n\\r\\n    return (\\r\\n        <div className={styles.sideBarBox}>\\r\\n            <Link to='/StoreItemAdd'>등록</Link>\\r\\n            <Link to=\\\"/\\\">오늘의 <br />방사능</Link>\\r\\n            <Link to=\\\"#\\\" onClick={toggleModal}>챗봇</Link>\\r\\n            {isModalOpen && <Chat closeModal={toggleModal} />}\\r\\n        </div>\\r\\n    );\\r\\n}\\r\\n\\r\\nexport default SideBar;\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Common\\\\Header.js\",[\"312\",\"313\",\"314\",\"315\",\"316\",\"317\"],[],\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Test\\\\Test.js\",[],[],\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\routes\\\\Home.js\",[\"318\",\"319\",\"320\",\"321\",\"322\",\"323\",\"324\",\"325\",\"326\",\"327\"],[],\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Common\\\\Footer.js\",[\"328\",\"329\",\"330\",\"331\"],[],\"import React, {useEffect, useState} from 'react';\\r\\nimport axios from 'axios';\\r\\nimport styles from './Footer.module.css';\\r\\n\\r\\n\\r\\nfunction Footer() {\\r\\n  return (\\r\\n    <div className={styles.footerBox}>\\r\\n      <img src='/images/LogoPage.png' />\\r\\n    </div>\\r\\n  )\\r\\n}\\r\\n\\r\\nexport default Footer;\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Menu\\\\MenuRegisterationForm.js\",[\"332\"],[],\"import React, { useState } from 'react';\\r\\nimport { useNavigate } from 'react-router-dom';\\r\\nimport axios, { formToJSON } from 'axios';\\r\\nimport { sendAxiosRequest } from '../utility/common';\\r\\n\\r\\nfunction MenuRegisterationForm() {\\r\\n  const [menu, setMenu] = useState({\\r\\n    menuImage: null,\\r\\n    menuName: '',\\r\\n    menuSize: '',\\r\\n    menuPrice: '',\\r\\n    menuContent: '',\\r\\n  });\\r\\n\\r\\n  const [previewImage, setPreviewImage] = useState(null); // 이미지 미리보기 URL\\r\\n\\r\\n  const handleImageChange = (e) => {\\r\\n    const file = e.target.files[0];\\r\\n    if (!file) {\\r\\n      return;\\r\\n    }\\r\\n\\r\\n    const reader = new FileReader();\\r\\n    reader.onloadend = () => {\\r\\n      // 이미지 파일 데이터를 상태에 저장하고 미리보기 설정\\r\\n      setMenu({ ...menu, menuImage: file });\\r\\n      setPreviewImage(reader.result);\\r\\n    };\\r\\n    reader.readAsDataURL(file);\\r\\n  };\\r\\n\\r\\n  const handleChange = (e) => {\\r\\n    const { name, value } = e.target;\\r\\n    setMenu({ ...menu, [name]: value });\\r\\n  };\\r\\n\\r\\n\\r\\n  const navigate = useNavigate();\\r\\n\\r\\n  const handleSubmit = (e) => {\\r\\n    e.preventDefault();\\r\\n\\r\\n    let formData = new FormData(e.target);\\r\\n    let formObj = formToJSON(formData);\\r\\n    sendAxiosRequest('/api/menu/new', 'POST', formObj, response => {\\r\\n      console.log('메뉴 응답값:', response.data);\\r\\n      alert('메뉴등록에 성공하셨습니다!');\\r\\n      navigate('/');\\r\\n    },\\r\\n      error => {\\r\\n        console.error('API 호출 중 에러 발생: ', error);\\r\\n        alert('메뉴등록에 실패하셨습니다!');\\r\\n      }\\r\\n    )\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div style={styles.container}>\\r\\n      <form onSubmit={handleSubmit} style={styles.form}>\\r\\n      <h2>메뉴 등록</h2>\\r\\n        <div>\\r\\n          <label>메뉴 이미지:</label>\\r\\n          <input style={styles.input} type=\\\"file\\\" onChange={handleImageChange} />\\r\\n          {previewImage && (\\r\\n            <div>\\r\\n              <h3>이미지 미리보기:</h3>\\r\\n              <img src={previewImage} alt=\\\"미리보기\\\" style={{ height: '100px' }} /> {/* 미리보기 이미지 크기는 조절 가능 */}\\r\\n            </div>\\r\\n          )}\\r\\n        </div>\\r\\n        <div>\\r\\n          <label>메뉴 이름:</label>\\r\\n          <input style={styles.input} type=\\\"text\\\" name=\\\"menuName\\\" value={menu.menuName} onChange={handleChange} />\\r\\n        </div>\\r\\n        <div>\\r\\n          <label>메뉴 사이즈:</label>\\r\\n          <input style={styles.input} type=\\\"text\\\" name=\\\"menuSize\\\" value={menu.menuSize} onChange={handleChange} />\\r\\n        </div>\\r\\n        <div>\\r\\n          <label>메뉴 가격:</label>\\r\\n          <input style={styles.input} type=\\\"number\\\" name=\\\"menuPrice\\\" value={menu.menuPrice} onChange={handleChange} />\\r\\n        </div>\\r\\n        <div>\\r\\n          <label>메뉴 설명:</label>\\r\\n          <textarea name=\\\"menuContent\\\" value={menu.menuContent} onChange={handleChange} />\\r\\n        </div>\\r\\n        <button type=\\\"submit\\\" style={styles.submitButton}>메뉴 등록</button>\\r\\n      </form>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\\r\\nconst styles = {\\r\\n  container: {\\r\\n    display: 'flex',\\r\\n    justifyContent: 'center',\\r\\n    alignItems: 'center',\\r\\n    height: '30vh',\\r\\n  },\\r\\n  form: {\\r\\n    display: 'flex',\\r\\n    flexDirection: 'column',\\r\\n    alignItems: 'center', // 폼 내용을 중앙 정렬합니다.\\r\\n    padding: '20px',  // 내부 패딩을 추가합니다.\\r\\n    borderRadius: '12px',  // 모서리를 둥글게 합니다.\\r\\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2)', // 약간의 그림자 효과를 추가합니다.\\r\\n    background: 'white', // 배경색을 흰색으로 설정합니다.\\r\\n    width: '800px', \\r\\n  },\\r\\n  input: {\\r\\n    padding: '10px',\\r\\n    margin: '5px 0',\\r\\n    borderRadius: '6px',\\r\\n    border: '1px solid #ccc',\\r\\n    outline: 'none',\\r\\n    width: '300px', \\r\\n  },\\r\\n  submitButton: {\\r\\n    padding: '10px 20px',\\r\\n    cursor: 'pointer',\\r\\n    backgroundColor: '#0575E6',\\r\\n    border: 'none',\\r\\n    borderRadius: '8px',\\r\\n    color: 'white',\\r\\n  },\\r\\n}\\r\\n\\r\\n\\r\\nexport default MenuRegisterationForm;\\r\\n\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Market\\\\TabBar.js\",[],[],\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Market\\\\StoreList.js\",[\"333\",\"334\",\"335\",\"336\",\"337\",\"338\",\"339\",\"340\",\"341\",\"342\",\"343\",\"344\"],[],\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Market\\\\MarketDetailPage.js\",[\"345\",\"346\",\"347\"],[],\"import React, { useState } from 'react';\\r\\nimport TabBar from './TabBar';\\r\\nimport MenuList from '../Menu/MenuList';\\r\\nimport Button from '../MainPage/Button';\\r\\nimport StoreInfo from './StoreInfo';\\r\\nimport ReviewSection from '../Review/ReviewSection';\\r\\nimport { useEffect } from 'react';\\r\\nimport { useLocation } from 'react-router-dom';\\r\\nimport { sendAxiosRequest } from '../utility/common';\\r\\nimport { MenuItem } from '@mui/material';\\r\\nimport OrderModal from './OrderModal';\\r\\nimport { useUser } from '../Auth/UserContext';\\r\\n\\r\\n\\r\\nfunction MarketDetailPage() {\\r\\n\\r\\n  const [activeTab, setActiveTab] = useState('info');\\r\\n  const [modal, setModal] = useState(false);\\r\\n  const [menuData, setMenuData] = useState([]); // 메뉴 데이터를 저장할 상태\\r\\n\\r\\n  const location = useLocation(); // 추가된 부분\\r\\n  const store = location.state; // 추가된 부분\\r\\n\\r\\n\\r\\n  const storeInfo = {\\r\\n    image: '/images/storeimage.png',\\r\\n    name: '대원수산',\\r\\n    location: '서울특별시 동작구 노들로 674 노량진수산시장 , 2층 활어 2-15호 강변상회',\\r\\n    hours: '월요일 (오늘) 09:00 ~ 21:00',\\r\\n    phone: '02-1234-5678',\\r\\n  };\\r\\n\\r\\n\\r\\n\\r\\n  useEffect(() => {\\r\\n    if (store && store.storeNo) {\\r\\n      // 상점 번호가 있는 경우에만 요청을 실행합니다.\\r\\n      sendAxiosRequest(`/api/menu/${store.storeNo}`, 'GET', null, response => {\\r\\n        if (response.data && response.data.length > 0) {\\r\\n          console.log(response.data);\\r\\n          setMenuData(response.data.map((menu) => ({\\r\\n            ...menu, \\r\\n            count: 0\\r\\n          }))); // 받아온 데이터로 상태를 업데이트합니다.\\r\\n          console.log(menuData);\\r\\n        }\\r\\n      }, error => {\\r\\n        console.error(\\\"An error occurred while fetching the menus:\\\", error);\\r\\n      });\\r\\n    }\\r\\n  }, [])\\r\\n\\r\\n\\r\\n\\r\\n  const handleOrderClick = () => {\\r\\n    // alert('주문하기 버튼 클릭!');\\r\\n    setModal(true);\\r\\n    console.log(modal);\\r\\n  };\\r\\n\\r\\n  const closeModal = () => {\\r\\n    setModal(false);\\r\\n  };\\r\\n\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <div style={infoContainerStyle}>\\r\\n      <StoreInfo storeInfo={storeInfo} store={store} />\\r\\n      </div>\\r\\n      <div style={tabContainerStyle}>\\r\\n        <TabBar activeTab={activeTab} onTabClick={setActiveTab} />\\r\\n        {activeTab === 'menu' && <Button onClick={handleOrderClick} buttonText=\\\"주문하기\\\" />}\\r\\n        <OrderModal store={store} menus={menuData} isOpen={modal} onClose={closeModal} setMenuData={setMenuData} />\\r\\n      </div>\\r\\n      {activeTab === 'info' && <p>여기에 가게정보를 표시합니다.</p>}\\r\\n      {activeTab === 'menu' && <MenuList menus={menuData}/>}\\r\\n      {activeTab === 'review' && <ReviewSection />}\\r\\n    </div>\\r\\n\\r\\n  );\\r\\n}\\r\\n\\r\\nconst infoContainerStyle = {\\r\\n  marginBottom: '0px', // 예시: 아래쪽 마진을 추가하여 공간 생성\\r\\n};\\r\\n\\r\\nconst tabContainerStyle = {\\r\\n  display: 'flex',\\r\\n  flexDirection: 'column',\\r\\n  alignItems: 'center'\\r\\n};\\r\\n\\r\\n\\r\\nexport default MarketDetailPage;\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\MyPage\\\\StoreMyPage.js\",[],[],\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\MyPage\\\\StoreItemRegister.js\",[\"348\",\"349\",\"350\",\"351\",\"352\",\"353\",\"354\",\"355\",\"356\",\"357\"],[],\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\MyPage\\\\UserEditPage.js\",[\"358\",\"359\",\"360\"],[],\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\MyPage\\\\StoreRegisterPage.js\",[\"361\",\"362\"],[],\"import React, { useState } from 'react';\\r\\n// import { Form, Card, Button } from 'react-bootstrap';\\r\\nimport { useNavigate } from 'react-router-dom';\\r\\nimport axios, { formToJSON } from 'axios';\\r\\n\\r\\n\\r\\n\\r\\nfunction StoreRegisterPage() {\\r\\n\\r\\n\\r\\n  const navigate = useNavigate();\\r\\n  const handleSubmit = async (e) => {\\r\\n    e.preventDefault();\\r\\n    console.log(e.target);\\r\\n    let formData = new FormData(e.target);\\r\\n\\r\\n    let jsonObj = formToJSON(formData);\\r\\n\\r\\n    console.log(jsonObj);\\r\\n\\r\\n    // POST 요청 생성\\r\\n    axios.post('/api/store/signup', jsonObj, {\\r\\n      headers: {\\r\\n        'Content-Type': 'application/json'\\r\\n      }\\r\\n    })\\r\\n      .then(response => {\\r\\n        // 성공적으로 서버에서 응답을 받은 경우의 처리\\r\\n        console.log('등록된 가게 정보:', response.data);\\r\\n        alert('가게 등록 성공!')\\r\\n        navigate('/mypage');\\r\\n\\r\\n      })\\r\\n      .catch(error => {\\r\\n        // 오류가 발생한 경우의 처리\\r\\n        console.error('에러 발생:', error);\\r\\n      });\\r\\n\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div style={styles.container}>\\r\\n      <form onSubmit={handleSubmit} style={styles.form}>\\r\\n      <div>\\r\\n        <h2>가게 등록 </h2>\\r\\n        </div>\\r\\n        <div>\\r\\n        <label>시장명: </label>\\r\\n        <input style={styles.input} type=\\\"text\\\" name=\\\"marketName\\\" />\\r\\n        </div>\\r\\n        <div>\\r\\n        <label>가게명: </label>\\r\\n        <input style={styles.input} type=\\\"text\\\" name=\\\"storeName\\\" />\\r\\n        </div>\\r\\n        <div>\\r\\n        <label>사업자등록번호: </label>\\r\\n        <input style={styles.input} type=\\\"text\\\" name=\\\"licenseNo\\\" />\\r\\n        </div>\\r\\n        <div>\\r\\n        <label>우편번호: </label>\\r\\n        <input style={styles.input} type=\\\"text\\\" name=\\\"storeZipcode\\\" />\\r\\n        </div>\\r\\n        <div>\\r\\n        <label>기본주소: </label>\\r\\n        <input style={styles.input} type=\\\"text\\\" name=\\\"storeAddr\\\" />\\r\\n        </div>\\r\\n        <div>\\r\\n        <label>상세주소: </label>\\r\\n        <input style={styles.input} type=\\\"text\\\" name=\\\"storeDetailAddr\\\" />\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div>\\r\\n          <label>평일운영시작시간: </label>\\r\\n          <input style={styles.input} type=\\\"time\\\" name=\\\"weekdayStartTime\\\" />\\r\\n        </div>\\r\\n        <div>\\r\\n          <label>평일운영종료시간: </label>\\r\\n          <input style={styles.input} type=\\\"time\\\" name=\\\"weekdayEndTime\\\" />\\r\\n        </div>\\r\\n        <div>\\r\\n          <label>주말운영시작시간: </label>\\r\\n          <input style={styles.input} type=\\\"time\\\" name=\\\"weekendStartTime\\\" />\\r\\n        </div>\\r\\n        <div>\\r\\n          <label>주말운영종료시간: </label>\\r\\n          <input style={styles.input} type=\\\"time\\\" name=\\\"weekendEndTime\\\" />\\r\\n        </div>\\r\\n\\r\\n        <button type=\\\"submit\\\" style={styles.submitButton}> 가게 등록</button>\\r\\n\\r\\n      </form>\\r\\n    </div>\\r\\n\\r\\n  );\\r\\n}\\r\\n\\r\\nconst styles = {\\r\\n  container: {\\r\\n    display: 'flex',\\r\\n    justifyContent: 'center',\\r\\n    alignItems: 'center',\\r\\n    height: '60vh',\\r\\n  },\\r\\n  card: {\\r\\n    width: '50%', \\r\\n    boxShadow: '0 8px 30px rgba(0, 0, 0, 0.12)',\\r\\n    borderRadius: '20px', \\r\\n    padding: '20px', \\r\\n  },\\r\\n\\r\\n  title: {\\r\\n    fontSize: '1.8rem',\\r\\n    marginBottom: '30px',\\r\\n    textAlign: 'center',\\r\\n  },\\r\\n  button: {\\r\\n    background: 'linear-gradient(to right, #6a11cb, #2575fc)',\\r\\n    border: 'none',\\r\\n    padding: '10px 20px',\\r\\n    color: 'white',\\r\\n    borderRadius: '25px',\\r\\n    transition: 'all 0.2s',\\r\\n    cursor: 'pointer',\\r\\n    transition: 'all 0.3s', \\r\\n    '&:hover': {\\r\\n      transform: 'scale(1.1)', \\r\\n    },\\r\\n  },\\r\\n  form: {\\r\\n    display: 'flex',\\r\\n    flexDirection: 'column',\\r\\n    alignItems: 'center', // 폼 내용을 중앙 정렬합니다.\\r\\n    padding: '20px',  // 내부 패딩을 추가합니다.\\r\\n    borderRadius: '12px',  // 모서리를 둥글게 합니다.\\r\\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2)', // 약간의 그림자 효과를 추가합니다.\\r\\n    background: 'white', // 배경색을 흰색으로 설정합니다.\\r\\n    width: '800px', \\r\\n  },\\r\\n  input: {\\r\\n    padding: '10px',\\r\\n    margin: '5px 0',\\r\\n    borderRadius: '6px',\\r\\n    border: '1px solid #ccc',\\r\\n    outline: 'none',\\r\\n    width: '300px', \\r\\n  },\\r\\n  submitButton: {\\r\\n    padding: '10px 20px',\\r\\n    cursor: 'pointer',\\r\\n    backgroundColor: '#0575E6',\\r\\n    border: 'none',\\r\\n    borderRadius: '8px',\\r\\n    color: 'white',\\r\\n  },\\r\\n};\\r\\n\\r\\n\\r\\n\\r\\nexport default StoreRegisterPage;\\r\\n\\r\\n\\r\\n\\r\\n// import * as React from 'react';\\r\\n// import { Button, TextField, Box, Typography, Container } from '@mui/material';\\r\\n// import { useNavigate } from 'react-router-dom';\\r\\n// import axios from 'axios';\\r\\n\\r\\n// function StoreRegisterPage() {\\r\\n//   const navigate = useNavigate();\\r\\n\\r\\n//   const handleSubmit = async (e) => {\\r\\n//     e.preventDefault();\\r\\n//     const formData = new FormData(e.currentTarget);\\r\\n//     // 폼 데이터를 JSON으로 변환하는 로직이 필요합니다.\\r\\n//     // formToJSON 함수를 정의하거나 다른 방법을 사용하세요.\\r\\n\\r\\n//     // JSON 객체 생성\\r\\n//     let jsonObj = {}; \\r\\n//     formData.forEach((value, key) => { jsonObj[key] = value });\\r\\n\\r\\n//     console.log(jsonObj);\\r\\n\\r\\n//     // POST 요청 생성\\r\\n//     axios.post('/api/store/signup', jsonObj, {\\r\\n//       headers: {\\r\\n//         'Content-Type': 'application/json'\\r\\n//       }\\r\\n//     })\\r\\n//       .then(response => {\\r\\n//         console.log('등록된 가게 정보:', response.data);\\r\\n//         // navigate('/path-after-success'); // 성공 후 리디렉션 경로\\r\\n//       })\\r\\n//       .catch(error => {\\r\\n//         console.error('에러 발생:', error);\\r\\n//       });\\r\\n//   };\\r\\n\\r\\n//   // Material-UI 컴포넌트를 사용한 레이아웃\\r\\n//   return (\\r\\n//     <Container component=\\\"main\\\" maxWidth=\\\"xs\\\">\\r\\n//       <Box\\r\\n//         sx={{\\r\\n//           marginTop: 8,\\r\\n//           display: 'flex',\\r\\n//           flexDirection: 'column',\\r\\n//           alignItems: 'center',\\r\\n//         }}\\r\\n//       >\\r\\n//         <Typography component=\\\"h1\\\" variant=\\\"h5\\\">\\r\\n//           가게 등록\\r\\n//         </Typography>\\r\\n//         <Box component=\\\"form\\\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\\r\\n//           <TextField\\r\\n//             margin=\\\"normal\\\"\\r\\n//             required\\r\\n//             fullWidth\\r\\n//             id=\\\"marketName\\\"\\r\\n//             label=\\\"시장명\\\"\\r\\n//             name=\\\"marketName\\\"\\r\\n//             autoComplete=\\\"market-name\\\"\\r\\n//             autoFocus\\r\\n//           />\\r\\n//           {/* 다른 필드들도 이와 유사한 형태로 추가합니다. */}\\r\\n//           {/* 예시: */}\\r\\n//           <TextField\\r\\n//             margin=\\\"normal\\\"\\r\\n//             required\\r\\n//             fullWidth\\r\\n//             name=\\\"storeName\\\"\\r\\n//             label=\\\"가게명\\\"\\r\\n//             id=\\\"storeName\\\"\\r\\n//             autoComplete=\\\"store-name\\\"\\r\\n//           />\\r\\n//           {/* 나머지 필드를 여기에 추가 */}\\r\\n//           {/* ... */}\\r\\n//           <Button\\r\\n//             type=\\\"submit\\\"\\r\\n//             fullWidth\\r\\n//             variant=\\\"contained\\\"\\r\\n//             sx={{ mt: 3, mb: 2 }}\\r\\n//           >\\r\\n//             가게 등록\\r\\n//           </Button>\\r\\n//         </Box>\\r\\n//       </Box>\\r\\n//     </Container>\\r\\n//   );\\r\\n// }\\r\\n\\r\\n// export default StoreRegisterPage;\\r\\n\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\MyPage\\\\MyPage.js\",[\"363\",\"364\",\"365\"],[],\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\MyPage\\\\MyOrder.js\",[\"366\"],[],\"import React, { useEffect } from 'react';\\r\\nimport { Link } from 'react-router-dom';\\r\\nimport { useState } from 'react';\\r\\nimport MyOrderContent from './MyOrderContent';\\r\\n\\r\\n\\r\\nfunction MyOrder() {\\r\\n\\r\\n  const order1 = {\\r\\n    orderPrice:'10000',\\r\\n    recipientPhone:'01011111111',\\r\\n    recipientName: '김성주',\\r\\n    recipientZipcode: '1111',\\r\\n    recipientAddr: '기본주소',\\r\\n    recipientDetailAddr: '상세주소',\\r\\n    regDatetime: '2023-09-01 15:00:00',\\r\\n    mdfDatetime: '2023-09-01 15:00:00',\\r\\n    orderStatus: 'Y'\\r\\n  }\\r\\n\\r\\n  const order2 = {\\r\\n    orderPrice:'20000',\\r\\n    recipientPhone:'01011111111',\\r\\n    recipientName: '김성주2',\\r\\n    recipientZipcode: '1111',\\r\\n    recipientAddr: '기본주소',\\r\\n    recipientDetailAddr: '상세주소',\\r\\n    regDatetime: '2023-09-01 15:00:00',\\r\\n    mdfDatetime: '2023-09-01 15:00:00',\\r\\n    orderStatus: 'N'\\r\\n  }\\r\\n\\r\\n  const order3 = {\\r\\n    orderPrice:'10000',\\r\\n    recipientPhone:'01011111111',\\r\\n    recipientName: '김성주',\\r\\n    recipientZipcode: '1111',\\r\\n    recipientAddr: '기본주소',\\r\\n    recipientDetailAddr: '상세주소',\\r\\n    regDatetime: '2023-09-01 15:00:00',\\r\\n    mdfDatetime: '2023-09-01 15:00:00',\\r\\n    orderStatus: 'Y'\\r\\n  }\\r\\n\\r\\n\\r\\n  const orderlist = [order1, order2, order3]\\r\\n\\r\\n  const [selected, setSelected] = useState([]);\\r\\n\\r\\n  const onClick = (e) => {\\r\\n    setSelected(e.target.value);\\r\\n  };\\r\\n\\r\\n  useEffect(()=>{\\r\\n    console.log(selected);\\r\\n  }, [selected])\\r\\n\\r\\n  // let content = (selected === 'Delivered') ? \\r\\n  // <MyOrderContent orderlist = {orderlist.filter((item)=>item.orderStatus === 'N')}/> : \\r\\n  // <MyOrderContent orderlist = {orderlist.filter((item)=>item.orderStatus === 'Y')} />;\\r\\n\\r\\n  let content = (\\r\\n    (selected === 'Delivered') ? <MyOrderContent orderlist = {orderlist.filter((item)=>item.orderStatus === 'Y')}/> : \\r\\n    (selected === 'Canceled') ? <MyOrderContent orderlist = {orderlist.filter((item)=>item.orderStatus === 'N')} />:\\r\\n    null\\r\\n  )\\r\\n\\r\\n  return (\\r\\n      <>\\r\\n        <h2>마이오더</h2>\\r\\n        <div>\\r\\n          <button value={'Delivered'} onClick = {onClick}>Delivered</button>\\r\\n          <button value={'Canceled'} onClick = {onClick}>Canceled</button>\\r\\n        </div>\\r\\n        <div>\\r\\n          {/* <MyOrderContent /> */}\\r\\n          {content}\\r\\n        </div>\\r\\n      \\r\\n      \\r\\n      </>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default MyOrder;\\r\\n\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\StoreItemDailyPrice\\\\StoreItemDailyPrice.js\",[\"367\",\"368\",\"369\",\"370\",\"371\",\"372\",\"373\",\"374\",\"375\",\"376\",\"377\"],[],\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\utility\\\\common.js\",[],[],\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Pay\\\\Pay.js\",[\"378\",\"379\",\"380\",\"381\"],[],\"import React, { useEffect, useState } from 'react';\\r\\nimport axios from 'axios';\\r\\n// import swal from 'sweetalert';\\r\\n// import { response } from 'express';\\r\\n// import { error } from 'console';\\r\\n\\r\\nconst Payment = () => {\\r\\n  useEffect(() => {\\r\\n    const jquery = document.createElement(\\\"script\\\");\\r\\n    jquery.src = \\\"http://code.jquery.com/jquery-1.12.4.min.js\\\";\\r\\n    const iamport = document.createElement(\\\"script\\\");\\r\\n    iamport.src = \\\"https://cdn.iamport.kr/v1/iamport.js\\\";\\r\\n    document.head.appendChild(jquery);\\r\\n    document.head.appendChild(iamport);\\r\\n    return () => {\\r\\n      document.head.removeChild(jquery);\\r\\n      document.head.removeChild(iamport);\\r\\n    };\\r\\n  }, []);\\r\\n\\r\\n  function sendAxiosRequest(url, method, params, successCallback, errorCallback) {\\r\\n    console.log(url);\\r\\n    const axiosConfig = {\\r\\n      timeout: 5000,\\r\\n      url: url,\\r\\n      method: method,\\r\\n    };\\r\\n    if (params != null)\\r\\n      axiosConfig.params = params;\\r\\n    axios(axiosConfig).then(successCallback).catch(errorCallback);\\r\\n  }\\r\\n\\r\\n  const memberNo = 1;\\r\\n  const payNo = 1;\\r\\n  const orderNo = 1;\\r\\n  const [member, setMember] = useState(null);\\r\\n  const [pay, setPay] = useState(null);\\r\\n  const [order, setOrder] = useState(null);\\r\\n\\r\\n  useEffect(() => {\\r\\n    // Fetch member data\\r\\n    sendAxiosRequest(`/api/member/${memberNo}`, 'GET', null,\\r\\n      response => {\\r\\n\\r\\n        console.log('Member data:', response.data);\\r\\n        setMember(response.data); // Update member state\\r\\n      },\\r\\n      error => {\\r\\n        console.error('Error fetching member data:', error);\\r\\n      }\\r\\n    );\\r\\n\\r\\n    // Fetch order data\\r\\n    sendAxiosRequest(`/api/order/detail/${orderNo}`, 'GET', null,\\r\\n      response => {\\r\\n        console.log('Order data:', response.data);\\r\\n        setOrder(response.data); // Update order state\\r\\n      },\\r\\n      error => {\\r\\n        console.error('Error fetching order data:', error);\\r\\n      }\\r\\n    );\\r\\n  }, []); // Empty dependency array to ensure this effect runs only once\\r\\n\\r\\n  const requestPay = () => {\\r\\n    console.log('memberState', member);\\r\\n    console.log('orderState', order);\\r\\n\\r\\n    const { IMP } = window;\\r\\n    const buyerEmail = member ? member.memberEmail : '';\\r\\n    const buyerName = member ? member.memberName : '';\\r\\n    const buyerTel = member ? member.memberPhone : '';\\r\\n    const name = order ? order.orderNo : '';\\r\\n    const buyerAddr = order ? order.resipientAddr : '';\\r\\n    const buyerPostcode = order ? order.resipientZipcode : '';\\r\\n    const amount = order.orderPrice;\\r\\n\\r\\n    IMP.init('imp11340204');\\r\\n\\r\\n    IMP.request_pay({\\r\\n      pg: 'kakaopay.TC0ONETIME',\\r\\n      pay_method: 'card',\\r\\n      merchant_uid: new Date().getTime(),\\r\\n      name: name,\\r\\n      amount: amount,\\r\\n      buyer_email: buyerEmail,\\r\\n      buyer_name: buyerName,\\r\\n      buyer_tel: buyerTel,\\r\\n      buyer_addr: buyerAddr,\\r\\n      buyer_postcode: buyerPostcode,\\r\\n    }, async (rsp) => {\\r\\n      console.log('rsp: ', rsp);\\r\\n      try {\\r\\n        const { data } = await axios.post('/api/pay/verifyIamport/' + rsp.imp_uid);\\r\\n        if (rsp.paid_amount === amount) {\\r\\n          alert('결제 성공!');\\r\\n          const testPay = {\\r\\n            // \\\"payType\\\": \\\"C\\\",\\r\\n            // \\\"orderStatus\\\": \\\"Y\\\",\\r\\n            // \\\"payNo\\\": 123,\\r\\n            orderNo: order.orderNo,\\r\\n            payPrice: amount,\\r\\n            payStatus: rsp.success ? 'Y' : 'N'\\r\\n            // \\\"payDatetime\\\": \\\"2023-10-18T12:34:56\\\",  // 예: ISO 8601 형식의 날짜 및 시간\\r\\n            // \\\"payCancelDatetime\\\": \\\"2023-10-18T14:45:00\\\"  // 예: ISO 8601 형식의 날짜 및 시간\\r\\n          }\\r\\n\\r\\n          console.log('testPay.payStatus: ', testPay.payStatus);\\r\\n\\r\\n          axios.post('/api/pay/createPayment', testPay, {\\r\\n            headers: {\\r\\n              'Content-Type': 'application/json',\\r\\n            },\\r\\n          })\\r\\n            .then(response => {\\r\\n              console.log('Pay data:', response.data);\\r\\n              setPay(response.data);\\r\\n            })\\r\\n            .catch(error => {\\r\\n              console.error('Error fetching pay data:', error);\\r\\n            });\\r\\n\\r\\n        } else if (rsp.paid_amount == amount) {\\r\\n          alert('결제 성공?');\\r\\n        } else {\\r\\n          alert('결제 실패?');\\r\\n        }\\r\\n      } catch (error) {\\r\\n        console.error('Error while verifying payment:', error);\\r\\n        alert('결제 실패');\\r\\n      }\\r\\n    });\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <button onClick={requestPay}>결제하기</button>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default Payment;\\r\\n\\r\\n\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Test\\\\test2.jsx\",[\"382\",\"383\",\"384\"],[],\"import React, { useEffect, useState } from 'react';\\r\\nimport axios from 'axios';\\r\\nimport './Test.css';\\r\\n\\r\\nconst Test = () => {\\r\\n  const [testStatus, setState] = useState({\\r\\n    loading: false,\\r\\n    response: '값을 가져오니라'\\r\\n  });\\r\\n\\r\\n  console.log(\\\"testStatus : \\\",testStatus)\\r\\n  return (\\r\\n    <>\\r\\n      <h1>Test API</h1>\\r\\n      <div className=\\\"response-container\\\">\\r\\n          <p>{testStatus.response}</p>\\r\\n        </div>\\r\\n    </>\\r\\n  );\\r\\n}\\r\\nexport default Test;\\r\\n\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Review\\\\ReviewForm.js\",[\"385\",\"386\",\"387\",\"388\",\"389\",\"390\",\"391\",\"392\",\"393\",\"394\",\"395\",\"396\",\"397\",\"398\",\"399\",\"400\",\"401\",\"402\",\"403\",\"404\",\"405\",\"406\",\"407\"],[],\"import '../utility/Common.css';\\r\\nimport React, { useState, useEffect } from 'react';\\r\\nimport { formToJSON } from 'axios';\\r\\nimport { scrollMoveTop, sendAxiosMultipartRequest, sendAxiosRequest, dateFormatParse, handleInputChange } from '../utility/common';\\r\\n\\r\\n\\r\\nfunction ReviewForm() {\\r\\n  let [loginUser, setLoginUser] = useState(null);\\r\\n\\r\\n  useEffect(() => {\\r\\n    sendAxiosRequest(\\\"/api/member/loginCheck\\\", \\\"GET\\\", null,\\r\\n      response => {\\r\\n        let repLoginUser = response.data.loginUser;\\r\\n        console.log('loginUser#@#@#@#@', response.data);\\r\\n        if (repLoginUser === null) {\\r\\n          window.location.href = '/';\\r\\n        } else {\\r\\n          setLoginUser(repLoginUser);\\r\\n        }\\r\\n      }, error => console.log(error));\\r\\n  }, []);\\r\\n\\r\\n  // 로그인 확인\\r\\n  console.log(loginUser);\\r\\n\\r\\n  if (loginUser != null && loginUser != undefined) {\\r\\n    return (\\r\\n      <div id='maindDiv' className=\\\"review-main-div\\\">\\r\\n        <div id='mainContentDiv' className=\\\"ba-main-content-div\\\">\\r\\n          <ReviewWriteForm loginUser={loginUser}></ReviewWriteForm>\\r\\n          <ReviewListDiv></ReviewListDiv>\\r\\n        </div>\\r\\n        <div id=\\\"topBtnDiv\\\" onClick={scrollMoveTop}>↑</div>\\r\\n      </div >\\r\\n\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\n\\r\\nfunction ReviewWriteForm(props) {\\r\\n  let [loginUser, setLoginUser] = useState(props.loginUser);\\r\\n  let [storeNo, setStoreNo] = useState(1);\\r\\n  let [memberNo, setMemberNo] = useState(1);\\r\\n  let [reviewFreshness, setReviewFreshness] = useState('M');\\r\\n\\r\\n  if (loginUser != null && loginUser != undefined) {\\r\\n\\r\\n    return (\\r\\n      <form id=\\\"reviewWriteForm\\\" encType='multipart/form-data' className='ba-form'>\\r\\n        <label htmlFor='storeNo'><input id='storeNo' name='storeNo' value={storeNo} hidden onChange={(e) => setStoreNo(e.target.value)}></input></label>\\r\\n        <label htmlFor='memberNo'><input id='memberNo' name='memberNo' value={loginUser.memberNo} hidden text onChange={(e) => setMemberNo(e.target.value)}></input></label>\\r\\n        <img className='ba-member-profile' src='http://fvhsczepiibf19983519.cdn.ntruss.com/member/defaultProfile.jpg?type=f&w=50&h=50&ttype=jpg' ></img>\\r\\n        <sapn className='ba-font-name'>{loginUser.memberName}</sapn>\\r\\n        <span className='ba-font-title'>신선도 :</span>\\r\\n        <label htmlFor='freshness-low' className='ba-freshness'><img src='/images/low.png' /><input type=\\\"radio\\\" id='freshness-low' name='reviewFreshness' value={'L'} checked={reviewFreshness === 'L'} onChange={() => setReviewFreshness('L')}></input></label>\\r\\n        <label htmlFor='freshness-medium' className='ba-freshness'><img src='/images/mid.png' /><input type=\\\"radio\\\" id='freshness-medium' name='reviewFreshness' value={'M'} checked={reviewFreshness === 'M'} onChange={() => setReviewFreshness('M')}></input></label>\\r\\n        <label htmlFor='freshness-high' className='ba-freshness'><img src='/images/high.png' /><input type=\\\"radio\\\" id='freshness-high' name='reviewFreshness' value={'H'} checked={reviewFreshness === 'H'} onChange={() => setReviewFreshness('H')}></input></label>\\r\\n        <div>\\r\\n          <textarea name=\\\"reviewContent\\\" className='ba-textarea' />\\r\\n        </div>\\r\\n        <div className='ba-text-left'>\\r\\n          <button type='button' className='ba-btn ba-margin-right10' onClick={() => {\\r\\n            let formData = new FormData(document.getElementById('reviewWriteForm'));\\r\\n            let reviewContentLength = formData.get('reviewContent').trim().length;\\r\\n            console.log(reviewContentLength);\\r\\n\\r\\n            if (reviewContentLength < 1) {\\r\\n              alert('작성하실 리뷰 내용을 입력해주세요!');\\r\\n              return;\\r\\n            }\\r\\n\\r\\n            let inputFile = document.querySelector('input[type=\\\"file\\\"]');\\r\\n            if (inputFile.files.length > 0) {\\r\\n              let files = inputFile.files;\\r\\n              for (let i = 0; i < files.length; i++) {\\r\\n                formData.append(\\\"multipartFiles\\\", files[i]);\\r\\n              }\\r\\n            }\\r\\n\\r\\n            console.log('여기다.');\\r\\n            sendAxiosMultipartRequest('/api/review/add', formData,\\r\\n              response => {\\r\\n                console.log('리뷰작성성공');\\r\\n                window.location.reload();\\r\\n                alert('리뷰를 성공적으로 작성하였습니다!');\\r\\n                console.log(response.data);\\r\\n              }, error => console.log(error));\\r\\n\\r\\n          }}>리뷰작성</button>\\r\\n          <label htmlFor='fileInput' className='ba-file-label'>파일 첨부</label><span id='fileInfoSpan'></span>\\r\\n          <input type='file' id='fileInput' multiple hidden className='ba-file-btn' onChange={(e) => {\\r\\n            let files = e.target.files;\\r\\n            console.log(files);\\r\\n            let fileInfoStr;\\r\\n            for (let i = 0; i < 2; i++) {\\r\\n              fileInfoStr = (i === 0) ? fileInfoStr + ' ' + files[i].name + ', ' : fileInfoStr + ' ' + files[i].name;\\r\\n            }\\r\\n            document.getElementById('fileInfoSpan').textContent = '파일명: ' + fileInfoStr + ' 등 ' + files.length + '개의 첨부파일';\\r\\n          }} />\\r\\n        </div>\\r\\n\\r\\n      </form >\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction ReviewListDiv(props) {\\r\\n  const pageRowCnt = 4;\\r\\n  let [loginUser, setLoginUser] = useState(props.loginUser);\\r\\n  let [startPageNo, setStartPageNo] = useState(0);\\r\\n  let [reviewList, setReviewList] = useState([]);\\r\\n  let [selectedReviewNo, setSelectedReviewNo] = useState(null);\\r\\n  let [newAddLength, setNewAddLength] = useState(pageRowCnt);\\r\\n\\r\\n  useEffect(() => {\\r\\n    const handleScroll = () => {\\r\\n      console.log(newAddLength);\\r\\n      if (newAddLength < pageRowCnt) {\\r\\n        return;\\r\\n      }\\r\\n      if (\\r\\n        window.innerHeight + document.documentElement.scrollTop >=\\r\\n        document.documentElement.scrollHeight - 100\\r\\n      ) {\\r\\n\\r\\n        console.log(\\\"스크롤 이벤트 핸들러 작동\\\");\\r\\n        sendAxiosRequest(`/api/review/list?startPage=${startPageNo}`, 'GET', null, response => {\\r\\n          console.log('response:', response);\\r\\n          console.log('response.data:',response.data);\\r\\n          let addReviewList = response.data.reviewList;\\r\\n          setNewAddLength(response.data.reviewList.length);\\r\\n          let newReviewList = [...reviewList, ...addReviewList];\\r\\n\\r\\n          setStartPageNo(Math.floor(newReviewList.length / pageRowCnt));\\r\\n          setReviewList(newReviewList);\\r\\n        }, error => console.log(error))\\r\\n      }\\r\\n    };\\r\\n\\r\\n    window.addEventListener('scroll', handleScroll);\\r\\n\\r\\n    return () => {\\r\\n      window.removeEventListener('scroll', handleScroll);\\r\\n    }\\r\\n  }, [startPageNo, reviewList]);\\r\\n\\r\\n  useEffect(() => {\\r\\n    sendAxiosRequest(\\\"/api/review/list\\\", \\\"GET\\\", null,\\r\\n      response => {\\r\\n        console.log('response.datasdsd:', response.data);\\r\\n        let data = response.data;\\r\\n        setLoginUser(data.loginUser);\\r\\n        setReviewList(data.reviewList);\\r\\n        setNewAddLength(data.reviewList.length);\\r\\n        setStartPageNo(Math.floor(newAddLength / pageRowCnt));\\r\\n      }, error => console.log(error));\\r\\n  }, []);\\r\\n\\r\\n\\r\\n\\r\\n  return (\\r\\n    <div id=\\\"reviewListDiv\\\" className='review-list-div'>\\r\\n      { reviewList.map((review, index) => (\\r\\n        <div key={index} className='review-div'>\\r\\n          <form id={'reviewUpdateForm' + index}>\\r\\n            <input id={'reviewNo' + index} name='reviewNo' hidden value={review.reviewNo} />\\r\\n\\r\\n            <div className='ba-title-container'>\\r\\n              <img className='ba-member-profile' src='http://fvhsczepiibf19983519.cdn.ntruss.com/member/defaultProfile.jpg?type=f&w=50&h=50&ttype=jpg' />\\r\\n              <div className='ba-title-info'>\\r\\n                <b>{review.member.memberName}</b>\\r\\n                <span><b>작성일:</b><input type='text' value={dateFormatParse(new Date(review.mdfDatetime))} className='ba-input-text' disabled /></span>\\r\\n              </div>\\r\\n              <div className='ba-title-freshness'>\\r\\n                <span className='ba-font-title'>신선도 :</span>\\r\\n                <label htmlFor='freshness-low'>\\r\\n                  <img src='/images/low.png' />\\r\\n                  <input type=\\\"radio\\\" name='reviewFreshness' value={'L'} checked={review.reviewFreshness === 'L'} onChange={(e) => handleInputChange(e, index, reviewList, setReviewList)} />\\r\\n                </label>\\r\\n                <label htmlFor='freshness-mid'>\\r\\n                  <img src='/images/mid.png' />\\r\\n                  <input type=\\\"radio\\\" name='reviewFreshness' value={'M'} checked={review.reviewFreshness === 'M'} onChange={(e) => handleInputChange(e, index, reviewList, setReviewList)} />\\r\\n                </label>\\r\\n                <label htmlFor='freshness-high'>\\r\\n                  <img src='/images/high.png' />\\r\\n                  <input type=\\\"radio\\\" name='reviewFreshness' value={'H'} checked={review.reviewFreshness === 'H'} onChange={(e) => handleInputChange(e, index, reviewList, setReviewList)} />\\r\\n                </label>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <hr />\\r\\n            <div>\\r\\n              {review.reviewAttaches.length > 0 && (\\r\\n                <div className='ba-img-list-div'>\\r\\n                  <img id={'defaultImg' + index} className='ba-img-first' src={`http://kr.object.ncloudstorage.com/bleuauction-bucket/review/${review.reviewAttaches.length > 0 ? review.reviewAttaches[0].saveFilename : ''}`} />\\r\\n\\r\\n                  <div className='ba-div-col-sort'>\\r\\n                    {\\r\\n                      review.reviewAttaches.map((attach) => (\\r\\n                        <div>\\r\\n                          <img className='ba-img-sub-list-div' src={`http://kr.object.ncloudstorage.com/bleuauction-bucket/review/${attach.saveFilename}`} onMouseEnter={(e) => {\\r\\n                            let targetImgSrc = e.target.src;\\r\\n                            let defaultImgId = 'defaultImg' + index;\\r\\n                            console.log(targetImgSrc);\\r\\n                            let defaultImg = document.getElementById(defaultImgId);\\r\\n                            console.log(defaultImg);\\r\\n                            defaultImg.src = targetImgSrc;\\r\\n                          }} />\\r\\n                        </div>\\r\\n                      )\\r\\n                      )\\r\\n                    }\\r\\n                  </div>\\r\\n                </div>\\r\\n              )}\\r\\n              {review.member.memberNo == loginUser.memberNo ?\\r\\n                (<textarea name='reviewContent' value={review.reviewContent} className='ba-textarea' onChange={(e) => handleInputChange(e, index, reviewList, setReviewList)} />)\\r\\n                : (<textarea name='reviewContent' value={review.reviewContent} className='ba-textarea-disabled' readOnly />\\r\\n                )}\\r\\n            </div>\\r\\n\\r\\n            {review.member.memberNo == loginUser.memberNo ?\\r\\n              (<div className='ba-btn-div'>\\r\\n                <div className='ba-file-list'>\\r\\n                  {review.reviewAttaches.map((attach) => (\\r\\n                    <div key={attach.fileNo} className=\\\"ba-file-item\\\">\\r\\n                      <li>{attach.originFilename}</li>\\r\\n                      <p className=\\\"ba-delete-text\\\" onClick={() => {\\r\\n                        sendAxiosRequest(`/api/review/deleteFile?fileNo=${attach.fileNo}`, 'GET', null,\\r\\n                          response => {\\r\\n                            console.log(response.data);\\r\\n                            window.location.reload();\\r\\n                            alert(response.data.originFilename + '(이)가 삭제되었습니다!');\\r\\n                          },\\r\\n                          error => {\\r\\n                            console.log(error);\\r\\n                          }\\r\\n                        );\\r\\n                      }}>[삭제]</p>\\r\\n                    </div>\\r\\n                  ))}\\r\\n                </div>\\r\\n\\r\\n                <button type='button' className='ba-btn ba-margin-right20' onClick={() => {\\r\\n                  let jsonObj = formToJSON(new FormData(document.getElementById('reviewUpdateForm' + index)));\\r\\n                  console.log(jsonObj);\\r\\n                  sendAxiosRequest('/api/review/update', 'POST', jsonObj, response => {\\r\\n                    console.log(response.data);\\r\\n                    console.log('리뷰변경 성공!');\\r\\n                    window.location.reload();\\r\\n                    alert('리뷰를 성공적으로 변경하였습니다!');\\r\\n                  }, error => console.log(error));\\r\\n                }}>리뷰수정</button>\\r\\n                <button type='button' className='ba-btn ba-margin-right10' onClick={\\r\\n                  () => {\\r\\n                    sendAxiosRequest(`/api/review/delete?reviewNo=${review.reviewNo}`, 'GET', null, response => {\\r\\n                      console.log(response.data);\\r\\n                      window.location.reload();\\r\\n                      alert('리뷰가 성공적으로 삭제되었습니다!');\\r\\n                    }, error => {\\r\\n                      console.log(error);\\r\\n                    });\\r\\n                  }}>리뷰삭제</button>\\r\\n              </div>) : (<div></div>)\\r\\n            }\\r\\n\\r\\n            <div className='ba-text-right'>\\r\\n              <button type='button' className='ba-small-btn' onClick={() => {\\r\\n                selectedReviewNo === review.reviewNo ? setSelectedReviewNo(null) : setSelectedReviewNo(review.reviewNo);\\r\\n              }}>답글</button>\\r\\n            </div>\\r\\n          </form>\\r\\n\\r\\n          {\\r\\n            selectedReviewNo == review.reviewNo && (\\r\\n              <AnswerForm reviewNo={review.reviewNo} loginUser={loginUser} />\\r\\n            )\\r\\n          }\\r\\n        </div >\\r\\n      ))\\r\\n      }\\r\\n    </div >\\r\\n  );\\r\\n}\\r\\n\\r\\nfunction AnswerForm(props) {\\r\\n  return (\\r\\n    <div>\\r\\n      <hr />\\r\\n      <div className='ba-text-right'>\\r\\n        <button type='button' className='ba-small-btn' onClick={() => {\\r\\n          document.getElementById('answerWriteFormDiv').style.display = 'block';\\r\\n        }}>답글작성✍\uFE0F</button>\\r\\n      </div>\\r\\n      <div id=\\\"answerWriteFormDiv\\\">\\r\\n        <h4 className='ba-font-title'>답글작성</h4>\\r\\n        <form id=\\\"answerWriteForm\\\">\\r\\n          <input name='reviewNo' hidden value={props.reviewNo}></input>\\r\\n          <input name='memberNo' hidden value={1}></input>\\r\\n          <button type='button' className='ba-close-btn' onClick={\\r\\n            () => {\\r\\n              document.getElementById('answerWriteFormDiv').style.display = 'none';\\r\\n\\r\\n            }\\r\\n          }>x</button>\\r\\n          <div>\\r\\n            <textarea name='answerContent' className='ba-small-textarea'></textarea>\\r\\n          </div>\\r\\n          <div className='ba-btn-div'>\\r\\n            <button type='button' className='ba-btn ba-margin-right40' onClick={() => {\\r\\n              let jsonObj = formToJSON(document.getElementById('answerWriteForm'));\\r\\n              console.log(jsonObj);\\r\\n              if (jsonObj.answerContent.trim().length < 1) {\\r\\n                alert('작성하실 답급 내용을 입력해주세요!');\\r\\n                return;\\r\\n              }\\r\\n              sendAxiosRequest('/api/answer/add', 'POST', jsonObj,\\r\\n                response => {\\r\\n                  window.location.reload();\\r\\n                  alert('답글을 성공적으로 작성하였습니다!');\\r\\n                  console.log(response.data);\\r\\n                }, error => console.log(error));\\r\\n            }}>작성하기</button>\\r\\n          </div>\\r\\n        </form >\\r\\n      </div>\\r\\n      <AnswerListDiv reviewNo={props.reviewNo} loginUser={props.loginUser}></AnswerListDiv>\\r\\n    </div >\\r\\n  );\\r\\n}\\r\\n\\r\\nfunction AnswerListDiv(props) {\\r\\n  const pageRowCnt = 2;\\r\\n  let [answerList, setAnswerList] = useState([]);\\r\\n  let [startPageNo, setStartPageNo] = useState(0);\\r\\n\\r\\n\\r\\n  useEffect(() => {\\r\\n    sendAxiosRequest(`/api/answer/list?reviewNo=${props.reviewNo}`, \\\"GET\\\", null,\\r\\n      response => {\\r\\n        let asnwerList = response.data.answerList;\\r\\n        let totalRows = response.data.totalRows;\\r\\n        console.log('최초 렌더시 totalRow');\\r\\n        console.log(totalRows);\\r\\n        console.log('최초 렌더시 asnwerList.length');\\r\\n        console.log(asnwerList.length);\\r\\n\\r\\n        if (totalRows > asnwerList.length) {\\r\\n          console.log(document.querySelector('.ba-more-btn'));\\r\\n          document.querySelector('.ba-more-btn').hidden = false;\\r\\n        }\\r\\n        setAnswerList(response.data.answerList);\\r\\n        setStartPageNo(response.data.answerList.length / 2);\\r\\n      }, error => console.log(error));\\r\\n\\r\\n    return () => {\\r\\n    }\\r\\n  }, []);\\r\\n\\r\\n  return (\\r\\n    <div id=\\\"answerListDiv\\\" className='answer-list-div'>\\r\\n      {answerList.map((answer, index) => (\\r\\n\\r\\n        < div className='answer-div' key={index} >\\r\\n          <form id={'answerUpdateForm' + index}>\\r\\n            <div className='ba-title-container'>\\r\\n              <img className='ba-member-profile' src='http://fvhsczepiibf19983519.cdn.ntruss.com/member/defaultProfile.jpg?type=f&w=50&h=50&ttype=jpg' />\\r\\n              <div className='ba-title-info'>\\r\\n                <b>{answer.member.memberName}</b>\\r\\n                <span><b>작성일:</b><input type='text' value={dateFormatParse(new Date(answer.mdfDatetime))} className='ba-input-text' disabled /></span>\\r\\n              </div>\\r\\n            </div>\\r\\n            {answer.member.memberNo == props.loginUser.memberNo ?\\r\\n              (\\r\\n                <div>\\r\\n                  <input type='text' name='answerNo' hidden value={answer.answerNo} />\\r\\n                  <input type='text' name='reviewNo' hidden value={answer.reviewNo} />\\r\\n                  <input type='text' name='memberNo' hidden value={answer.member.memberNo} />\\r\\n\\r\\n                  <textarea name='answerContent' value={answer.answerContent} className='ba-textarea' onChange={(e) => {\\r\\n                    handleInputChange(e, index, answerList, setAnswerList);\\r\\n                  }} />\\r\\n                  <div className='ba-btn-div'>\\r\\n                    <button type='button' className='ba-btn ba-margin-right20' onClick={\\r\\n                      () => {\\r\\n                        let jsonObj = formToJSON(new FormData(document.getElementById('answerUpdateForm' + index)));\\r\\n                        console.log(jsonObj);\\r\\n                        sendAxiosRequest(`/api/answer/update?`, 'POST', jsonObj, response => {\\r\\n                          window.location.reload();\\r\\n                          alert('답글이 성공적으로 변경되었습니다!');\\r\\n                        }, error => {\\r\\n                          console.log(error);\\r\\n                        });\\r\\n                      }\\r\\n                    } >답글수정</button>\\r\\n                    <button type='button' className='ba-btn ba-margin-right80' onClick={\\r\\n                      () => {\\r\\n                        sendAxiosRequest(`/api/answer/delete?answerNo=${answer.answerNo}`, 'GET', null, response => {\\r\\n                          window.location.reload();\\r\\n                          alert('답글이 성공적으로 삭제되었습니다!');\\r\\n                        }, error => {\\r\\n                          console.log(error);\\r\\n                        });\\r\\n                      }\\r\\n                    }>답글삭제</button>\\r\\n                  </div>\\r\\n                </div>)\\r\\n              : (<textarea name='answerContent' value={answer.answerContent} className='ba-textarea-disabled' />)}\\r\\n          </form>\\r\\n        </div >\\r\\n      ))\\r\\n      }\\r\\n      <div className='ba-btn-div'>\\r\\n        <button type='button' className='ba-more-btn' hidden onClick={(e) => {\\r\\n          sendAxiosRequest(`/api/answer/list?reviewNo=${props.reviewNo}&startPage=${startPageNo}`, \\\"GET\\\", null,\\r\\n            response => {\\r\\n              console.log(response.data);\\r\\n              let totalRows = response.data.totalRows;\\r\\n              let appendAnswerList = response.data.answerList;\\r\\n              let newAnswerList = [...answerList, ...appendAnswerList];\\r\\n              setAnswerList(newAnswerList);\\r\\n              setStartPageNo(newAnswerList.length / 2);\\r\\n              if (totalRows <= newAnswerList.length) {\\r\\n                e.target.hidden = true;\\r\\n              }\\r\\n\\r\\n            }, error => {\\r\\n              console.log(error);\\r\\n            })\\r\\n        }}>더 보기</button>\\r\\n      </div>\\r\\n    </div >\\r\\n  );\\r\\n}\\r\\n\\r\\n\\r\\nexport default ReviewForm;\\r\\n\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\StoreHome.js\",[\"408\",\"409\",\"410\"],[],\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Market\\\\StoreListItem.js\",[\"411\",\"412\",\"413\",\"414\",\"415\",\"416\",\"417\",\"418\"],[],\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Menu\\\\MenuItem.js\",[\"419\",\"420\",\"421\"],[],\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\MyPage\\\\InputField.js\",[],[],\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Market\\\\StoreInfo.js\",[\"422\"],[],\"// import React from 'react';\\r\\n// import Coupon from '../Coupon/Coupon'; \\r\\n\\r\\n// function StoreIntro({storeInfo, store, coupons }) {\\r\\n//   console.log(store);\\r\\n//   // console.log(storeInfo);\\r\\n\\r\\n//   return (\\r\\n//     <div style={outerContainer}>\\r\\n//     <div style={introContainer}>\\r\\n//       <img src={storeInfo.image} alt={storeInfo.name} style={imageStyle} />\\r\\n//      <div style={storeInfoContainer}>\\r\\n//       <h2>{store.storeName}</h2>\\r\\n//       <ul style={infoList}>\\r\\n//         <li>{store.storeDetailAddr}</li>\\r\\n//         <li>{store.weekdayStartTime} ~ {store.weekdayEndTime}</li>\\r\\n//         <li>{store.store}</li>\\r\\n//       </ul>\\r\\n//       </div>\\r\\n//       {/* <div style={couponContainer}>\\r\\n//         {coupons.map(coupon => (\\r\\n//           <Coupon key={coupon.id} coupon={coupon} />\\r\\n//         ))}\\r\\n//       </div> */}\\r\\n//     </div>\\r\\n//     </div>\\r\\n//   );\\r\\n// }\\r\\n\\r\\n// const outerContainer = {\\r\\n//   display: 'flex',\\r\\n//   justifyContent: 'center',\\r\\n//   alignItems: 'center',\\r\\n//   height: '50vh', // 화면 높이를 100%로 설정 (필요한 경우 조절)\\r\\n//   };\\r\\n\\r\\n// const introContainer = {\\r\\n//     display: 'flex',\\r\\n//     flexDirection: 'column', // children들을 열 방향으로 배열\\r\\n//     alignItems: 'center', // children들을 가운데 정렬\\r\\n//     backgroundColor: '#f0f0f0', // 연한 회색 배경\\r\\n//     padding: '0px',\\r\\n//     borderRadius: '8px', // 소프트한 테두리를 위한 둥근 모서리 추가\\r\\n//     textAlign: 'center',\\r\\n//     width : '70%',\\r\\n//     height: '100%'\\r\\n// };\\r\\n\\r\\n// const storeInfoContainer = {\\r\\n//     textAlign: 'left', \\r\\n//     padding: '20px',\\r\\n//     marginBottom: '50px', // 쿠폰 컨테이너와의 간격을 조절\\r\\n//     width : '100%',\\r\\n//   };\\r\\n\\r\\n// const imageStyle = {\\r\\n//   width: '100%',\\r\\n//   height: 'auto',\\r\\n//   objectFit: 'cover',\\r\\n// };\\r\\n\\r\\n// const infoList = {\\r\\n//   listStyleType: 'none',\\r\\n//   padding: '0',\\r\\n//   margin: '10px 0',\\r\\n// };\\r\\n\\r\\n\\r\\n// export default StoreIntro;\\r\\n\\r\\nimport React from 'react';\\r\\nimport Coupon from '../Coupon/Coupon'; \\r\\n\\r\\nfunction StoreIntro({storeInfo, store, coupons }) {\\r\\n\\r\\n  console.log('storeInfo,',storeInfo);\\r\\n  console.log('store,',store);\\r\\n  // console.log(storeInfo);\\r\\n\\r\\n  return (\\r\\n    <div style={outerContainer}>\\r\\n    <div style={introContainer}>\\r\\n      <img src={storeInfo.image} alt={storeInfo.name} style={imageStyle} />\\r\\n     <div style={storeInfoContainer}>\\r\\n      <h2>{store.storeName}</h2>\\r\\n      <ul style={infoList}>\\r\\n        <li>{store.storeDetailAddr}</li>\\r\\n        <li>{store.weekdayStartTime} ~ {store.weekdayEndTime}</li>\\r\\n        <li>{store.store}</li>\\r\\n      </ul>\\r\\n      </div>\\r\\n      {/* <div style={couponContainer}>\\r\\n        {coupons.map(coupon => (\\r\\n          <Coupon key={coupon.id} coupon={coupon} />\\r\\n        ))}\\r\\n      </div> */}\\r\\n    </div>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\\r\\nconst outerContainer = {\\r\\n    display: 'flex',\\r\\n    justifyContent: 'center',\\r\\n    alignItems: 'center',\\r\\n    height: '50vh', // 화면 높이를 100%로 설정 (필요한 경우 조절)\\r\\n  };\\r\\n\\r\\nconst introContainer = {\\r\\n    display: 'flex',\\r\\n    flexDirection: 'column', // children들을 열 방향으로 배열\\r\\n    alignItems: 'center', // children들을 가운데 정렬\\r\\n    backgroundColor: '#f0f0f0', // 연한 회색 배경\\r\\n    padding: '0px',\\r\\n    borderRadius: '8px', // 소프트한 테두리를 위한 둥근 모서리 추가\\r\\n    textAlign: 'center',\\r\\n    width : '70%',\\r\\n    height: '100%'\\r\\n};\\r\\n\\r\\nconst storeInfoContainer = {\\r\\n    textAlign: 'left', \\r\\n    padding: '20px',\\r\\n    marginBottom: '10px', // 쿠폰 컨테이너와의 간격을 조절\\r\\n    width : '100%',\\r\\n  };\\r\\n\\r\\nconst imageStyle = {\\r\\n  width: '100%',\\r\\n  height: 'auto',\\r\\n  objectFit: 'cover',\\r\\n};\\r\\n\\r\\nconst infoList = {\\r\\n  listStyleType: 'none',\\r\\n  padding: '0',\\r\\n  margin: '10px 0',\\r\\n};\\r\\n\\r\\n\\r\\nexport default StoreIntro;\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Review\\\\ReviewSection.js\",[],[],\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\MainPage\\\\Category.js\",[\"423\",\"424\",\"425\"],[],\"import React, {useEffect, useState} from 'react';\\r\\nimport axios from 'axios';\\r\\nimport styles from './Category.module.css';\\r\\n\\r\\n\\r\\nfunction Category() {\\r\\n\\r\\n  const [selectedOption, setSelectedOption] = useState('');\\r\\n\\r\\n  const handleOptionChange = (event) => {\\r\\n    setSelectedOption(event.target.value);}\\r\\n\\r\\n  return (\\r\\n    <>\\r\\n      <select value={selectedOption} onChange={handleOptionChange}>\\r\\n        <option value=\\\"option1\\\">옵션 1</option>\\r\\n        <option value=\\\"option2\\\">옵션 2</option>\\r\\n        <option value=\\\"option3\\\">옵션 3</option>\\r\\n      </select>\\r\\n\\r\\n      <p>{selectedOption}</p>\\r\\n    </>\\r\\n  );\\r\\n}\\r\\n\\r\\nexport default Category;\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\MyPage\\\\MyOrderContent.js\",[\"426\",\"427\",\"428\",\"429\"],[],\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\MainPage\\\\Announce.js\",[\"430\",\"431\",\"432\",\"433\"],[],\"import React, { useEffect, useState } from 'react';\\r\\nimport axios from 'axios';\\r\\nimport styles from './Announce.module.css';\\r\\nimport 'bootstrap/dist/css/bootstrap.min.css';\\r\\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\\r\\nimport { Carousel } from 'react-bootstrap';\\r\\nimport { useLocation } from 'react-router-dom';\\r\\n\\r\\nfunction Announce() {\\r\\n  const carousel = {\\r\\n    height: '400px',\\r\\n    width: '60%',\\r\\n    margin: '0 auto',\\r\\n    borderRadius: '30px',\\r\\n    overflow: 'hidden'\\r\\n  }\\r\\n\\r\\n  const location = useLocation();\\r\\n  const content = (location.pathname !== \\\"/store/list\\\") ? <img\\r\\n    src=\\\"/images/storeimage.png\\\"\\r\\n    alt=\\\"슬라이드 1\\\"\\r\\n  /> : <img src='/images/login.png' />;\\r\\n\\r\\n  return (\\r\\n    <div style={carousel}>\\r\\n      <Carousel >\\r\\n        {/* 슬라이드 이미지 */}\\r\\n        <Carousel.Item id={styles.carousel}>\\r\\n          {content}\\r\\n\\r\\n          <Carousel.Caption>\\r\\n            <h3>꽃소녀</h3>\\r\\n            <p>김철수 作</p>\\r\\n          </Carousel.Caption>\\r\\n        </Carousel.Item>\\r\\n        <Carousel.Item id={styles.carousel}>\\r\\n          {content}\\r\\n          <Carousel.Caption>\\r\\n            <h3>형형색색</h3>\\r\\n            <p>이숙자 作</p>\\r\\n          </Carousel.Caption>\\r\\n        </Carousel.Item>\\r\\n        <Carousel.Item id={styles.carousel}>\\r\\n          {content}\\r\\n          <Carousel.Caption>\\r\\n            <h3>분홍</h3>\\r\\n            <p>Robert Park 作</p>\\r\\n          </Carousel.Caption>\\r\\n        </Carousel.Item>\\r\\n        <Carousel.Item id={styles.carousel}>\\r\\n          {content}\\r\\n          <Carousel.Caption>\\r\\n            <h3>두꺼운 터치</h3>\\r\\n            <p>Thomas Lee 作</p>\\r\\n          </Carousel.Caption>\\r\\n        </Carousel.Item>\\r\\n      </Carousel>\\r\\n      <div>\\r\\n        쿠폰div\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\\r\\nexport default Announce;\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\MainPage\\\\Button.js\",[],[],\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\StoreHomeItem.js\",[\"434\",\"435\",\"436\",\"437\",\"438\",\"439\",\"440\",\"441\",\"442\",\"443\",\"444\",\"445\"],[],\"import React, {useEffect, useState} from 'react';\\r\\nimport axios from 'axios';\\r\\nimport styles from './StoreHomeItem.module.css';\\r\\nimport { Link, NavLink } from 'react-router-dom';\\r\\nimport Button from 'react-bootstrap/Button';\\r\\nimport Card from 'react-bootstrap/Card';\\r\\nimport Placeholder from 'react-bootstrap/Placeholder';\\r\\nimport { useNavigate } from \\\"react-router-dom\\\";\\r\\n\\r\\n\\r\\n\\r\\nfunction StoreHomeItem({store}) {\\r\\n\\r\\n  function isCurrentTimeInRange(startTime, endTime) {\\r\\n    // 현재 날짜와 시간을 생성\\r\\n    const currentDate = new Date();\\r\\n    // 시작 시간과 종료 시간을 파싱 (예: \\\"08:00\\\" 형식)\\r\\n    \\r\\n    // 현재 시간이 시작 시간과 종료 시간 사이에 있는지 확인\\r\\n    return currentDate >= startTime && currentDate <= endTime;\\r\\n  }\\r\\n\\r\\n  const startTime = new Date();\\r\\n  const [startHours, startMinutes, startSecond] = store.weekdayStartTime.split(':');\\r\\n  startTime.setHours(parseInt(startHours, 10));\\r\\n  startTime.setMinutes(parseInt(startMinutes, 10));\\r\\n  // startTime.setSecond(parseInt(startSecond, 10));\\r\\n\\r\\n  const endTime = new Date();\\r\\n  const [endHours, endMinutes, endSecond] = store.weekdayEndTime.split(':');\\r\\n  endTime.setHours(parseInt(endHours, 10));\\r\\n  endTime.setMinutes(parseInt(endMinutes, 10));\\r\\n  // endTime.setSecond(parseInt(endSecond, 10));\\r\\n\\r\\n  \\r\\n  const isWorking = isCurrentTimeInRange(startTime, endTime) ? '영업중' : '영업 종료';\\r\\n\\r\\n  // console.log(store);\\r\\n\\r\\n\\r\\n\\r\\n  return (\\r\\n    <>\\r\\n    <Link to={'/market/detail'}\\r\\n      state= {store}\\r\\n      className={styles.storeHomeItemDetailBoxMore}>\\r\\n      <Card style={{ width: '18rem' }}>\\r\\n        <img className={styles.storeHomeItemBoss} variant=\\\"top\\\" src=\\\"/images/boss.png\\\" />\\r\\n        <div className={styles.storeHomeItemHeader}>\\r\\n          <p className={styles.storeHomeItemTitle}>{store.storeName}</p>\\r\\n          <p className={styles.storeHomeItemBoxReview}>\\r\\n            <img className={styles.storeHomeItemFresh}src=\\\"/images/fresh.png\\\"/>5.0\\r\\n          </p>\\r\\n        </div>\\r\\n        <div>\\r\\n        <p className={styles.storeHomeItemBoxReview}>\\r\\n        <img className={styles.storeHomeItemStateIcon} src=\\\"/images/heart.png\\\"/>{isWorking}</p>\\r\\n        </div>\\r\\n        {/* <Button className={styles.storeHomeItemDetailBoxMore}>\\r\\n          <Link to=\\\"/\\\" variant=\\\"primary\\\">더보기</Link>\\r\\n        </Button> */}\\r\\n      </Card>\\r\\n    </Link>\\r\\n    </>\\r\\n  )\\r\\n}\\r\\n\\r\\nexport default StoreHomeItem;\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Review\\\\ReviewList.js\",[],[],\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Coupon\\\\Coupon.js\",[],[],\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\StoreItemDailyPrice\\\\StoreItemAdd.js\",[\"446\",\"447\",\"448\",\"449\"],[],\"import React, { useState, useEffect } from 'react';\\r\\nimport axios from 'axios';\\r\\nimport { sendAxiosRequest } from '../utility/common';\\r\\nimport './StoreItemAdd.css';\\r\\nimport { useNavigate } from 'react-router-dom';\\r\\nimport { Hidden } from '@mui/material';\\r\\n\\r\\n\\r\\nfunction StroeItemAdd() {\\r\\n\\r\\n  const [fish, setFish] = useState('');\\r\\n  const [code, setCode] = useState('');\\r\\n  const [size, setSize] = useState('');\\r\\n  const [origin, setOrigin] = useState('');\\r\\n  const [place, setPlace] = useState('');\\r\\n  const [wild, setWild] = useState('');\\r\\n  const [price, setPrice] = useState('');\\r\\n\\r\\n  const handleCode = () => {\\r\\n    setCode(\\r\\n      (fish === '광어'||'우럭'||'도미'||'방어'||'참치') ? 'S' :\\r\\n      (fish === '연어') ? 'F' :\\r\\n      (fish === '오징어') ? 'E' :\\r\\n      (fish === '새우') ? 'C' :\\r\\n      (fish === '가리비'||'전복') ? 'M' : '')\\r\\n    }\\r\\n\\r\\n  const handleSize = (e) => {\\r\\n    setSize(e.target.value)\\r\\n  }\\r\\n\\r\\n  const handlePrice = (e) => {\\r\\n    setPrice(e.target.value)\\r\\n  }\\r\\n\\r\\n  const itemSize = \\r\\n  Number(size) >= 3 ? 'L' :\\r\\n  Number(size) >= 2 ? 'M' : 'S'\\r\\n  \\r\\n\\r\\n  const fishs = {\\r\\n    '광어': 1,\\r\\n    '우럭': 2,\\r\\n    '도미': 3,\\r\\n    '방어': 4,\\r\\n    '참치': 5,\\r\\n    '연어': 6,\\r\\n    '오징어': 7,\\r\\n    '새우': 8,\\r\\n    '가리비': 9,\\r\\n    '전복': 10\\r\\n  }\\r\\n\\r\\n  const codes = {\\r\\n    S: '생선/횟감',\\r\\n    F: '생선/비횟감',\\r\\n    C: '갑각류',\\r\\n    M: '패류',\\r\\n    E: '기타',\\r\\n  };\\r\\n\\r\\n  const DPlace = {\\r\\n    ES: '동해',\\r\\n    WS: '서해',\\r\\n    SS: '남해',\\r\\n    JJ: '제주',\\r\\n    WD: '완도'\\r\\n  }\\r\\n\\r\\n  const IPlace = {\\r\\n    JP: '일본',\\r\\n    CN: '중국',\\r\\n    RU: '러시아',\\r\\n    NW: '노르웨이'\\r\\n  }\\r\\n\\r\\n  const selectPlace = \\r\\n  (origin === \\\"D\\\") ? DPlace : \\r\\n  (origin === \\\"I\\\") ? IPlace : null;\\r\\n\\r\\n  const hiddenButtons = \\r\\n  (selectPlace !== null) ?\\r\\n    Object.keys(selectPlace).map((code) => (\\r\\n      <button\\r\\n        key={code}\\r\\n        className={place === code ? 'selected' : ''}\\r\\n        onClick={() => setPlace(code)}\\r\\n      >\\r\\n        {selectPlace[code]}\\r\\n      </button>\\r\\n    ))\\r\\n    : null;\\r\\n  \\r\\n  const navigate = useNavigate();\\r\\n  \\r\\n  const handleSubmit = () => {\\r\\n    console.log('dddd');\\r\\n    sendAxiosRequest ('/api/item/new', 'POST', item, response => {\\r\\n      console.log(response.data);\\r\\n      console.log(item);\\r\\n      navigate('/');\\r\\n    }, error => {\\r\\n      console.log(error);\\r\\n    });\\r\\n\\r\\n  };\\r\\n\\r\\n  const item = {\\r\\n    'itemName': fish,\\r\\n    'itemCode': code,\\r\\n    'itemSize': itemSize,\\r\\n    'originStatus': origin,\\r\\n    'originPlaceStatus': place,\\r\\n    'wildFarmStatus': wild\\r\\n  }\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  return (\\r\\n    <>\\r\\n      <p>품목 선택</p>\\r\\n      <div className=\\\"freezer_box\\\">\\r\\n      {\\r\\n        Object.keys(fishs).map((name) => (\\r\\n          <div key={name}\\r\\n            className={fish === name ? 'selected' : 'not_selected'} \\r\\n            onClick={() => {setFish(name); handleCode()}}>\\r\\n            <img src={`/images/fish${fishs[name]}.jpg`} alt={name} className='fish_image'/>\\r\\n            <p>{name}</p>\\r\\n          </div>\\r\\n        ))\\r\\n      }\\r\\n      </div>\\r\\n\\r\\n      <div className='fish_size'>\\r\\n        <p>무게 입력 (kg)</p>\\r\\n        <div>\\r\\n          <input\\r\\n              type=\\\"number\\\"\\r\\n              value={size}\\r\\n              onChange={handleSize}\\r\\n              placeholder=\\\"예) 2.5\\\"\\r\\n            />\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div className='fish_size'>\\r\\n        <p>금일 판매 가격 (원)</p>\\r\\n        <div>\\r\\n          <input\\r\\n              type=\\\"number\\\"\\r\\n              value={price}\\r\\n              onChange={handlePrice}\\r\\n              placeholder=\\\"예) 10000\\\"\\r\\n            />\\r\\n        </div>\\r\\n      </div>\\r\\n      \\r\\n      <div className=\\\"fish_origin\\\">\\r\\n        <p>원산지</p>\\r\\n        \\r\\n        <div className=\\\"origin_buttons\\\">\\r\\n          <button className={origin === 'D' ? 'selected' : ''}\\r\\n            onClick={() => setOrigin('D')}>국내산</button>\\r\\n          <button className={origin === 'I' ? 'selected' : ''}\\r\\n            onClick={() => setOrigin('I')}>수입산</button>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div className='fish_place'>\\r\\n        \\r\\n\\r\\n        <div className=\\\"filter_buttons\\\">\\r\\n          {hiddenButtons}\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div className='fish_origin'>\\r\\n        <p>자연산 / 양식</p>\\r\\n\\r\\n        <div className=\\\"origin_buttons\\\">\\r\\n          <button className={wild === 'W' ? 'selected' : ''}\\r\\n            onClick={() => setWild('W')}>자연산</button>\\r\\n          <button className={wild === 'F' ? 'selected' : ''}\\r\\n            onClick={() => setWild('F')}>양식</button>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div className='fish_origin'>\\r\\n        <div className=\\\"origin_buttons\\\">\\r\\n        <button onClick={handleSubmit}>제출하기</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </>\\r\\n  )\\r\\n}\\r\\n\\r\\nexport default StroeItemAdd;\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\routes\\\\StoreList.js\",[\"450\",\"451\",\"452\",\"453\",\"454\"],[],\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Chat\\\\Chat.js\",[\"455\",\"456\"],[],\"import React, { useState, useRef, useEffect } from 'react';\\r\\nimport { MessageBox, ChatList } from 'react-chat-elements';\\r\\nimport 'react-chat-elements/dist/main.css';\\r\\nimport axios from 'axios';\\r\\n\\r\\nconst Chat = ({ closeModal }) => {\\r\\n    const [chatMessage, setChatMessage] = useState('');\\r\\n    const [response, setResponse] = useState('');\\r\\n    const [messages, setMessages] = useState([]);\\r\\n    const chatContainerRef = useRef(null);\\r\\n\\r\\n    const handleMessage = async () => {\\r\\n        try {\\r\\n            const response = await axios.post('/api/chat/message', chatMessage, {\\r\\n                headers: {\\r\\n                    'Content-Type': 'application/json',\\r\\n                },\\r\\n            });\\r\\n\\r\\n            setMessages((prevMessages) => [\\r\\n                ...prevMessages,\\r\\n                {\\r\\n                    position: 'right',\\r\\n                    type: 'text',\\r\\n                    text: chatMessage,\\r\\n                    date: new Date(),\\r\\n                },\\r\\n                {\\r\\n                    position: 'left',\\r\\n                    type: 'text',\\r\\n                    text: response.data,\\r\\n                    date: new Date(),\\r\\n                },\\r\\n            ]);\\r\\n\\r\\n            setResponse(response.data);\\r\\n            setChatMessage('');\\r\\n        } catch (error) {\\r\\n            console.error('Error:', error);\\r\\n        }\\r\\n    };\\r\\n\\r\\n    const handleKeyPress = (e) => {\\r\\n        if (e.key === 'Enter') {\\r\\n            handleMessage();\\r\\n        }\\r\\n    };\\r\\n\\r\\n    useEffect(() => {\\r\\n        chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\\r\\n    }, [messages]);\\r\\n\\r\\n    const handleOutsideClick = (e) => {\\r\\n        if (e.target.classList.contains('chat-modal-container')) {\\r\\n            closeModal();\\r\\n        }\\r\\n    };\\r\\n\\r\\n    return (\\r\\n        <div\\r\\n            className=\\\"chat-modal-container\\\"\\r\\n            style={{\\r\\n                position: 'fixed',\\r\\n                top: 0,\\r\\n                left: 0,\\r\\n                width: '100%',\\r\\n                height: '100%',\\r\\n                display: 'flex',\\r\\n                alignItems: 'center',\\r\\n                justifyContent: 'center',\\r\\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\\r\\n                zIndex: 9999,\\r\\n            }}\\r\\n            onClick={handleOutsideClick}\\r\\n        >\\r\\n            <div\\r\\n                style={{\\r\\n                    backgroundColor: '#2F80ED',\\r\\n                    display: 'flex',\\r\\n                    flexDirection: 'column',\\r\\n                    padding: '20px',\\r\\n                    maxWidth: '600px',\\r\\n                    width: '70%',\\r\\n                    borderRadius: '20px',\\r\\n                    position: 'relative',\\r\\n                    maxHeight: '100%',\\r\\n                    overflow: 'auto',\\r\\n                }}\\r\\n            >\\r\\n                <ChatList\\r\\n                    className=\\\"chat-list\\\"\\r\\n                    dataSource={[\\r\\n                        {\\r\\n                            avatar: 'https://www.pngfind.com/pngs/m/676-6764066_fish-cartoon-images-fish-logo-png-transparent-png.png',\\r\\n                            alt: 'Fish',\\r\\n                            title: 'BA_ChatBot',\\r\\n                            subtitle: '무엇이든 물어보세요',\\r\\n                            date: new Date(),\\r\\n                            unread: 0,\\r\\n                        },\\r\\n                    ]}\\r\\n                    style={{ marginBottom: '20px' }}\\r\\n                />\\r\\n                <div\\r\\n                    ref={chatContainerRef}\\r\\n                    style={{ flex: '1', overflowY: 'auto', marginTop: '10px' }}\\r\\n                >\\r\\n                    {messages.map((message, index) => (\\r\\n                        <MessageBox\\r\\n                            key={index}\\r\\n                            position={message.position}\\r\\n                            type={message.type}\\r\\n                            text={message.text}\\r\\n                            date={message.date}\\r\\n                            avatar={\\r\\n                                message.position === 'left'\\r\\n                                    ? 'https://www.pngfind.com/pngs/m/676-6764066_fish-cartoon-images-fish-logo-png-transparent-png.png'\\r\\n                                    : null\\r\\n                            }\\r\\n                            text={message.text}\\r\\n                            title={message.position === 'left' ? 'BA_ChatBot' : 'You'}\\r\\n                            titleColor={message.position === 'left' ? '#FFFFFF' : '#4CAF50'}\\r\\n                            textFontSize={16}\\r\\n                            textFontColor=\\\"#333\\\"\\r\\n                            style={{\\r\\n                                backgroundColor: message.position === 'left' ? '#FFFFFF' : '#DCF8C6',\\r\\n                                borderRadius: message.position === 'left' ? '0px 10px 10px 10px' : '10px 0px 10px 10px',\\r\\n                                padding: '10px 15px',\\r\\n                                maxWidth: '70%',\\r\\n                                alignSelf: message.position === 'left' ? 'flex-start' : 'flex-end',\\r\\n                                marginBottom: 10,\\r\\n                            }}\\r\\n                        />\\r\\n                    ))}\\r\\n                </div>\\r\\n                <div style={{ display: 'flex', alignItems: 'center', marginTop: '20px' }}>\\r\\n                    <input\\r\\n                        type=\\\"text\\\"\\r\\n                        value={chatMessage}\\r\\n                        onChange={(e) => setChatMessage(e.target.value)}\\r\\n                        onKeyPress={handleKeyPress}\\r\\n                        style={{ flex: '1', padding: '15px', borderRadius: '30px', border: 'none', fontSize: '16px' }}\\r\\n                        placeholder=\\\"메시지를 입력하세요...\\\"\\r\\n                    />\\r\\n                    <button\\r\\n                        onClick={handleMessage}\\r\\n                        style={{\\r\\n                            marginLeft: '10px',\\r\\n                            padding: '15px 25px',\\r\\n                            borderRadius: '30px',\\r\\n                            border: 'none',\\r\\n                            backgroundColor: '#4CAF50',\\r\\n                            color: '#fff',\\r\\n                            cursor: 'pointer',\\r\\n                            fontSize: '16px',\\r\\n                        }}\\r\\n                    >\\r\\n                        보내기\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    );\\r\\n};\\r\\n\\r\\nexport default Chat;\\r\\n\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Notice\\\\NoticeDetail.js\",[\"457\"],[],\"import React, { useEffect, useState } from 'react';\\r\\nimport axios from 'axios';\\r\\nimport { Link, useParams } from 'react-router-dom';\\r\\n\\r\\nfunction NoticeDetail() {\\r\\n  const [notice, setNotice] = useState({});\\r\\n  const { noticeNo } = useParams();\\r\\n\\r\\n  useEffect(() => {\\r\\n    axios.get(`/api/notice/detail/${noticeNo}`)\\r\\n      .then(response => setNotice(response.data))\\r\\n      .catch(error => console.log(error));\\r\\n  }, [noticeNo]);\\r\\n\\r\\n  return (\\r\\n    <div className=\\\"container\\\">\\r\\n      <div className=\\\"top-controls\\\"></div>\\r\\n      <div style={{ padding: \\\"0 12px\\\" }}>\\r\\n        <table className=\\\"board_list text-center\\\">\\r\\n          <colgroup>\\r\\n            <col width=\\\"20%\\\" />\\r\\n            <col width=\\\"80%\\\" />\\r\\n          </colgroup>\\r\\n          <thead>\\r\\n          <tr>\\r\\n          <th>제목</th>\\r\\n          <td className=\\\"text-left\\\">{notice.noticeTitle}</td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n          <th>내용</th>\\r\\n          <td>{notice.noticeContent}</td>\\r\\n          </tr>\\r\\n          </thead>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\\r\\nexport default NoticeDetail;\\r\\n\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Notice\\\\NoticeList.js\",[\"458\",\"459\"],[],\"import React, {useEffect, useState} from 'react';\\r\\nimport axios from 'axios';\\r\\n//import Announce from '/components/MainPage/Announce';\\r\\nimport NoticeListItem from './NoticeListItem';\\r\\nimport { Routes, Route } from 'react-router-dom';\\r\\nimport styles from './NoticeList.css'\\r\\n\\r\\n\\r\\nfunction NoticeList() {\\r\\n\\r\\n  const [data, setData] = useState([]);\\r\\n\\r\\n  useEffect(() => {\\r\\n    axios.get('/api/notice')\\r\\n      .then(response => setData(response.data))\\r\\n      .catch(error => console.log(error));\\r\\n      // console.log(data);\\r\\n  }, []);\\r\\n\\r\\n  return (\\r\\n    <>\\r\\n    <div className={styles.storeListBox}>\\r\\n      <NoticeListItem data={data}/>\\r\\n    </div>\\r\\n    </>\\r\\n  )\\r\\n}\\r\\n\\r\\nexport default NoticeList;\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Notice\\\\NoticeListItem.js\",[],[],\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Market\\\\OrderModal.js\",[\"460\",\"461\",\"462\",\"463\",\"464\",\"465\",\"466\",\"467\"],[],\"import React, { useState, useEffect } from 'react';\\r\\nimport './OrderModal.css';\\r\\nimport { useUser } from '../Auth/UserContext';\\r\\nimport OrderItem from './OrderItem';\\r\\nimport { sendAxiosRequest } from '../utility/common';\\r\\nimport Payment from '../Pay/Pay';\\r\\nimport { formToJSON } from 'axios';\\r\\n\\r\\nconst OrderModal = ({ store, menus, isOpen, onClose, setMenuData }) => {\\r\\n\\r\\n  \\r\\nconst {user, login, logout} = useUser();\\r\\n\\r\\nconst [order, setOrder] = useState({\\r\\n  orderType:'Q',\\r\\n  orderPrice:0,\\r\\n  orderRequest:'',\\r\\n  recipientPhone:'',\\r\\n  recipientName:'',\\r\\n  recipientZipcode:'',\\r\\n  recipientAddr:'',\\r\\n  recipientDetailAddr:'',\\r\\n  orderStatus:'',\\r\\n})\\r\\n\\r\\n  // OrderItem 변경 사항 적용\\r\\n    const updateMenuCount = (updateMenu)=> { \\r\\n      const updatedItems = menus?.map((menu) =>\\r\\n      menu.menuNo === updateMenu.menuNo ? updateMenu : menu\\r\\n    );\\r\\n      setMenuData(\\r\\n        updatedItems\\r\\n      )\\r\\n  };\\r\\n\\r\\n\\r\\n  const [orderMenus, setOrderMenus] = useState([])\\r\\n\\r\\n  let totalPrice = 0\\r\\n  let totalOrders = [];\\r\\n  \\r\\n \\r\\n  const handleSubmit = (event) => {\\r\\n    event.preventDefault();\\r\\n\\r\\n    setActiveSection('deliveryMethod');\\r\\n\\r\\n  }\\r\\n  \\r\\n\\r\\n  // 수령 방식 변경 사항을 저장\\r\\n  const handleInputChange = (event) => {\\r\\n    const { name, value } = event.target;\\r\\n    setOrder(prevDetails => ({\\r\\n      ...prevDetails,\\r\\n      [name]: value,\\r\\n    }));\\r\\n  };\\r\\n\\r\\n\\r\\n  // order, orderMenu 생성 및 결제 진행\\r\\n  const handleOrder = (event) => {\\r\\n    event.preventDefault();\\r\\n    // console.log(orderMenus)\\r\\n\\r\\n\\r\\n   // orderMenu 생성\\r\\n    menus.filter((menu) => menu.count !== 0).map((menu) => {\\r\\n      \\r\\n      totalPrice += menu.count * menu.menuPrice\\r\\n\\r\\n      totalOrders.push({\\r\\n        menuNo: Number(menu.menuNo),\\r\\n        orderMenuCount: Number(menu.count),\\r\\n        // orderNo: 0,\\r\\n        // memberNo:0,\\r\\n      })\\r\\n    })\\r\\n    \\r\\n    setOrderMenus(totalOrders)\\r\\n\\r\\n\\r\\n\\r\\n    setOrder({\\r\\n      ...order, orderPrice: totalPrice\\r\\n    })\\r\\n\\r\\n    // console.log(orderMenus)\\r\\n    // console.log(typeof(orderMenus[0].menuNo))\\r\\n\\r\\n\\r\\n    // 주문 생성\\r\\n    sendAxiosRequest('/api/order/new', 'POST', order, response => {\\r\\n      if (response.data && response.data.length > 0) {\\r\\n        console.log(\\\"주문 생성에 성공했습니다:\\\", response.data);\\r\\n      }\\r\\n    }, error => {\\r\\n      console.error(\\\"주문 생성에 실패했습니다:\\\", error);\\r\\n    });\\r\\n\\r\\n    \\r\\n    //주문 메뉴 추가 생성\\r\\n    setTimeout(() => {\\r\\n      orderMenus.map((orderMenu) => {\\r\\n        console.log('orderMenu=> : ', orderMenu);\\r\\n\\r\\n        sendAxiosRequest('/api/ordermenu/new', 'POST', orderMenu, response => {\\r\\n          if (response.data && response.data.length > 0) {\\r\\n            console.log(\\\"주문메뉴 생성에 성공했습니다:\\\", response.data);\\r\\n            // console.log('orderMenu=> : ', orderMenu);\\r\\n            console.log(typeof(orderMenu.menuNo))\\r\\n          }\\r\\n        }, error => {\\r\\n          console.error(\\\"주문메뉴 생성에 실패했습니다:\\\", error);\\r\\n        });\\r\\n      })\\r\\n    }, 6000);\\r\\n\\r\\n    \\r\\n    \\r\\n  }\\r\\n\\r\\n\\r\\n  const [activeSection, setActiveSection] = useState('orderInfo'); // 현재 활성화된 섹션을 추적\\r\\n\\r\\n  const switchSection = (section) => {\\r\\n    setActiveSection(section);\\r\\n  };\\r\\n\\r\\n  if (!isOpen) return null;\\r\\n\\r\\n\\r\\n  return (\\r\\n    <div className=\\\"orderModalBackground\\\">\\r\\n      <div className=\\\"orderModalContainer\\\">\\r\\n        <div className=\\\"orderModalHeader\\\">\\r\\n          <button className=\\\"closeButton\\\" onClick={onClose}>X</button>\\r\\n        </div>\\r\\n\\r\\n        <div className=\\\"sectionButtons\\\">\\r\\n          <button onClick={() => switchSection('orderInfo')}>주문 정보</button>\\r\\n          <button onClick={() => switchSection('deliveryMethod')}>수령 방식</button>\\r\\n        </div>\\r\\n\\r\\n        {activeSection === 'orderInfo' && (\\r\\n          <form onSubmit={handleSubmit}>\\r\\n            <h2>주문 정보</h2>\\r\\n\\r\\n            <div>\\r\\n              {menus?.map((menu) => \\r\\n                <OrderItem key={menu.menuNo} menu={menu}  update = {updateMenuCount} />\\r\\n              )}\\r\\n            </div>\\r\\n\\r\\n            <button type=\\\"submit\\\">주문 정보 제출</button>\\r\\n          </form>\\r\\n        )}\\r\\n\\r\\n\\r\\n\\r\\n        {activeSection === 'deliveryMethod' && (\\r\\n          <div>\\r\\n            {/* 수령 방식 선택 부분 */}\\r\\n            <h2>수령 방식</h2>\\r\\n\\r\\n            <div>\\r\\n              <label>\\r\\n                <input\\r\\n                  type=\\\"radio\\\"\\r\\n                  name=\\\"orderType\\\"\\r\\n                  value='Q'\\r\\n                  checked={order.orderType === 'Q'}\\r\\n                  onChange={handleInputChange}\\r\\n                />\\r\\n                퀵배송\\r\\n              </label>\\r\\n              <label>\\r\\n                <input\\r\\n                  type=\\\"radio\\\"\\r\\n                  name=\\\"orderType\\\"\\r\\n                  value='T'\\r\\n                  checked={order.orderType === 'T'}\\r\\n                  onChange={handleInputChange}\\r\\n                />\\r\\n                포장\\r\\n              </label>\\r\\n            </div>\\r\\n\\r\\n            <h2>수령 정보</h2>\\r\\n            <input\\r\\n            type=\\\"text\\\"\\r\\n            name=\\\"recipientName\\\"\\r\\n            placeholder=\\\"이름\\\"\\r\\n            value={order.recipientName}\\r\\n            onChange={handleInputChange}\\r\\n            required\\r\\n          />\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            name=\\\"recipientPhone\\\"\\r\\n            placeholder=\\\"전화번호\\\"\\r\\n            value={order.recipientPhone}\\r\\n            onChange={handleInputChange}\\r\\n            required\\r\\n          />\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            name=\\\"recipientZipcode\\\"\\r\\n            placeholder=\\\"우편번호\\\"\\r\\n            value={order.recipientZipcode}\\r\\n            onChange={handleInputChange}\\r\\n            required\\r\\n          />\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            name=\\\"recipientAddr\\\"\\r\\n            placeholder=\\\"기본주소\\\"\\r\\n            value={order.recipientAddr}\\r\\n            onChange={handleInputChange}\\r\\n            required\\r\\n          />\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            name=\\\"recipientDetailAddr\\\"\\r\\n            placeholder=\\\"상세주소\\\"\\r\\n            value={order.recipientDetailAddr}\\r\\n            onChange={handleInputChange}\\r\\n            required\\r\\n          />\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            name=\\\"orderRequest\\\"\\r\\n            placeholder=\\\"요청사항\\\"\\r\\n            value={order.orderRequest}\\r\\n            onChange={handleInputChange}\\r\\n            required\\r\\n          />\\r\\n            <button onClick={handleOrder}>결제하기</button>\\r\\n            {/* <Payment onClick={handleOrder}>결제하기</Payment> */}\\r\\n          </div>\\r\\n        )}\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\n          \\r\\n\\r\\nexport default OrderModal;\\r\\n\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Admin\\\\AdminNoticeList.js\",[\"468\",\"469\"],[],\"import React, {useEffect, useState} from 'react';\\r\\nimport axios from 'axios';\\r\\n//import Announce from '/components/MainPage/Announce';\\r\\nimport AdminNoticeListItem from './AdminNoticeListItem';\\r\\nimport { Routes, Route } from 'react-router-dom';\\r\\nimport styles from '../Notice/NoticeList.css'\\r\\n\\r\\n\\r\\nfunction AdminNoticeList() {\\r\\n\\r\\n  const [data, setData] = useState([]);\\r\\n\\r\\n  useEffect(() => {\\r\\n    axios.get('/api/notice')\\r\\n      .then(response => setData(response.data))\\r\\n      .catch(error => console.log(error));\\r\\n      // console.log(data);\\r\\n  }, []);\\r\\n  \\r\\n\\r\\n  return (\\r\\n    <>\\r\\n    <div className={styles.storeListBox}>\\r\\n      <AdminNoticeListItem data={data}/>\\r\\n    </div>\\r\\n    </>\\r\\n  )\\r\\n}\\r\\n\\r\\nexport default AdminNoticeList;\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Admin\\\\AdminNoticeDetail.js\",[],[],\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Admin\\\\NoticeRegisterationForm.js\",[\"470\"],[],\"import React, { useState } from 'react';\\r\\nimport { useNavigate } from 'react-router-dom';\\r\\nimport axios, { formToJSON } from 'axios';\\r\\nimport { sendAxiosRequest } from '../utility/common';\\r\\n\\r\\nfunction NoticeRegisterationForm() {\\r\\n  const [notice, setNotice] = useState({\\r\\n    noticeTitle: 'title',\\r\\n    noticeContent: 'content',\\r\\n  });\\r\\n\\r\\n  const handleChange = (e) => {\\r\\n    const { name, value } = e.target;\\r\\n    setNotice({ ...notice, [name]: value });\\r\\n  };\\r\\n\\r\\n\\r\\n  const navigate = useNavigate();\\r\\n\\r\\n  const handleSubmit = (e) => {\\r\\n    e.preventDefault();\\r\\n\\r\\n    let formData = new FormData(e.target);\\r\\n    let formObj = formToJSON(formData);\\r\\n    sendAxiosRequest('/api/notice/new', 'POST', formObj, response => {\\r\\n      console.log('응답값:', response.data);\\r\\n      alert('공지사항이 등록 되었습니다.');\\r\\n      navigate('/main');\\r\\n    },\\r\\n      error => {\\r\\n        console.error('API 호출 중 에러 발생: ', error);\\r\\n        alert('공지사항 등록에 실패하셨습니다!');\\r\\n      }\\r\\n    )\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div style={styles.container}>\\r\\n      <form onSubmit={handleSubmit} style={styles.form}>\\r\\n      <h2>공지사항 등록</h2>\\r\\n        <div>\\r\\n          <label>제목 </label>\\r\\n          <input style={styles.input} type=\\\"text\\\" name=\\\"noticeTitle\\\" value={notice.noticeTitle} onChange={handleChange} />\\r\\n        </div>\\r\\n        <div>\\r\\n          <label>내용 </label>\\r\\n          <input style={styles.input} type=\\\"text\\\" name=\\\"noticeContent\\\" value={notice.noticeContent} onChange={handleChange} />\\r\\n        </div>\\r\\n        <button type=\\\"submit\\\" style={styles.submitButton}>등록</button>\\r\\n      </form>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\\r\\nconst styles = {\\r\\n  container: {\\r\\n    display: 'flex',\\r\\n    justifyContent: 'center',\\r\\n    alignItems: 'center',\\r\\n    height: '30vh',\\r\\n  },\\r\\n  form: {\\r\\n    display: 'flex',\\r\\n    flexDirection: 'column',\\r\\n    alignItems: 'center', // 폼 내용을 중앙 정렬합니다.\\r\\n    padding: '20px',  // 내부 패딩을 추가합니다.\\r\\n    borderRadius: '12px',  // 모서리를 둥글게 합니다.\\r\\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2)', // 약간의 그림자 효과를 추가합니다.\\r\\n    background: 'white', // 배경색을 흰색으로 설정합니다.\\r\\n    width: '800px',\\r\\n  },\\r\\n  input: {\\r\\n    padding: '10px',\\r\\n    margin: '5px 0',\\r\\n    borderRadius: '6px',\\r\\n    border: '1px solid #ccc',\\r\\n    outline: 'none',\\r\\n    width: '300px',\\r\\n  },\\r\\n  submitButton: {\\r\\n    padding: '10px 20px',\\r\\n    cursor: 'pointer',\\r\\n    backgroundColor: '#0575E6',\\r\\n    border: 'none',\\r\\n    borderRadius: '8px',\\r\\n    color: 'white',\\r\\n  },\\r\\n}\\r\\n\\r\\n\\r\\nexport default NoticeRegisterationForm;\\r\\n\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Admin\\\\AdminNoticeListItem.js\",[],[],\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Market\\\\OrderItem.js\",[\"471\",\"472\",\"473\"],[],\"import React, { useState, useEffect } from 'react';\\r\\nimport './OrderModal.css';\\r\\nimport { useUser } from '../Auth/UserContext';\\r\\n\\r\\nfunction OrderItem({ key, menu, orderMenu, update }) {\\r\\n  // console.log(menu)\\r\\n  const [localItem, setLocalItem] = useState(menu);\\r\\n\\r\\n  const handleNameChange = (e) => {\\r\\n    if (e.target.value >= 0) {\\r\\n      const newName = e.target.value;\\r\\n      setLocalItem({ ...localItem, count: newName });\\r\\n      update({ ...localItem, count: newName });\\r\\n      // update(localItem)\\r\\n      console.log('발동')\\r\\n    }\\r\\n  }\\r\\n\\r\\n\\r\\n  return (\\r\\n    <>\\r\\n    <div className='order-item-box'>\\r\\n      \\r\\n      <div style={{overflow:'hidden'}}>\\r\\n        <img src='/images/fish1.jpg'/>\\r\\n      </div>\\r\\n\\r\\n      <div>\\r\\n        <p>{menu.menuName}</p>\\r\\n      </div>\\r\\n\\r\\n      <div>\\r\\n        <p>{menu.menuSize}</p>\\r\\n      </div>\\r\\n\\r\\n      <div>\\r\\n       <p>{menu.menuPrice}</p>\\r\\n      </div>\\r\\n\\r\\n      <div>\\r\\n        {/* <button onClick={()=>setCount(count + 1)}>+</button> */}\\r\\n        <input\\r\\n              type=\\\"number\\\"\\r\\n              name='count'\\r\\n              value={localItem.count}\\r\\n              onChange={handleNameChange}\\r\\n            />\\r\\n        {/* <button onClick={()=>setCount(count + 1)}>-</button> */}\\r\\n      </div>\\r\\n      \\r\\n    </div>\\r\\n    </>\\r\\n  );\\r\\n}\\r\\n\\r\\n          \\r\\n\\r\\nexport default OrderItem;\\r\\n\",\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\MyPage\\\\OrderMenuList.js\",[],[],\"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\MyPage\\\\StoreOrder.js\",[\"474\",\"475\",\"476\"],[],{\"ruleId\":\"477\",\"severity\":1,\"message\":\"478\",\"line\":1,\"column\":17,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":1,\"endColumn\":26},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"481\",\"line\":1,\"column\":28,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":1,\"endColumn\":36},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"482\",\"line\":2,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":2,\"endColumn\":13},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"483\",\"line\":2,\"column\":17,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":2,\"endColumn\":27},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"484\",\"line\":22,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":22,\"endColumn\":20},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"485\",\"line\":30,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":30,\"endColumn\":26},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"486\",\"line\":41,\"column\":11,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":41,\"endColumn\":15},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"487\",\"line\":41,\"column\":17,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":41,\"endColumn\":22},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"483\",\"line\":12,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":12,\"endColumn\":20},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"481\",\"line\":13,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":13,\"endColumn\":18},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"488\",\"line\":13,\"column\":20,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":13,\"endColumn\":30},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"489\",\"line\":14,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":14,\"endColumn\":17},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"490\",\"line\":15,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":15,\"endColumn\":19},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"482\",\"line\":16,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":16,\"endColumn\":13},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"482\",\"line\":3,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":3,\"endColumn\":13},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"490\",\"line\":4,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":4,\"endColumn\":19},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"491\",\"line\":31,\"column\":9,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":31,\"endColumn\":16},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"482\",\"line\":2,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":2,\"endColumn\":13},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"478\",\"line\":1,\"column\":17,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":1,\"endColumn\":26},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"481\",\"line\":1,\"column\":28,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":1,\"endColumn\":36},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"482\",\"line\":2,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":2,\"endColumn\":15},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"483\",\"line\":2,\"column\":17,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":2,\"endColumn\":27},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"489\",\"line\":5,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":5,\"endColumn\":17},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"492\",\"line\":6,\"column\":117,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":6,\"endColumn\":124},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"482\",\"line\":2,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":2,\"endColumn\":13},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"493\",\"line\":5,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":5,\"endColumn\":21},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"494\",\"line\":7,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":7,\"endColumn\":16},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"495\",\"line\":7,\"column\":18,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":7,\"endColumn\":23},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"496\",\"line\":8,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":8,\"endColumn\":28},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"497\",\"line\":8,\"column\":30,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":8,\"endColumn\":49},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"498\",\"line\":9,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":9,\"endColumn\":33},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"499\",\"line\":14,\"column\":24,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":14,\"endColumn\":39},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"500\",\"line\":15,\"column\":9,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":15,\"endColumn\":20},{\"ruleId\":\"501\",\"severity\":1,\"message\":\"502\",\"line\":56,\"column\":6,\"nodeType\":\"503\",\"endLine\":56,\"endColumn\":8,\"suggestions\":\"504\"},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"478\",\"line\":1,\"column\":16,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":1,\"endColumn\":25},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"481\",\"line\":1,\"column\":27,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":1,\"endColumn\":35},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"482\",\"line\":2,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":2,\"endColumn\":13},{\"ruleId\":\"505\",\"severity\":1,\"message\":\"506\",\"line\":9,\"column\":7,\"nodeType\":\"507\",\"endLine\":9,\"endColumn\":41},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"482\",\"line\":3,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":3,\"endColumn\":13},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"482\",\"line\":2,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":2,\"endColumn\":13},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"508\",\"line\":4,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":4,\"endColumn\":14},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"509\",\"line\":5,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":5,\"endColumn\":16},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"510\",\"line\":7,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":7,\"endColumn\":17},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"494\",\"line\":8,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":8,\"endColumn\":16},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"495\",\"line\":8,\"column\":18,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":8,\"endColumn\":23},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"490\",\"line\":9,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":9,\"endColumn\":19},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"511\",\"line\":9,\"column\":54,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":9,\"endColumn\":68},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"512\",\"line\":9,\"column\":70,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":9,\"endColumn\":84},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"513\",\"line\":11,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":11,\"endColumn\":17},{\"ruleId\":\"501\",\"severity\":1,\"message\":\"514\",\"line\":27,\"column\":6,\"nodeType\":\"503\",\"endLine\":27,\"endColumn\":8,\"suggestions\":\"515\"},{\"ruleId\":\"501\",\"severity\":1,\"message\":\"516\",\"line\":56,\"column\":6,\"nodeType\":\"503\",\"endLine\":56,\"endColumn\":30,\"suggestions\":\"517\"},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"518\",\"line\":10,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":10,\"endColumn\":18},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"489\",\"line\":12,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":12,\"endColumn\":17},{\"ruleId\":\"501\",\"severity\":1,\"message\":\"519\",\"line\":51,\"column\":6,\"nodeType\":\"503\",\"endLine\":51,\"endColumn\":8,\"suggestions\":\"520\"},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"521\",\"line\":3,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":3,\"endColumn\":14},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"522\",\"line\":3,\"column\":16,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":3,\"endColumn\":20},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"523\",\"line\":3,\"column\":22,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":3,\"endColumn\":28},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"524\",\"line\":4,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":4,\"endColumn\":14},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"525\",\"line\":4,\"column\":16,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":4,\"endColumn\":27},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"482\",\"line\":5,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":5,\"endColumn\":13},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"487\",\"line\":100,\"column\":17,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":100,\"endColumn\":22},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"526\",\"line\":100,\"column\":24,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":100,\"endColumn\":30},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"527\",\"line\":101,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":101,\"endColumn\":19},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"528\",\"line\":105,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":105,\"endColumn\":15},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"529\",\"line\":3,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":3,\"endColumn\":35},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"525\",\"line\":5,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":5,\"endColumn\":21},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"530\",\"line\":5,\"column\":23,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":5,\"endColumn\":32},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"481\",\"line\":1,\"column\":17,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":1,\"endColumn\":25},{\"ruleId\":\"531\",\"severity\":1,\"message\":\"532\",\"line\":125,\"column\":5,\"nodeType\":\"533\",\"messageId\":\"534\",\"endLine\":125,\"endColumn\":15},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"482\",\"line\":3,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":3,\"endColumn\":13},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"483\",\"line\":3,\"column\":17,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":3,\"endColumn\":27},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"490\",\"line\":4,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":4,\"endColumn\":19},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"535\",\"line\":2,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":2,\"endColumn\":14},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"536\",\"line\":3,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":3,\"endColumn\":18},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"485\",\"line\":6,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":6,\"endColumn\":26},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"537\",\"line\":10,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":10,\"endColumn\":20},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"538\",\"line\":13,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":13,\"endColumn\":26},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"539\",\"line\":53,\"column\":7,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":53,\"endColumn\":26},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"540\",\"line\":79,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":79,\"endColumn\":21},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"541\",\"line\":79,\"column\":23,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":79,\"endColumn\":37},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"542\",\"line\":80,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":80,\"endColumn\":22},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"543\",\"line\":87,\"column\":9,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":87,\"endColumn\":29},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"544\",\"line\":262,\"column\":23,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":262,\"endColumn\":32},{\"ruleId\":\"545\",\"severity\":1,\"message\":\"546\",\"line\":361,\"column\":43,\"nodeType\":\"547\",\"messageId\":\"534\",\"endLine\":361,\"endColumn\":45},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"548\",\"line\":34,\"column\":9,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":34,\"endColumn\":14},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"549\",\"line\":37,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":37,\"endColumn\":13},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"550\",\"line\":94,\"column\":17,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":94,\"endColumn\":21},{\"ruleId\":\"545\",\"severity\":1,\"message\":\"546\",\"line\":123,\"column\":36,\"nodeType\":\"547\",\"messageId\":\"534\",\"endLine\":123,\"endColumn\":38},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"478\",\"line\":1,\"column\":17,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":1,\"endColumn\":26},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"482\",\"line\":2,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":2,\"endColumn\":13},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"551\",\"line\":6,\"column\":22,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":6,\"endColumn\":30},{\"ruleId\":\"545\",\"severity\":1,\"message\":\"552\",\"line\":26,\"column\":38,\"nodeType\":\"547\",\"messageId\":\"534\",\"endLine\":26,\"endColumn\":40},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"553\",\"line\":42,\"column\":19,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":42,\"endColumn\":31},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"554\",\"line\":44,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":44,\"endColumn\":16},{\"ruleId\":\"545\",\"severity\":1,\"message\":\"552\",\"line\":47,\"column\":38,\"nodeType\":\"547\",\"messageId\":\"534\",\"endLine\":47,\"endColumn\":40},{\"ruleId\":\"505\",\"severity\":1,\"message\":\"506\",\"line\":53,\"column\":9,\"nodeType\":\"507\",\"endLine\":53,\"endColumn\":147},{\"ruleId\":\"505\",\"severity\":1,\"message\":\"506\",\"line\":56,\"column\":65,\"nodeType\":\"507\",\"endLine\":56,\"endColumn\":94},{\"ruleId\":\"505\",\"severity\":1,\"message\":\"506\",\"line\":57,\"column\":68,\"nodeType\":\"507\",\"endLine\":57,\"endColumn\":97},{\"ruleId\":\"505\",\"severity\":1,\"message\":\"506\",\"line\":58,\"column\":66,\"nodeType\":\"507\",\"endLine\":58,\"endColumn\":96},{\"ruleId\":\"501\",\"severity\":1,\"message\":\"555\",\"line\":146,\"column\":6,\"nodeType\":\"503\",\"endLine\":146,\"endColumn\":31,\"suggestions\":\"556\"},{\"ruleId\":\"501\",\"severity\":1,\"message\":\"557\",\"line\":158,\"column\":6,\"nodeType\":\"503\",\"endLine\":158,\"endColumn\":8,\"suggestions\":\"558\"},{\"ruleId\":\"505\",\"severity\":1,\"message\":\"506\",\"line\":170,\"column\":15,\"nodeType\":\"507\",\"endLine\":170,\"endColumn\":154},{\"ruleId\":\"505\",\"severity\":1,\"message\":\"506\",\"line\":178,\"column\":19,\"nodeType\":\"507\",\"endLine\":178,\"endColumn\":48},{\"ruleId\":\"505\",\"severity\":1,\"message\":\"506\",\"line\":182,\"column\":19,\"nodeType\":\"507\",\"endLine\":182,\"endColumn\":48},{\"ruleId\":\"505\",\"severity\":1,\"message\":\"506\",\"line\":186,\"column\":19,\"nodeType\":\"507\",\"endLine\":186,\"endColumn\":49},{\"ruleId\":\"505\",\"severity\":1,\"message\":\"506\",\"line\":196,\"column\":19,\"nodeType\":\"507\",\"endLine\":196,\"endColumn\":227},{\"ruleId\":\"505\",\"severity\":1,\"message\":\"506\",\"line\":202,\"column\":27,\"nodeType\":\"507\",\"endLine\":209,\"endColumn\":32},{\"ruleId\":\"545\",\"severity\":1,\"message\":\"546\",\"line\":217,\"column\":39,\"nodeType\":\"547\",\"messageId\":\"534\",\"endLine\":217,\"endColumn\":41},{\"ruleId\":\"545\",\"severity\":1,\"message\":\"546\",\"line\":223,\"column\":37,\"nodeType\":\"547\",\"messageId\":\"534\",\"endLine\":223,\"endColumn\":39},{\"ruleId\":\"545\",\"severity\":1,\"message\":\"546\",\"line\":276,\"column\":30,\"nodeType\":\"547\",\"messageId\":\"534\",\"endLine\":276,\"endColumn\":32},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"559\",\"line\":334,\"column\":9,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":334,\"endColumn\":19},{\"ruleId\":\"501\",\"severity\":1,\"message\":\"560\",\"line\":359,\"column\":6,\"nodeType\":\"503\",\"endLine\":359,\"endColumn\":8,\"suggestions\":\"561\"},{\"ruleId\":\"505\",\"severity\":1,\"message\":\"506\",\"line\":368,\"column\":15,\"nodeType\":\"507\",\"endLine\":368,\"endColumn\":154},{\"ruleId\":\"545\",\"severity\":1,\"message\":\"546\",\"line\":374,\"column\":37,\"nodeType\":\"547\",\"messageId\":\"534\",\"endLine\":374,\"endColumn\":39},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"478\",\"line\":1,\"column\":17,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":1,\"endColumn\":26},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"481\",\"line\":1,\"column\":28,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":1,\"endColumn\":36},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"482\",\"line\":2,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":2,\"endColumn\":13},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"482\",\"line\":2,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":2,\"endColumn\":13},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"485\",\"line\":5,\"column\":21,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":5,\"endColumn\":37},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"562\",\"line\":8,\"column\":15,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":8,\"endColumn\":23},{\"ruleId\":\"501\",\"severity\":1,\"message\":\"563\",\"line\":15,\"column\":6,\"nodeType\":\"503\",\"endLine\":15,\"endColumn\":8,\"suggestions\":\"564\"},{\"ruleId\":\"505\",\"severity\":1,\"message\":\"506\",\"line\":19,\"column\":7,\"nodeType\":\"507\",\"endLine\":19,\"endColumn\":74},{\"ruleId\":\"505\",\"severity\":1,\"message\":\"506\",\"line\":28,\"column\":11,\"nodeType\":\"507\",\"endLine\":28,\"endColumn\":80},{\"ruleId\":\"505\",\"severity\":1,\"message\":\"506\",\"line\":31,\"column\":11,\"nodeType\":\"507\",\"endLine\":31,\"endColumn\":84},{\"ruleId\":\"545\",\"severity\":1,\"message\":\"546\",\"line\":32,\"column\":17,\"nodeType\":\"547\",\"messageId\":\"534\",\"endLine\":32,\"endColumn\":19},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"482\",\"line\":2,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":2,\"endColumn\":13},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"565\",\"line\":12,\"column\":21,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":12,\"endColumn\":33},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"528\",\"line\":13,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":13,\"endColumn\":15},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"508\",\"line\":72,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":72,\"endColumn\":14},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"478\",\"line\":1,\"column\":16,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":1,\"endColumn\":25},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"482\",\"line\":2,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":2,\"endColumn\":13},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"566\",\"line\":3,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":3,\"endColumn\":14},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"567\",\"line\":1,\"column\":28,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":1,\"endColumn\":38},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"568\",\"line\":5,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":5,\"endColumn\":21},{\"ruleId\":\"501\",\"severity\":1,\"message\":\"569\",\"line\":17,\"column\":6,\"nodeType\":\"503\",\"endLine\":17,\"endColumn\":8,\"suggestions\":\"570\"},{\"ruleId\":\"505\",\"severity\":1,\"message\":\"506\",\"line\":40,\"column\":9,\"nodeType\":\"507\",\"endLine\":40,\"endColumn\":39},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"478\",\"line\":1,\"column\":17,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":1,\"endColumn\":26},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"481\",\"line\":1,\"column\":28,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":1,\"endColumn\":36},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"482\",\"line\":2,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":2,\"endColumn\":13},{\"ruleId\":\"505\",\"severity\":1,\"message\":\"506\",\"line\":22,\"column\":8,\"nodeType\":\"507\",\"endLine\":22,\"endColumn\":39},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"478\",\"line\":1,\"column\":16,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":1,\"endColumn\":25},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"481\",\"line\":1,\"column\":27,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":1,\"endColumn\":35},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"482\",\"line\":2,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":2,\"endColumn\":13},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"571\",\"line\":4,\"column\":16,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":4,\"endColumn\":23},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"523\",\"line\":5,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":5,\"endColumn\":14},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"572\",\"line\":7,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":7,\"endColumn\":19},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"525\",\"line\":8,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":8,\"endColumn\":21},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"573\",\"line\":24,\"column\":36,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":24,\"endColumn\":47},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"574\",\"line\":30,\"column\":32,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":30,\"endColumn\":41},{\"ruleId\":\"505\",\"severity\":1,\"message\":\"506\",\"line\":48,\"column\":9,\"nodeType\":\"507\",\"endLine\":48,\"endColumn\":90},{\"ruleId\":\"505\",\"severity\":1,\"message\":\"506\",\"line\":52,\"column\":13,\"nodeType\":\"507\",\"endLine\":52,\"endColumn\":80},{\"ruleId\":\"505\",\"severity\":1,\"message\":\"506\",\"line\":57,\"column\":9,\"nodeType\":\"507\",\"endLine\":57,\"endColumn\":81},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"478\",\"line\":1,\"column\":27,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":1,\"endColumn\":36},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"482\",\"line\":2,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":2,\"endColumn\":13},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"575\",\"line\":6,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":6,\"endColumn\":16},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"576\",\"line\":54,\"column\":9,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":54,\"endColumn\":14},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"508\",\"line\":4,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":4,\"endColumn\":14},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"509\",\"line\":5,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":5,\"endColumn\":16},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"510\",\"line\":7,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":7,\"endColumn\":17},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"494\",\"line\":8,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":8,\"endColumn\":16},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"495\",\"line\":8,\"column\":18,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":8,\"endColumn\":23},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"577\",\"line\":8,\"column\":12,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":8,\"endColumn\":20},{\"ruleId\":\"578\",\"severity\":1,\"message\":\"579\",\"line\":120,\"column\":29,\"nodeType\":\"580\",\"messageId\":\"581\",\"endLine\":120,\"endColumn\":48},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"535\",\"line\":3,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":3,\"endColumn\":14},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"494\",\"line\":5,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":5,\"endColumn\":16},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"495\",\"line\":5,\"column\":18,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":5,\"endColumn\":23},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"478\",\"line\":1,\"column\":27,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":1,\"endColumn\":36},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"582\",\"line\":6,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":6,\"endColumn\":15},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"483\",\"line\":7,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":7,\"endColumn\":20},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"486\",\"line\":12,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":12,\"endColumn\":12},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"487\",\"line\":12,\"column\":14,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":12,\"endColumn\":19},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"526\",\"line\":12,\"column\":21,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":12,\"endColumn\":27},{\"ruleId\":\"583\",\"severity\":1,\"message\":\"584\",\"line\":68,\"column\":57,\"nodeType\":\"585\",\"messageId\":\"586\",\"endLine\":68,\"endColumn\":59},{\"ruleId\":\"583\",\"severity\":1,\"message\":\"584\",\"line\":104,\"column\":34,\"nodeType\":\"585\",\"messageId\":\"586\",\"endLine\":104,\"endColumn\":36},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"494\",\"line\":5,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":5,\"endColumn\":16},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"495\",\"line\":5,\"column\":18,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":5,\"endColumn\":23},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"482\",\"line\":3,\"column\":8,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":3,\"endColumn\":13},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"478\",\"line\":1,\"column\":27,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":1,\"endColumn\":36},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"489\",\"line\":3,\"column\":10,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":3,\"endColumn\":17},{\"ruleId\":\"505\",\"severity\":1,\"message\":\"506\",\"line\":25,\"column\":9,\"nodeType\":\"507\",\"endLine\":25,\"endColumn\":39},{\"ruleId\":\"477\",\"severity\":1,\"message\":\"567\",\"line\":1,\"column\":28,\"nodeType\":\"479\",\"messageId\":\"480\",\"endLine\":1,\"endColumn\":38},{\"ruleId\":\"501\",\"severity\":1,\"message\":\"569\",\"line\":17,\"column\":6,\"nodeType\":\"503\",\"endLine\":17,\"endColumn\":8,\"suggestions\":\"587\"},{\"ruleId\":\"505\",\"severity\":1,\"message\":\"506\",\"line\":37,\"column\":9,\"nodeType\":\"507\",\"endLine\":37,\"endColumn\":39},\"no-unused-vars\",\"'useEffect' is defined but never used.\",\"Identifier\",\"unusedVar\",\"'useState' is defined but never used.\",\"'axios' is defined but never used.\",\"'formToJSON' is defined but never used.\",\"'UserProvider' is defined but never used.\",\"'sendAxiosRequest' is defined but never used.\",\"'user' is assigned a value but never used.\",\"'login' is assigned a value but never used.\",\"'useContext' is defined but never used.\",\"'useUser' is defined but never used.\",\"'isOpenNow' is defined but never used.\",\"'useForm' is assigned a value but never used.\",\"'mainUrl' is defined but never used.\",\"'StoreListItem' is defined but never used.\",\"'Routes' is defined but never used.\",\"'Route' is defined but never used.\",\"'accessTokenRefresh' is defined but never used.\",\"'refreshTokenInvalid' is defined but never used.\",\"'accordionSummaryClasses' is defined but never used.\",\"'setPageRowCount' is assigned a value but never used.\",\"'accessToken' is assigned a value but never used.\",\"react-hooks/exhaustive-deps\",\"React Hook useEffect has a missing dependency: 'pageRowCount'. Either include it or remove the dependency array.\",\"ArrayExpression\",[\"588\"],\"jsx-a11y/alt-text\",\"img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.\",\"JSXOpeningElement\",\"'Coupon' is defined but never used.\",\"'Category' is defined but never used.\",\"'StoreHome' is defined but never used.\",\"'getAccessToken' is defined but never used.\",\"'isTokenExpired' is defined but never used.\",\"'jwtDecode' is defined but never used.\",\"React Hook useEffect has missing dependencies: 'accessToken' and 'newAddLength'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setStartPageNo' needs the current value of 'newAddLength'.\",[\"589\"],\"React Hook useEffect has missing dependencies: 'accessToken' and 'newAddLength'. Either include them or remove the dependency array.\",[\"590\"],\"'MenuItem' is defined but never used.\",\"React Hook useEffect has missing dependencies: 'menuData' and 'store'. Either include them or remove the dependency array.\",[\"591\"],\"'Form' is defined but never used.\",\"'Card' is defined but never used.\",\"'Button' is defined but never used.\",\"'json' is defined but never used.\",\"'useNavigate' is defined but never used.\",\"'logout' is assigned a value but never used.\",\"'loginUser' is assigned a value but never used.\",\"'store' is assigned a value but never used.\",\"'sendAxiosMultipartRequest' is defined but never used.\",\"'useParams' is defined but never used.\",\"no-dupe-keys\",\"Duplicate key 'transition'.\",\"ObjectExpression\",\"unexpected\",\"'Link' is defined but never used.\",\"'Carousel' is defined but never used.\",\"'Handsontable' is defined but never used.\",\"'registerRenderer' is defined but never used.\",\"'recommendationItems' is assigned a value but never used.\",\"'summaryData' is assigned a value but never used.\",\"'setSummaryData' is assigned a value but never used.\",\"'averagePrice' is assigned a value but never used.\",\"'handsontableInstance' is assigned a value but never used.\",\"'cellWidth' is assigned a value but never used.\",\"eqeqeq\",\"Expected '===' and instead saw '=='.\",\"BinaryExpression\",\"'payNo' is assigned a value but never used.\",\"'pay' is assigned a value but never used.\",\"'data' is assigned a value but never used.\",\"'setState' is assigned a value but never used.\",\"Expected '!==' and instead saw '!='.\",\"'setLoginUser' is assigned a value but never used.\",\"'memberNo' is assigned a value but never used.\",\"React Hook useEffect has a missing dependency: 'newAddLength'. Either include it or remove the dependency array.\",[\"592\"],\"React Hook useEffect has a missing dependency: 'newAddLength'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setStartPageNo' needs the current value of 'newAddLength'.\",[\"593\"],\"'pageRowCnt' is assigned a value but never used.\",\"React Hook useEffect has a missing dependency: 'props.reviewNo'. Either include it or remove the dependency array.\",[\"594\"],\"'setStore' is assigned a value but never used.\",\"React Hook useEffect has a missing dependency: 'store'. Either include it or remove the dependency array.\",[\"595\"],\"'setMenuItems' is assigned a value but never used.\",\"'styles' is defined but never used.\",\"'useReducer' is defined but never used.\",\"'OrderMenuList' is defined but never used.\",\"React Hook useEffect has a missing dependency: 'orders'. Either include it or remove the dependency array.\",[\"596\"],\"'NavLink' is defined but never used.\",\"'Placeholder' is defined but never used.\",\"'startSecond' is assigned a value but never used.\",\"'endSecond' is assigned a value but never used.\",\"'Hidden' is defined but never used.\",\"'codes' is assigned a value but never used.\",\"'response' is assigned a value but never used.\",\"react/jsx-no-duplicate-props\",\"No duplicate props allowed\",\"JSXAttribute\",\"noDuplicateProps\",\"'Payment' is defined but never used.\",\"array-callback-return\",\"Array.prototype.map() expects a return value from arrow function.\",\"ArrowFunctionExpression\",\"expectedInside\",[\"597\"],{\"desc\":\"598\",\"fix\":\"599\"},{\"desc\":\"600\",\"fix\":\"601\"},{\"desc\":\"602\",\"fix\":\"603\"},{\"desc\":\"604\",\"fix\":\"605\"},{\"desc\":\"606\",\"fix\":\"607\"},{\"desc\":\"608\",\"fix\":\"609\"},{\"desc\":\"610\",\"fix\":\"611\"},{\"desc\":\"612\",\"fix\":\"613\"},{\"desc\":\"614\",\"fix\":\"615\"},{\"desc\":\"614\",\"fix\":\"616\"},\"Update the dependencies array to be: [pageRowCount]\",{\"range\":\"617\",\"text\":\"618\"},\"Update the dependencies array to be: [accessToken, newAddLength]\",{\"range\":\"619\",\"text\":\"620\"},\"Update the dependencies array to be: [accessToken, newAddLength, startPageNo, storeList]\",{\"range\":\"621\",\"text\":\"622\"},\"Update the dependencies array to be: [menuData, store]\",{\"range\":\"623\",\"text\":\"624\"},\"Update the dependencies array to be: [startPageNo, reviewList, newAddLength]\",{\"range\":\"625\",\"text\":\"626\"},\"Update the dependencies array to be: [newAddLength]\",{\"range\":\"627\",\"text\":\"628\"},\"Update the dependencies array to be: [props.reviewNo]\",{\"range\":\"629\",\"text\":\"630\"},\"Update the dependencies array to be: [store]\",{\"range\":\"631\",\"text\":\"632\"},\"Update the dependencies array to be: [orders]\",{\"range\":\"633\",\"text\":\"634\"},{\"range\":\"635\",\"text\":\"634\"},[2120,2122],\"[pageRowCount]\",[1191,1193],\"[accessToken, newAddLength]\",[2232,2256],\"[accessToken, newAddLength, startPageNo, storeList]\",[1619,1621],\"[menuData, store]\",[6376,6401],\"[startPageNo, reviewList, newAddLength]\",[6837,6839],\"[newAddLength]\",[15960,15962],\"[props.reviewNo]\",[551,553],\"[store]\",[486,488],\"[orders]\",[444,446]]
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/.cache/.eslintcache b/node_modules/.cache/.eslintcache
--- a/node_modules/.cache/.eslintcache	(revision b46336caaa845f4bdad1ceb609e1c295919a5e9c)
+++ b/node_modules/.cache/.eslintcache	(date 1698044305746)
@@ -1,1 +1,1 @@
-[{"C:\\Users\\think\\git\\bleuauction_fe\\src\\index.js":"1","C:\\Users\\think\\git\\bleuauction_fe\\src\\App.js":"2","C:\\Users\\think\\git\\bleuauction_fe\\src\\reportWebVitals.js":"3","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Auth\\UserContext.js":"4","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Auth\\LoginPage.js":"5","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Auth\\RegisterPage.js":"6","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Menu\\MenuList.js":"7","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Common\\SideBar.js":"8","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Common\\Header.js":"9","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Test\\Test.js":"10","C:\\Users\\think\\git\\bleuauction_fe\\src\\routes\\Home.js":"11","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Common\\Footer.js":"12","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Menu\\MenuRegisterationForm.js":"13","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\TabBar.js":"14","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\StoreList.js":"15","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\MarketDetailPage.js":"16","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\StoreMyPage.js":"17","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\StoreItemRegister.js":"18","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\UserEditPage.js":"19","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\StoreRegisterPage.js":"20","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\MyPage.js":"21","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\MyOrder.js":"22","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\StoreItemDailyPrice\\StoreItemDailyPrice.js":"23","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\utility\\common.js":"24","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Pay\\Pay.js":"25","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Test\\test2.jsx":"26","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Review\\ReviewForm.js":"27","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\StoreHome.js":"28","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\StoreListItem.js":"29","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Menu\\MenuItem.js":"30","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\InputField.js":"31","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\StoreInfo.js":"32","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Review\\ReviewSection.js":"33","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MainPage\\Category.js":"34","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\MyOrderContent.js":"35","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MainPage\\Announce.js":"36","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MainPage\\Button.js":"37","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\StoreHomeItem.js":"38","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Review\\ReviewList.js":"39","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Coupon\\Coupon.js":"40","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\StoreItemDailyPrice\\StoreItemAdd.js":"41","C:\\Users\\think\\git\\bleuauction_fe\\src\\routes\\StoreList.js":"42","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Chat\\Chat.js":"43","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Notice\\NoticeDetail.js":"44","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Notice\\NoticeList.js":"45","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Notice\\NoticeListItem.js":"46","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\OrderModal.js":"47","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Admin\\AdminNoticeList.js":"48","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Admin\\AdminNoticeDetail.js":"49","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Admin\\NoticeRegisterationForm.js":"50","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Admin\\AdminNoticeListItem.js":"51","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\OrderItem.js":"52","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\OrderMenuList.js":"53","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\StoreOrder.js":"54"},{"size":661,"mtime":1697978277777,"results":"55","hashOfConfig":"56"},{"size":5651,"mtime":1698038999194,"results":"57","hashOfConfig":"56"},{"size":375,"mtime":1696236038543,"results":"58","hashOfConfig":"56"},{"size":1644,"mtime":1697580419735,"results":"59","hashOfConfig":"56"},{"size":4892,"mtime":1698038999196,"results":"60","hashOfConfig":"56"},{"size":6672,"mtime":1697693754234,"results":"61","hashOfConfig":"56"},{"size":1072,"mtime":1697776613316,"results":"62","hashOfConfig":"56"},{"size":706,"mtime":1697692768881,"results":"63","hashOfConfig":"56"},{"size":3320,"mtime":1698038999198,"results":"64","hashOfConfig":"56"},{"size":1115,"mtime":1696943521784,"results":"65","hashOfConfig":"56"},{"size":2569,"mtime":1698038999217,"results":"66","hashOfConfig":"56"},{"size":285,"mtime":1697521231622,"results":"67","hashOfConfig":"56"},{"size":3962,"mtime":1697776613317,"results":"68","hashOfConfig":"56"},{"size":1388,"mtime":1697097424814,"results":"69","hashOfConfig":"56"},{"size":2621,"mtime":1698038999200,"results":"70","hashOfConfig":"56"},{"size":2965,"mtime":1697990268617,"results":"71","hashOfConfig":"56"},{"size":0,"mtime":1697691593162,"results":"72","hashOfConfig":"73"},{"size":8281,"mtime":1698038999207,"results":"74","hashOfConfig":"56"},{"size":6428,"mtime":1698038999208,"results":"75","hashOfConfig":"56"},{"size":7165,"mtime":1697776613319,"results":"76","hashOfConfig":"56"},{"size":4993,"mtime":1698038999206,"results":"77","hashOfConfig":"56"},{"size":2335,"mtime":1697521308636,"results":"78","hashOfConfig":"56"},{"size":13418,"mtime":1698038999213,"results":"79","hashOfConfig":"56"},{"size":6525,"mtime":1698038999215,"results":"80","hashOfConfig":"56"},{"size":4473,"mtime":1697713109592,"results":"81","hashOfConfig":"56"},{"size":470,"mtime":1696943521785,"results":"82","hashOfConfig":"56"},{"size":20110,"mtime":1697697390436,"results":"83","hashOfConfig":"56"},{"size":800,"mtime":1698038999209,"results":"84","hashOfConfig":"56"},{"size":1651,"mtime":1698038999201,"results":"85","hashOfConfig":"56"},{"size":2090,"mtime":1697691593156,"results":"86","hashOfConfig":"56"},{"size":381,"mtime":1698038999204,"results":"87","hashOfConfig":"56"},{"size":3829,"mtime":1697776613313,"results":"88","hashOfConfig":"56"},{"size":750,"mtime":1697097424831,"results":"89","hashOfConfig":"56"},{"size":642,"mtime":1697097424806,"results":"90","hashOfConfig":"56"},{"size":2332,"mtime":1698038717403,"results":"91","hashOfConfig":"56"},{"size":1807,"mtime":1697627389378,"results":"92","hashOfConfig":"56"},{"size":436,"mtime":1697097424804,"results":"93","hashOfConfig":"56"},{"size":2417,"mtime":1697624654909,"results":"94","hashOfConfig":"56"},{"size":1326,"mtime":1697097424829,"results":"95","hashOfConfig":"56"},{"size":1441,"mtime":1697097424799,"results":"96","hashOfConfig":"56"},{"size":4808,"mtime":1697868489177,"results":"97","hashOfConfig":"56"},{"size":1055,"mtime":1697691593170,"results":"98","hashOfConfig":"73"},{"size":6453,"mtime":1697691593146,"results":"99","hashOfConfig":"56"},{"size":1078,"mtime":1697691593165,"results":"100","hashOfConfig":"56"},{"size":691,"mtime":1697691593167,"results":"101","hashOfConfig":"56"},{"size":1438,"mtime":1697691593168,"results":"102","hashOfConfig":"56"},{"size":6687,"mtime":1698033743056,"results":"103","hashOfConfig":"56"},{"size":728,"mtime":1697792750306,"results":"104","hashOfConfig":"56"},{"size":2560,"mtime":1697792750304,"results":"105","hashOfConfig":"56"},{"size":2653,"mtime":1697792750308,"results":"106","hashOfConfig":"56"},{"size":2545,"mtime":1697792750307,"results":"107","hashOfConfig":"56"},{"size":1316,"mtime":1698012733667,"results":"108","hashOfConfig":"56"},{"size":3032,"mtime":1698038717405,"results":"109","hashOfConfig":"56"},{"size":1926,"mtime":1698038717406,"results":"110","hashOfConfig":"56"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u8wuzz",{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"131ovsd",{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230"},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237"},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247"},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254"},{"filePath":"255","messages":"256","suppressedMessages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258"},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262"},{"filePath":"263","messages":"264","suppressedMessages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","suppressedMessages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269"},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273"},{"filePath":"274","messages":"275","suppressedMessages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","suppressedMessages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280"},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287"},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\think\\git\\bleuauction_fe\\src\\index.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\App.js",["294","295","296","297","298","299","300","301"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\reportWebVitals.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Auth\\UserContext.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Auth\\LoginPage.js",["302","303","304","305","306","307"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Auth\\RegisterPage.js",["308","309","310"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Menu\\MenuList.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Common\\SideBar.js",["311"],[],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport styles from './SideBar.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Chat from '../Chat/Chat';\r\n\r\nfunction SideBar() {\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n    const toggleModal = () => {\r\n        setIsModalOpen(!isModalOpen);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.sideBarBox}>\r\n            <Link to='/StoreItemAdd'>등록</Link>\r\n            <Link to=\"/\">오늘의 <br />방사능</Link>\r\n            <Link to=\"#\" onClick={toggleModal}>챗봇</Link>\r\n            {isModalOpen && <Chat closeModal={toggleModal} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideBar;","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Common\\Header.js",["312","313","314","315","316","317"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Test\\Test.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\routes\\Home.js",["318","319","320","321","322","323","324","325","326","327"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Common\\Footer.js",["328","329","330","331"],[],"import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport styles from './Footer.module.css';\r\n\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className={styles.footerBox}>\r\n      <img src='/images/LogoPage.png' />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer;","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Menu\\MenuRegisterationForm.js",["332"],[],"import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios, { formToJSON } from 'axios';\r\nimport { sendAxiosRequest } from '../utility/common';\r\n\r\nfunction MenuRegisterationForm() {\r\n  const [menu, setMenu] = useState({\r\n    menuImage: null,\r\n    menuName: '',\r\n    menuSize: '',\r\n    menuPrice: '',\r\n    menuContent: '',\r\n  });\r\n\r\n  const [previewImage, setPreviewImage] = useState(null); // 이미지 미리보기 URL\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) {\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      // 이미지 파일 데이터를 상태에 저장하고 미리보기 설정\r\n      setMenu({ ...menu, menuImage: file });\r\n      setPreviewImage(reader.result);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setMenu({ ...menu, [name]: value });\r\n  };\r\n\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let formData = new FormData(e.target);\r\n    let formObj = formToJSON(formData);\r\n    sendAxiosRequest('/api/menu/new', 'POST', formObj, response => {\r\n      console.log('메뉴 응답값:', response.data);\r\n      alert('메뉴등록에 성공하셨습니다!');\r\n      navigate('/');\r\n    },\r\n      error => {\r\n        console.error('API 호출 중 에러 발생: ', error);\r\n        alert('메뉴등록에 실패하셨습니다!');\r\n      }\r\n    )\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <form onSubmit={handleSubmit} style={styles.form}>\r\n      <h2>메뉴 등록</h2>\r\n        <div>\r\n          <label>메뉴 이미지:</label>\r\n          <input style={styles.input} type=\"file\" onChange={handleImageChange} />\r\n          {previewImage && (\r\n            <div>\r\n              <h3>이미지 미리보기:</h3>\r\n              <img src={previewImage} alt=\"미리보기\" style={{ height: '100px' }} /> {/* 미리보기 이미지 크기는 조절 가능 */}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label>메뉴 이름:</label>\r\n          <input style={styles.input} type=\"text\" name=\"menuName\" value={menu.menuName} onChange={handleChange} />\r\n        </div>\r\n        <div>\r\n          <label>메뉴 사이즈:</label>\r\n          <input style={styles.input} type=\"text\" name=\"menuSize\" value={menu.menuSize} onChange={handleChange} />\r\n        </div>\r\n        <div>\r\n          <label>메뉴 가격:</label>\r\n          <input style={styles.input} type=\"number\" name=\"menuPrice\" value={menu.menuPrice} onChange={handleChange} />\r\n        </div>\r\n        <div>\r\n          <label>메뉴 설명:</label>\r\n          <textarea name=\"menuContent\" value={menu.menuContent} onChange={handleChange} />\r\n        </div>\r\n        <button type=\"submit\" style={styles.submitButton}>메뉴 등록</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '30vh',\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center', // 폼 내용을 중앙 정렬합니다.\r\n    padding: '20px',  // 내부 패딩을 추가합니다.\r\n    borderRadius: '12px',  // 모서리를 둥글게 합니다.\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2)', // 약간의 그림자 효과를 추가합니다.\r\n    background: 'white', // 배경색을 흰색으로 설정합니다.\r\n    width: '800px', \r\n  },\r\n  input: {\r\n    padding: '10px',\r\n    margin: '5px 0',\r\n    borderRadius: '6px',\r\n    border: '1px solid #ccc',\r\n    outline: 'none',\r\n    width: '300px', \r\n  },\r\n  submitButton: {\r\n    padding: '10px 20px',\r\n    cursor: 'pointer',\r\n    backgroundColor: '#0575E6',\r\n    border: 'none',\r\n    borderRadius: '8px',\r\n    color: 'white',\r\n  },\r\n}\r\n\r\n\r\nexport default MenuRegisterationForm;\r\n","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\TabBar.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\StoreList.js",["333","334","335","336","337","338","339","340","341","342","343","344"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\MarketDetailPage.js",["345","346","347"],[],"import React, { useState } from 'react';\r\nimport TabBar from './TabBar';\r\nimport MenuList from '../Menu/MenuList';\r\nimport Button from '../MainPage/Button';\r\nimport StoreInfo from './StoreInfo';\r\nimport ReviewSection from '../Review/ReviewSection';\r\nimport { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { sendAxiosRequest } from '../utility/common';\r\nimport { MenuItem } from '@mui/material';\r\nimport OrderModal from './OrderModal';\r\nimport { useUser } from '../Auth/UserContext';\r\n\r\n\r\nfunction MarketDetailPage() {\r\n\r\n  const [activeTab, setActiveTab] = useState('info');\r\n  const [modal, setModal] = useState(false);\r\n  const [menuData, setMenuData] = useState([]); // 메뉴 데이터를 저장할 상태\r\n\r\n  const location = useLocation(); // 추가된 부분\r\n  const store = location.state; // 추가된 부분\r\n\r\n\r\n  const storeInfo = {\r\n    image: '/images/storeimage.png',\r\n    name: '대원수산',\r\n    location: '서울특별시 동작구 노들로 674 노량진수산시장 , 2층 활어 2-15호 강변상회',\r\n    hours: '월요일 (오늘) 09:00 ~ 21:00',\r\n    phone: '02-1234-5678',\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (store && store.storeNo) {\r\n      // 상점 번호가 있는 경우에만 요청을 실행합니다.\r\n      sendAxiosRequest(`/api/menu/${store.storeNo}`, 'GET', null, response => {\r\n        if (response.data && response.data.length > 0) {\r\n          console.log(response.data);\r\n          setMenuData(response.data.map((menu) => ({\r\n            ...menu, \r\n            count: 0\r\n          }))); // 받아온 데이터로 상태를 업데이트합니다.\r\n          console.log(menuData);\r\n        }\r\n      }, error => {\r\n        console.error(\"An error occurred while fetching the menus:\", error);\r\n      });\r\n    }\r\n  }, [])\r\n\r\n\r\n\r\n  const handleOrderClick = () => {\r\n    // alert('주문하기 버튼 클릭!');\r\n    setModal(true);\r\n    console.log(modal);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModal(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div style={infoContainerStyle}>\r\n      <StoreInfo storeInfo={storeInfo} store={store} />\r\n      </div>\r\n      <div style={tabContainerStyle}>\r\n        <TabBar activeTab={activeTab} onTabClick={setActiveTab} />\r\n        {activeTab === 'menu' && <Button onClick={handleOrderClick} buttonText=\"주문하기\" />}\r\n        <OrderModal store={store} menus={menuData} isOpen={modal} onClose={closeModal} setMenuData={setMenuData} />\r\n      </div>\r\n      {activeTab === 'info' && <p>여기에 가게정보를 표시합니다.</p>}\r\n      {activeTab === 'menu' && <MenuList menus={menuData}/>}\r\n      {activeTab === 'review' && <ReviewSection />}\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nconst infoContainerStyle = {\r\n  marginBottom: '0px', // 예시: 아래쪽 마진을 추가하여 공간 생성\r\n};\r\n\r\nconst tabContainerStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center'\r\n};\r\n\r\n\r\nexport default MarketDetailPage;","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\StoreMyPage.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\StoreItemRegister.js",["348","349","350","351","352","353","354","355","356","357"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\UserEditPage.js",["358","359","360"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\StoreRegisterPage.js",["361","362"],[],"import React, { useState } from 'react';\r\n// import { Form, Card, Button } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios, { formToJSON } from 'axios';\r\n\r\n\r\n\r\nfunction StoreRegisterPage() {\r\n\r\n\r\n  const navigate = useNavigate();\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(e.target);\r\n    let formData = new FormData(e.target);\r\n\r\n    let jsonObj = formToJSON(formData);\r\n\r\n    console.log(jsonObj);\r\n\r\n    // POST 요청 생성\r\n    axios.post('/api/store/signup', jsonObj, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(response => {\r\n        // 성공적으로 서버에서 응답을 받은 경우의 처리\r\n        console.log('등록된 가게 정보:', response.data);\r\n        alert('가게 등록 성공!')\r\n        navigate('/mypage');\r\n\r\n      })\r\n      .catch(error => {\r\n        // 오류가 발생한 경우의 처리\r\n        console.error('에러 발생:', error);\r\n      });\r\n\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <form onSubmit={handleSubmit} style={styles.form}>\r\n      <div>\r\n        <h2>가게 등록 </h2>\r\n        </div>\r\n        <div>\r\n        <label>시장명: </label>\r\n        <input style={styles.input} type=\"text\" name=\"marketName\" />\r\n        </div>\r\n        <div>\r\n        <label>가게명: </label>\r\n        <input style={styles.input} type=\"text\" name=\"storeName\" />\r\n        </div>\r\n        <div>\r\n        <label>사업자등록번호: </label>\r\n        <input style={styles.input} type=\"text\" name=\"licenseNo\" />\r\n        </div>\r\n        <div>\r\n        <label>우편번호: </label>\r\n        <input style={styles.input} type=\"text\" name=\"storeZipcode\" />\r\n        </div>\r\n        <div>\r\n        <label>기본주소: </label>\r\n        <input style={styles.input} type=\"text\" name=\"storeAddr\" />\r\n        </div>\r\n        <div>\r\n        <label>상세주소: </label>\r\n        <input style={styles.input} type=\"text\" name=\"storeDetailAddr\" />\r\n        </div>\r\n\r\n\r\n        <div>\r\n          <label>평일운영시작시간: </label>\r\n          <input style={styles.input} type=\"time\" name=\"weekdayStartTime\" />\r\n        </div>\r\n        <div>\r\n          <label>평일운영종료시간: </label>\r\n          <input style={styles.input} type=\"time\" name=\"weekdayEndTime\" />\r\n        </div>\r\n        <div>\r\n          <label>주말운영시작시간: </label>\r\n          <input style={styles.input} type=\"time\" name=\"weekendStartTime\" />\r\n        </div>\r\n        <div>\r\n          <label>주말운영종료시간: </label>\r\n          <input style={styles.input} type=\"time\" name=\"weekendEndTime\" />\r\n        </div>\r\n\r\n        <button type=\"submit\" style={styles.submitButton}> 가게 등록</button>\r\n\r\n      </form>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '60vh',\r\n  },\r\n  card: {\r\n    width: '50%', \r\n    boxShadow: '0 8px 30px rgba(0, 0, 0, 0.12)',\r\n    borderRadius: '20px', \r\n    padding: '20px', \r\n  },\r\n\r\n  title: {\r\n    fontSize: '1.8rem',\r\n    marginBottom: '30px',\r\n    textAlign: 'center',\r\n  },\r\n  button: {\r\n    background: 'linear-gradient(to right, #6a11cb, #2575fc)',\r\n    border: 'none',\r\n    padding: '10px 20px',\r\n    color: 'white',\r\n    borderRadius: '25px',\r\n    transition: 'all 0.2s',\r\n    cursor: 'pointer',\r\n    transition: 'all 0.3s', \r\n    '&:hover': {\r\n      transform: 'scale(1.1)', \r\n    },\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center', // 폼 내용을 중앙 정렬합니다.\r\n    padding: '20px',  // 내부 패딩을 추가합니다.\r\n    borderRadius: '12px',  // 모서리를 둥글게 합니다.\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2)', // 약간의 그림자 효과를 추가합니다.\r\n    background: 'white', // 배경색을 흰색으로 설정합니다.\r\n    width: '800px', \r\n  },\r\n  input: {\r\n    padding: '10px',\r\n    margin: '5px 0',\r\n    borderRadius: '6px',\r\n    border: '1px solid #ccc',\r\n    outline: 'none',\r\n    width: '300px', \r\n  },\r\n  submitButton: {\r\n    padding: '10px 20px',\r\n    cursor: 'pointer',\r\n    backgroundColor: '#0575E6',\r\n    border: 'none',\r\n    borderRadius: '8px',\r\n    color: 'white',\r\n  },\r\n};\r\n\r\n\r\n\r\nexport default StoreRegisterPage;\r\n\r\n\r\n\r\n// import * as React from 'react';\r\n// import { Button, TextField, Box, Typography, Container } from '@mui/material';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\n// function StoreRegisterPage() {\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const formData = new FormData(e.currentTarget);\r\n//     // 폼 데이터를 JSON으로 변환하는 로직이 필요합니다.\r\n//     // formToJSON 함수를 정의하거나 다른 방법을 사용하세요.\r\n\r\n//     // JSON 객체 생성\r\n//     let jsonObj = {}; \r\n//     formData.forEach((value, key) => { jsonObj[key] = value });\r\n\r\n//     console.log(jsonObj);\r\n\r\n//     // POST 요청 생성\r\n//     axios.post('/api/store/signup', jsonObj, {\r\n//       headers: {\r\n//         'Content-Type': 'application/json'\r\n//       }\r\n//     })\r\n//       .then(response => {\r\n//         console.log('등록된 가게 정보:', response.data);\r\n//         // navigate('/path-after-success'); // 성공 후 리디렉션 경로\r\n//       })\r\n//       .catch(error => {\r\n//         console.error('에러 발생:', error);\r\n//       });\r\n//   };\r\n\r\n//   // Material-UI 컴포넌트를 사용한 레이아웃\r\n//   return (\r\n//     <Container component=\"main\" maxWidth=\"xs\">\r\n//       <Box\r\n//         sx={{\r\n//           marginTop: 8,\r\n//           display: 'flex',\r\n//           flexDirection: 'column',\r\n//           alignItems: 'center',\r\n//         }}\r\n//       >\r\n//         <Typography component=\"h1\" variant=\"h5\">\r\n//           가게 등록\r\n//         </Typography>\r\n//         <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n//           <TextField\r\n//             margin=\"normal\"\r\n//             required\r\n//             fullWidth\r\n//             id=\"marketName\"\r\n//             label=\"시장명\"\r\n//             name=\"marketName\"\r\n//             autoComplete=\"market-name\"\r\n//             autoFocus\r\n//           />\r\n//           {/* 다른 필드들도 이와 유사한 형태로 추가합니다. */}\r\n//           {/* 예시: */}\r\n//           <TextField\r\n//             margin=\"normal\"\r\n//             required\r\n//             fullWidth\r\n//             name=\"storeName\"\r\n//             label=\"가게명\"\r\n//             id=\"storeName\"\r\n//             autoComplete=\"store-name\"\r\n//           />\r\n//           {/* 나머지 필드를 여기에 추가 */}\r\n//           {/* ... */}\r\n//           <Button\r\n//             type=\"submit\"\r\n//             fullWidth\r\n//             variant=\"contained\"\r\n//             sx={{ mt: 3, mb: 2 }}\r\n//           >\r\n//             가게 등록\r\n//           </Button>\r\n//         </Box>\r\n//       </Box>\r\n//     </Container>\r\n//   );\r\n// }\r\n\r\n// export default StoreRegisterPage;\r\n","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\MyPage.js",["363","364","365"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\MyOrder.js",["366"],[],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport MyOrderContent from './MyOrderContent';\r\n\r\n\r\nfunction MyOrder() {\r\n\r\n  const order1 = {\r\n    orderPrice:'10000',\r\n    recipientPhone:'01011111111',\r\n    recipientName: '김성주',\r\n    recipientZipcode: '1111',\r\n    recipientAddr: '기본주소',\r\n    recipientDetailAddr: '상세주소',\r\n    regDatetime: '2023-09-01 15:00:00',\r\n    mdfDatetime: '2023-09-01 15:00:00',\r\n    orderStatus: 'Y'\r\n  }\r\n\r\n  const order2 = {\r\n    orderPrice:'20000',\r\n    recipientPhone:'01011111111',\r\n    recipientName: '김성주2',\r\n    recipientZipcode: '1111',\r\n    recipientAddr: '기본주소',\r\n    recipientDetailAddr: '상세주소',\r\n    regDatetime: '2023-09-01 15:00:00',\r\n    mdfDatetime: '2023-09-01 15:00:00',\r\n    orderStatus: 'N'\r\n  }\r\n\r\n  const order3 = {\r\n    orderPrice:'10000',\r\n    recipientPhone:'01011111111',\r\n    recipientName: '김성주',\r\n    recipientZipcode: '1111',\r\n    recipientAddr: '기본주소',\r\n    recipientDetailAddr: '상세주소',\r\n    regDatetime: '2023-09-01 15:00:00',\r\n    mdfDatetime: '2023-09-01 15:00:00',\r\n    orderStatus: 'Y'\r\n  }\r\n\r\n\r\n  const orderlist = [order1, order2, order3]\r\n\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  const onClick = (e) => {\r\n    setSelected(e.target.value);\r\n  };\r\n\r\n  useEffect(()=>{\r\n    console.log(selected);\r\n  }, [selected])\r\n\r\n  // let content = (selected === 'Delivered') ? \r\n  // <MyOrderContent orderlist = {orderlist.filter((item)=>item.orderStatus === 'N')}/> : \r\n  // <MyOrderContent orderlist = {orderlist.filter((item)=>item.orderStatus === 'Y')} />;\r\n\r\n  let content = (\r\n    (selected === 'Delivered') ? <MyOrderContent orderlist = {orderlist.filter((item)=>item.orderStatus === 'Y')}/> : \r\n    (selected === 'Canceled') ? <MyOrderContent orderlist = {orderlist.filter((item)=>item.orderStatus === 'N')} />:\r\n    null\r\n  )\r\n\r\n  return (\r\n      <>\r\n        <h2>마이오더</h2>\r\n        <div>\r\n          <button value={'Delivered'} onClick = {onClick}>Delivered</button>\r\n          <button value={'Canceled'} onClick = {onClick}>Canceled</button>\r\n        </div>\r\n        <div>\r\n          {/* <MyOrderContent /> */}\r\n          {content}\r\n        </div>\r\n      \r\n      \r\n      </>\r\n  );\r\n};\r\n\r\nexport default MyOrder;\r\n","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\StoreItemDailyPrice\\StoreItemDailyPrice.js",["367","368","369","370","371","372","373","374","375","376","377"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\utility\\common.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Pay\\Pay.js",["378","379","380","381"],[],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n// import swal from 'sweetalert';\r\n// import { response } from 'express';\r\n// import { error } from 'console';\r\n\r\nconst Payment = () => {\r\n  useEffect(() => {\r\n    const jquery = document.createElement(\"script\");\r\n    jquery.src = \"http://code.jquery.com/jquery-1.12.4.min.js\";\r\n    const iamport = document.createElement(\"script\");\r\n    iamport.src = \"https://cdn.iamport.kr/v1/iamport.js\";\r\n    document.head.appendChild(jquery);\r\n    document.head.appendChild(iamport);\r\n    return () => {\r\n      document.head.removeChild(jquery);\r\n      document.head.removeChild(iamport);\r\n    };\r\n  }, []);\r\n\r\n  function sendAxiosRequest(url, method, params, successCallback, errorCallback) {\r\n    console.log(url);\r\n    const axiosConfig = {\r\n      timeout: 5000,\r\n      url: url,\r\n      method: method,\r\n    };\r\n    if (params != null)\r\n      axiosConfig.params = params;\r\n    axios(axiosConfig).then(successCallback).catch(errorCallback);\r\n  }\r\n\r\n  const memberNo = 1;\r\n  const payNo = 1;\r\n  const orderNo = 1;\r\n  const [member, setMember] = useState(null);\r\n  const [pay, setPay] = useState(null);\r\n  const [order, setOrder] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch member data\r\n    sendAxiosRequest(`/api/member/${memberNo}`, 'GET', null,\r\n      response => {\r\n\r\n        console.log('Member data:', response.data);\r\n        setMember(response.data); // Update member state\r\n      },\r\n      error => {\r\n        console.error('Error fetching member data:', error);\r\n      }\r\n    );\r\n\r\n    // Fetch order data\r\n    sendAxiosRequest(`/api/order/detail/${orderNo}`, 'GET', null,\r\n      response => {\r\n        console.log('Order data:', response.data);\r\n        setOrder(response.data); // Update order state\r\n      },\r\n      error => {\r\n        console.error('Error fetching order data:', error);\r\n      }\r\n    );\r\n  }, []); // Empty dependency array to ensure this effect runs only once\r\n\r\n  const requestPay = () => {\r\n    console.log('memberState', member);\r\n    console.log('orderState', order);\r\n\r\n    const { IMP } = window;\r\n    const buyerEmail = member ? member.memberEmail : '';\r\n    const buyerName = member ? member.memberName : '';\r\n    const buyerTel = member ? member.memberPhone : '';\r\n    const name = order ? order.orderNo : '';\r\n    const buyerAddr = order ? order.resipientAddr : '';\r\n    const buyerPostcode = order ? order.resipientZipcode : '';\r\n    const amount = order.orderPrice;\r\n\r\n    IMP.init('imp11340204');\r\n\r\n    IMP.request_pay({\r\n      pg: 'kakaopay.TC0ONETIME',\r\n      pay_method: 'card',\r\n      merchant_uid: new Date().getTime(),\r\n      name: name,\r\n      amount: amount,\r\n      buyer_email: buyerEmail,\r\n      buyer_name: buyerName,\r\n      buyer_tel: buyerTel,\r\n      buyer_addr: buyerAddr,\r\n      buyer_postcode: buyerPostcode,\r\n    }, async (rsp) => {\r\n      console.log('rsp: ', rsp);\r\n      try {\r\n        const { data } = await axios.post('/api/pay/verifyIamport/' + rsp.imp_uid);\r\n        if (rsp.paid_amount === amount) {\r\n          alert('결제 성공!');\r\n          const testPay = {\r\n            // \"payType\": \"C\",\r\n            // \"orderStatus\": \"Y\",\r\n            // \"payNo\": 123,\r\n            orderNo: order.orderNo,\r\n            payPrice: amount,\r\n            payStatus: rsp.success ? 'Y' : 'N'\r\n            // \"payDatetime\": \"2023-10-18T12:34:56\",  // 예: ISO 8601 형식의 날짜 및 시간\r\n            // \"payCancelDatetime\": \"2023-10-18T14:45:00\"  // 예: ISO 8601 형식의 날짜 및 시간\r\n          }\r\n\r\n          console.log('testPay.payStatus: ', testPay.payStatus);\r\n\r\n          axios.post('/api/pay/createPayment', testPay, {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n          })\r\n            .then(response => {\r\n              console.log('Pay data:', response.data);\r\n              setPay(response.data);\r\n            })\r\n            .catch(error => {\r\n              console.error('Error fetching pay data:', error);\r\n            });\r\n\r\n        } else if (rsp.paid_amount == amount) {\r\n          alert('결제 성공?');\r\n        } else {\r\n          alert('결제 실패?');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error while verifying payment:', error);\r\n        alert('결제 실패');\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={requestPay}>결제하기</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n\r\n","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Test\\test2.jsx",["382","383","384"],[],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Test.css';\r\n\r\nconst Test = () => {\r\n  const [testStatus, setState] = useState({\r\n    loading: false,\r\n    response: '값을 가져오니라'\r\n  });\r\n\r\n  console.log(\"testStatus : \",testStatus)\r\n  return (\r\n    <>\r\n      <h1>Test API</h1>\r\n      <div className=\"response-container\">\r\n          <p>{testStatus.response}</p>\r\n        </div>\r\n    </>\r\n  );\r\n}\r\nexport default Test;\r\n","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Review\\ReviewForm.js",["385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407"],[],"import '../utility/Common.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { formToJSON } from 'axios';\r\nimport { scrollMoveTop, sendAxiosMultipartRequest, sendAxiosRequest, dateFormatParse, handleInputChange } from '../utility/common';\r\n\r\n\r\nfunction ReviewForm() {\r\n  let [loginUser, setLoginUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    sendAxiosRequest(\"/api/member/loginCheck\", \"GET\", null,\r\n      response => {\r\n        let repLoginUser = response.data.loginUser;\r\n        console.log('loginUser#@#@#@#@', response.data);\r\n        if (repLoginUser === null) {\r\n          window.location.href = '/';\r\n        } else {\r\n          setLoginUser(repLoginUser);\r\n        }\r\n      }, error => console.log(error));\r\n  }, []);\r\n\r\n  // 로그인 확인\r\n  console.log(loginUser);\r\n\r\n  if (loginUser != null && loginUser != undefined) {\r\n    return (\r\n      <div id='maindDiv' className=\"review-main-div\">\r\n        <div id='mainContentDiv' className=\"ba-main-content-div\">\r\n          <ReviewWriteForm loginUser={loginUser}></ReviewWriteForm>\r\n          <ReviewListDiv></ReviewListDiv>\r\n        </div>\r\n        <div id=\"topBtnDiv\" onClick={scrollMoveTop}>↑</div>\r\n      </div >\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction ReviewWriteForm(props) {\r\n  let [loginUser, setLoginUser] = useState(props.loginUser);\r\n  let [storeNo, setStoreNo] = useState(1);\r\n  let [memberNo, setMemberNo] = useState(1);\r\n  let [reviewFreshness, setReviewFreshness] = useState('M');\r\n\r\n  if (loginUser != null && loginUser != undefined) {\r\n\r\n    return (\r\n      <form id=\"reviewWriteForm\" encType='multipart/form-data' className='ba-form'>\r\n        <label htmlFor='storeNo'><input id='storeNo' name='storeNo' value={storeNo} hidden onChange={(e) => setStoreNo(e.target.value)}></input></label>\r\n        <label htmlFor='memberNo'><input id='memberNo' name='memberNo' value={loginUser.memberNo} hidden text onChange={(e) => setMemberNo(e.target.value)}></input></label>\r\n        <img className='ba-member-profile' src='http://fvhsczepiibf19983519.cdn.ntruss.com/member/defaultProfile.jpg?type=f&w=50&h=50&ttype=jpg' ></img>\r\n        <sapn className='ba-font-name'>{loginUser.memberName}</sapn>\r\n        <span className='ba-font-title'>신선도 :</span>\r\n        <label htmlFor='freshness-low' className='ba-freshness'><img src='/images/low.png' /><input type=\"radio\" id='freshness-low' name='reviewFreshness' value={'L'} checked={reviewFreshness === 'L'} onChange={() => setReviewFreshness('L')}></input></label>\r\n        <label htmlFor='freshness-medium' className='ba-freshness'><img src='/images/mid.png' /><input type=\"radio\" id='freshness-medium' name='reviewFreshness' value={'M'} checked={reviewFreshness === 'M'} onChange={() => setReviewFreshness('M')}></input></label>\r\n        <label htmlFor='freshness-high' className='ba-freshness'><img src='/images/high.png' /><input type=\"radio\" id='freshness-high' name='reviewFreshness' value={'H'} checked={reviewFreshness === 'H'} onChange={() => setReviewFreshness('H')}></input></label>\r\n        <div>\r\n          <textarea name=\"reviewContent\" className='ba-textarea' />\r\n        </div>\r\n        <div className='ba-text-left'>\r\n          <button type='button' className='ba-btn ba-margin-right10' onClick={() => {\r\n            let formData = new FormData(document.getElementById('reviewWriteForm'));\r\n            let reviewContentLength = formData.get('reviewContent').trim().length;\r\n            console.log(reviewContentLength);\r\n\r\n            if (reviewContentLength < 1) {\r\n              alert('작성하실 리뷰 내용을 입력해주세요!');\r\n              return;\r\n            }\r\n\r\n            let inputFile = document.querySelector('input[type=\"file\"]');\r\n            if (inputFile.files.length > 0) {\r\n              let files = inputFile.files;\r\n              for (let i = 0; i < files.length; i++) {\r\n                formData.append(\"multipartFiles\", files[i]);\r\n              }\r\n            }\r\n\r\n            console.log('여기다.');\r\n            sendAxiosMultipartRequest('/api/review/add', formData,\r\n              response => {\r\n                console.log('리뷰작성성공');\r\n                window.location.reload();\r\n                alert('리뷰를 성공적으로 작성하였습니다!');\r\n                console.log(response.data);\r\n              }, error => console.log(error));\r\n\r\n          }}>리뷰작성</button>\r\n          <label htmlFor='fileInput' className='ba-file-label'>파일 첨부</label><span id='fileInfoSpan'></span>\r\n          <input type='file' id='fileInput' multiple hidden className='ba-file-btn' onChange={(e) => {\r\n            let files = e.target.files;\r\n            console.log(files);\r\n            let fileInfoStr;\r\n            for (let i = 0; i < 2; i++) {\r\n              fileInfoStr = (i === 0) ? fileInfoStr + ' ' + files[i].name + ', ' : fileInfoStr + ' ' + files[i].name;\r\n            }\r\n            document.getElementById('fileInfoSpan').textContent = '파일명: ' + fileInfoStr + ' 등 ' + files.length + '개의 첨부파일';\r\n          }} />\r\n        </div>\r\n\r\n      </form >\r\n    );\r\n  }\r\n}\r\n\r\nfunction ReviewListDiv(props) {\r\n  const pageRowCnt = 4;\r\n  let [loginUser, setLoginUser] = useState(props.loginUser);\r\n  let [startPageNo, setStartPageNo] = useState(0);\r\n  let [reviewList, setReviewList] = useState([]);\r\n  let [selectedReviewNo, setSelectedReviewNo] = useState(null);\r\n  let [newAddLength, setNewAddLength] = useState(pageRowCnt);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      console.log(newAddLength);\r\n      if (newAddLength < pageRowCnt) {\r\n        return;\r\n      }\r\n      if (\r\n        window.innerHeight + document.documentElement.scrollTop >=\r\n        document.documentElement.scrollHeight - 100\r\n      ) {\r\n\r\n        console.log(\"스크롤 이벤트 핸들러 작동\");\r\n        sendAxiosRequest(`/api/review/list?startPage=${startPageNo}`, 'GET', null, response => {\r\n          console.log('response:', response);\r\n          console.log('response.data:',response.data);\r\n          let addReviewList = response.data.reviewList;\r\n          setNewAddLength(response.data.reviewList.length);\r\n          let newReviewList = [...reviewList, ...addReviewList];\r\n\r\n          setStartPageNo(Math.floor(newReviewList.length / pageRowCnt));\r\n          setReviewList(newReviewList);\r\n        }, error => console.log(error))\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    }\r\n  }, [startPageNo, reviewList]);\r\n\r\n  useEffect(() => {\r\n    sendAxiosRequest(\"/api/review/list\", \"GET\", null,\r\n      response => {\r\n        console.log('response.datasdsd:', response.data);\r\n        let data = response.data;\r\n        setLoginUser(data.loginUser);\r\n        setReviewList(data.reviewList);\r\n        setNewAddLength(data.reviewList.length);\r\n        setStartPageNo(Math.floor(newAddLength / pageRowCnt));\r\n      }, error => console.log(error));\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <div id=\"reviewListDiv\" className='review-list-div'>\r\n      { reviewList.map((review, index) => (\r\n        <div key={index} className='review-div'>\r\n          <form id={'reviewUpdateForm' + index}>\r\n            <input id={'reviewNo' + index} name='reviewNo' hidden value={review.reviewNo} />\r\n\r\n            <div className='ba-title-container'>\r\n              <img className='ba-member-profile' src='http://fvhsczepiibf19983519.cdn.ntruss.com/member/defaultProfile.jpg?type=f&w=50&h=50&ttype=jpg' />\r\n              <div className='ba-title-info'>\r\n                <b>{review.member.memberName}</b>\r\n                <span><b>작성일:</b><input type='text' value={dateFormatParse(new Date(review.mdfDatetime))} className='ba-input-text' disabled /></span>\r\n              </div>\r\n              <div className='ba-title-freshness'>\r\n                <span className='ba-font-title'>신선도 :</span>\r\n                <label htmlFor='freshness-low'>\r\n                  <img src='/images/low.png' />\r\n                  <input type=\"radio\" name='reviewFreshness' value={'L'} checked={review.reviewFreshness === 'L'} onChange={(e) => handleInputChange(e, index, reviewList, setReviewList)} />\r\n                </label>\r\n                <label htmlFor='freshness-mid'>\r\n                  <img src='/images/mid.png' />\r\n                  <input type=\"radio\" name='reviewFreshness' value={'M'} checked={review.reviewFreshness === 'M'} onChange={(e) => handleInputChange(e, index, reviewList, setReviewList)} />\r\n                </label>\r\n                <label htmlFor='freshness-high'>\r\n                  <img src='/images/high.png' />\r\n                  <input type=\"radio\" name='reviewFreshness' value={'H'} checked={review.reviewFreshness === 'H'} onChange={(e) => handleInputChange(e, index, reviewList, setReviewList)} />\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <hr />\r\n            <div>\r\n              {review.reviewAttaches.length > 0 && (\r\n                <div className='ba-img-list-div'>\r\n                  <img id={'defaultImg' + index} className='ba-img-first' src={`http://kr.object.ncloudstorage.com/bleuauction-bucket/review/${review.reviewAttaches.length > 0 ? review.reviewAttaches[0].saveFilename : ''}`} />\r\n\r\n                  <div className='ba-div-col-sort'>\r\n                    {\r\n                      review.reviewAttaches.map((attach) => (\r\n                        <div>\r\n                          <img className='ba-img-sub-list-div' src={`http://kr.object.ncloudstorage.com/bleuauction-bucket/review/${attach.saveFilename}`} onMouseEnter={(e) => {\r\n                            let targetImgSrc = e.target.src;\r\n                            let defaultImgId = 'defaultImg' + index;\r\n                            console.log(targetImgSrc);\r\n                            let defaultImg = document.getElementById(defaultImgId);\r\n                            console.log(defaultImg);\r\n                            defaultImg.src = targetImgSrc;\r\n                          }} />\r\n                        </div>\r\n                      )\r\n                      )\r\n                    }\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {review.member.memberNo == loginUser.memberNo ?\r\n                (<textarea name='reviewContent' value={review.reviewContent} className='ba-textarea' onChange={(e) => handleInputChange(e, index, reviewList, setReviewList)} />)\r\n                : (<textarea name='reviewContent' value={review.reviewContent} className='ba-textarea-disabled' readOnly />\r\n                )}\r\n            </div>\r\n\r\n            {review.member.memberNo == loginUser.memberNo ?\r\n              (<div className='ba-btn-div'>\r\n                <div className='ba-file-list'>\r\n                  {review.reviewAttaches.map((attach) => (\r\n                    <div key={attach.fileNo} className=\"ba-file-item\">\r\n                      <li>{attach.originFilename}</li>\r\n                      <p className=\"ba-delete-text\" onClick={() => {\r\n                        sendAxiosRequest(`/api/review/deleteFile?fileNo=${attach.fileNo}`, 'GET', null,\r\n                          response => {\r\n                            console.log(response.data);\r\n                            window.location.reload();\r\n                            alert(response.data.originFilename + '(이)가 삭제되었습니다!');\r\n                          },\r\n                          error => {\r\n                            console.log(error);\r\n                          }\r\n                        );\r\n                      }}>[삭제]</p>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n\r\n                <button type='button' className='ba-btn ba-margin-right20' onClick={() => {\r\n                  let jsonObj = formToJSON(new FormData(document.getElementById('reviewUpdateForm' + index)));\r\n                  console.log(jsonObj);\r\n                  sendAxiosRequest('/api/review/update', 'POST', jsonObj, response => {\r\n                    console.log(response.data);\r\n                    console.log('리뷰변경 성공!');\r\n                    window.location.reload();\r\n                    alert('리뷰를 성공적으로 변경하였습니다!');\r\n                  }, error => console.log(error));\r\n                }}>리뷰수정</button>\r\n                <button type='button' className='ba-btn ba-margin-right10' onClick={\r\n                  () => {\r\n                    sendAxiosRequest(`/api/review/delete?reviewNo=${review.reviewNo}`, 'GET', null, response => {\r\n                      console.log(response.data);\r\n                      window.location.reload();\r\n                      alert('리뷰가 성공적으로 삭제되었습니다!');\r\n                    }, error => {\r\n                      console.log(error);\r\n                    });\r\n                  }}>리뷰삭제</button>\r\n              </div>) : (<div></div>)\r\n            }\r\n\r\n            <div className='ba-text-right'>\r\n              <button type='button' className='ba-small-btn' onClick={() => {\r\n                selectedReviewNo === review.reviewNo ? setSelectedReviewNo(null) : setSelectedReviewNo(review.reviewNo);\r\n              }}>답글</button>\r\n            </div>\r\n          </form>\r\n\r\n          {\r\n            selectedReviewNo == review.reviewNo && (\r\n              <AnswerForm reviewNo={review.reviewNo} loginUser={loginUser} />\r\n            )\r\n          }\r\n        </div >\r\n      ))\r\n      }\r\n    </div >\r\n  );\r\n}\r\n\r\nfunction AnswerForm(props) {\r\n  return (\r\n    <div>\r\n      <hr />\r\n      <div className='ba-text-right'>\r\n        <button type='button' className='ba-small-btn' onClick={() => {\r\n          document.getElementById('answerWriteFormDiv').style.display = 'block';\r\n        }}>답글작성✍️</button>\r\n      </div>\r\n      <div id=\"answerWriteFormDiv\">\r\n        <h4 className='ba-font-title'>답글작성</h4>\r\n        <form id=\"answerWriteForm\">\r\n          <input name='reviewNo' hidden value={props.reviewNo}></input>\r\n          <input name='memberNo' hidden value={1}></input>\r\n          <button type='button' className='ba-close-btn' onClick={\r\n            () => {\r\n              document.getElementById('answerWriteFormDiv').style.display = 'none';\r\n\r\n            }\r\n          }>x</button>\r\n          <div>\r\n            <textarea name='answerContent' className='ba-small-textarea'></textarea>\r\n          </div>\r\n          <div className='ba-btn-div'>\r\n            <button type='button' className='ba-btn ba-margin-right40' onClick={() => {\r\n              let jsonObj = formToJSON(document.getElementById('answerWriteForm'));\r\n              console.log(jsonObj);\r\n              if (jsonObj.answerContent.trim().length < 1) {\r\n                alert('작성하실 답급 내용을 입력해주세요!');\r\n                return;\r\n              }\r\n              sendAxiosRequest('/api/answer/add', 'POST', jsonObj,\r\n                response => {\r\n                  window.location.reload();\r\n                  alert('답글을 성공적으로 작성하였습니다!');\r\n                  console.log(response.data);\r\n                }, error => console.log(error));\r\n            }}>작성하기</button>\r\n          </div>\r\n        </form >\r\n      </div>\r\n      <AnswerListDiv reviewNo={props.reviewNo} loginUser={props.loginUser}></AnswerListDiv>\r\n    </div >\r\n  );\r\n}\r\n\r\nfunction AnswerListDiv(props) {\r\n  const pageRowCnt = 2;\r\n  let [answerList, setAnswerList] = useState([]);\r\n  let [startPageNo, setStartPageNo] = useState(0);\r\n\r\n\r\n  useEffect(() => {\r\n    sendAxiosRequest(`/api/answer/list?reviewNo=${props.reviewNo}`, \"GET\", null,\r\n      response => {\r\n        let asnwerList = response.data.answerList;\r\n        let totalRows = response.data.totalRows;\r\n        console.log('최초 렌더시 totalRow');\r\n        console.log(totalRows);\r\n        console.log('최초 렌더시 asnwerList.length');\r\n        console.log(asnwerList.length);\r\n\r\n        if (totalRows > asnwerList.length) {\r\n          console.log(document.querySelector('.ba-more-btn'));\r\n          document.querySelector('.ba-more-btn').hidden = false;\r\n        }\r\n        setAnswerList(response.data.answerList);\r\n        setStartPageNo(response.data.answerList.length / 2);\r\n      }, error => console.log(error));\r\n\r\n    return () => {\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"answerListDiv\" className='answer-list-div'>\r\n      {answerList.map((answer, index) => (\r\n\r\n        < div className='answer-div' key={index} >\r\n          <form id={'answerUpdateForm' + index}>\r\n            <div className='ba-title-container'>\r\n              <img className='ba-member-profile' src='http://fvhsczepiibf19983519.cdn.ntruss.com/member/defaultProfile.jpg?type=f&w=50&h=50&ttype=jpg' />\r\n              <div className='ba-title-info'>\r\n                <b>{answer.member.memberName}</b>\r\n                <span><b>작성일:</b><input type='text' value={dateFormatParse(new Date(answer.mdfDatetime))} className='ba-input-text' disabled /></span>\r\n              </div>\r\n            </div>\r\n            {answer.member.memberNo == props.loginUser.memberNo ?\r\n              (\r\n                <div>\r\n                  <input type='text' name='answerNo' hidden value={answer.answerNo} />\r\n                  <input type='text' name='reviewNo' hidden value={answer.reviewNo} />\r\n                  <input type='text' name='memberNo' hidden value={answer.member.memberNo} />\r\n\r\n                  <textarea name='answerContent' value={answer.answerContent} className='ba-textarea' onChange={(e) => {\r\n                    handleInputChange(e, index, answerList, setAnswerList);\r\n                  }} />\r\n                  <div className='ba-btn-div'>\r\n                    <button type='button' className='ba-btn ba-margin-right20' onClick={\r\n                      () => {\r\n                        let jsonObj = formToJSON(new FormData(document.getElementById('answerUpdateForm' + index)));\r\n                        console.log(jsonObj);\r\n                        sendAxiosRequest(`/api/answer/update?`, 'POST', jsonObj, response => {\r\n                          window.location.reload();\r\n                          alert('답글이 성공적으로 변경되었습니다!');\r\n                        }, error => {\r\n                          console.log(error);\r\n                        });\r\n                      }\r\n                    } >답글수정</button>\r\n                    <button type='button' className='ba-btn ba-margin-right80' onClick={\r\n                      () => {\r\n                        sendAxiosRequest(`/api/answer/delete?answerNo=${answer.answerNo}`, 'GET', null, response => {\r\n                          window.location.reload();\r\n                          alert('답글이 성공적으로 삭제되었습니다!');\r\n                        }, error => {\r\n                          console.log(error);\r\n                        });\r\n                      }\r\n                    }>답글삭제</button>\r\n                  </div>\r\n                </div>)\r\n              : (<textarea name='answerContent' value={answer.answerContent} className='ba-textarea-disabled' />)}\r\n          </form>\r\n        </div >\r\n      ))\r\n      }\r\n      <div className='ba-btn-div'>\r\n        <button type='button' className='ba-more-btn' hidden onClick={(e) => {\r\n          sendAxiosRequest(`/api/answer/list?reviewNo=${props.reviewNo}&startPage=${startPageNo}`, \"GET\", null,\r\n            response => {\r\n              console.log(response.data);\r\n              let totalRows = response.data.totalRows;\r\n              let appendAnswerList = response.data.answerList;\r\n              let newAnswerList = [...answerList, ...appendAnswerList];\r\n              setAnswerList(newAnswerList);\r\n              setStartPageNo(newAnswerList.length / 2);\r\n              if (totalRows <= newAnswerList.length) {\r\n                e.target.hidden = true;\r\n              }\r\n\r\n            }, error => {\r\n              console.log(error);\r\n            })\r\n        }}>더 보기</button>\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\n\r\nexport default ReviewForm;\r\n","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\StoreHome.js",["408","409","410"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\StoreListItem.js",["411","412","413","414","415","416","417","418"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Menu\\MenuItem.js",["419","420","421"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\InputField.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\StoreInfo.js",["422"],[],"// import React from 'react';\r\n// import Coupon from '../Coupon/Coupon'; \r\n\r\n// function StoreIntro({storeInfo, store, coupons }) {\r\n//   console.log(store);\r\n//   // console.log(storeInfo);\r\n\r\n//   return (\r\n//     <div style={outerContainer}>\r\n//     <div style={introContainer}>\r\n//       <img src={storeInfo.image} alt={storeInfo.name} style={imageStyle} />\r\n//      <div style={storeInfoContainer}>\r\n//       <h2>{store.storeName}</h2>\r\n//       <ul style={infoList}>\r\n//         <li>{store.storeDetailAddr}</li>\r\n//         <li>{store.weekdayStartTime} ~ {store.weekdayEndTime}</li>\r\n//         <li>{store.store}</li>\r\n//       </ul>\r\n//       </div>\r\n//       {/* <div style={couponContainer}>\r\n//         {coupons.map(coupon => (\r\n//           <Coupon key={coupon.id} coupon={coupon} />\r\n//         ))}\r\n//       </div> */}\r\n//     </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// const outerContainer = {\r\n//   display: 'flex',\r\n//   justifyContent: 'center',\r\n//   alignItems: 'center',\r\n//   height: '50vh', // 화면 높이를 100%로 설정 (필요한 경우 조절)\r\n//   };\r\n\r\n// const introContainer = {\r\n//     display: 'flex',\r\n//     flexDirection: 'column', // children들을 열 방향으로 배열\r\n//     alignItems: 'center', // children들을 가운데 정렬\r\n//     backgroundColor: '#f0f0f0', // 연한 회색 배경\r\n//     padding: '0px',\r\n//     borderRadius: '8px', // 소프트한 테두리를 위한 둥근 모서리 추가\r\n//     textAlign: 'center',\r\n//     width : '70%',\r\n//     height: '100%'\r\n// };\r\n\r\n// const storeInfoContainer = {\r\n//     textAlign: 'left', \r\n//     padding: '20px',\r\n//     marginBottom: '50px', // 쿠폰 컨테이너와의 간격을 조절\r\n//     width : '100%',\r\n//   };\r\n\r\n// const imageStyle = {\r\n//   width: '100%',\r\n//   height: 'auto',\r\n//   objectFit: 'cover',\r\n// };\r\n\r\n// const infoList = {\r\n//   listStyleType: 'none',\r\n//   padding: '0',\r\n//   margin: '10px 0',\r\n// };\r\n\r\n\r\n// export default StoreIntro;\r\n\r\nimport React from 'react';\r\nimport Coupon from '../Coupon/Coupon'; \r\n\r\nfunction StoreIntro({storeInfo, store, coupons }) {\r\n\r\n  console.log('storeInfo,',storeInfo);\r\n  console.log('store,',store);\r\n  // console.log(storeInfo);\r\n\r\n  return (\r\n    <div style={outerContainer}>\r\n    <div style={introContainer}>\r\n      <img src={storeInfo.image} alt={storeInfo.name} style={imageStyle} />\r\n     <div style={storeInfoContainer}>\r\n      <h2>{store.storeName}</h2>\r\n      <ul style={infoList}>\r\n        <li>{store.storeDetailAddr}</li>\r\n        <li>{store.weekdayStartTime} ~ {store.weekdayEndTime}</li>\r\n        <li>{store.store}</li>\r\n      </ul>\r\n      </div>\r\n      {/* <div style={couponContainer}>\r\n        {coupons.map(coupon => (\r\n          <Coupon key={coupon.id} coupon={coupon} />\r\n        ))}\r\n      </div> */}\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst outerContainer = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '50vh', // 화면 높이를 100%로 설정 (필요한 경우 조절)\r\n  };\r\n\r\nconst introContainer = {\r\n    display: 'flex',\r\n    flexDirection: 'column', // children들을 열 방향으로 배열\r\n    alignItems: 'center', // children들을 가운데 정렬\r\n    backgroundColor: '#f0f0f0', // 연한 회색 배경\r\n    padding: '0px',\r\n    borderRadius: '8px', // 소프트한 테두리를 위한 둥근 모서리 추가\r\n    textAlign: 'center',\r\n    width : '70%',\r\n    height: '100%'\r\n};\r\n\r\nconst storeInfoContainer = {\r\n    textAlign: 'left', \r\n    padding: '20px',\r\n    marginBottom: '10px', // 쿠폰 컨테이너와의 간격을 조절\r\n    width : '100%',\r\n  };\r\n\r\nconst imageStyle = {\r\n  width: '100%',\r\n  height: 'auto',\r\n  objectFit: 'cover',\r\n};\r\n\r\nconst infoList = {\r\n  listStyleType: 'none',\r\n  padding: '0',\r\n  margin: '10px 0',\r\n};\r\n\r\n\r\nexport default StoreIntro;","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Review\\ReviewSection.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MainPage\\Category.js",["423","424","425"],[],"import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport styles from './Category.module.css';\r\n\r\n\r\nfunction Category() {\r\n\r\n  const [selectedOption, setSelectedOption] = useState('');\r\n\r\n  const handleOptionChange = (event) => {\r\n    setSelectedOption(event.target.value);}\r\n\r\n  return (\r\n    <>\r\n      <select value={selectedOption} onChange={handleOptionChange}>\r\n        <option value=\"option1\">옵션 1</option>\r\n        <option value=\"option2\">옵션 2</option>\r\n        <option value=\"option3\">옵션 3</option>\r\n      </select>\r\n\r\n      <p>{selectedOption}</p>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Category;","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\MyOrderContent.js",["426","427","428","429"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MainPage\\Announce.js",["430","431","432","433"],[],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport styles from './Announce.module.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\r\nimport { Carousel } from 'react-bootstrap';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nfunction Announce() {\r\n  const carousel = {\r\n    height: '400px',\r\n    width: '60%',\r\n    margin: '0 auto',\r\n    borderRadius: '30px',\r\n    overflow: 'hidden'\r\n  }\r\n\r\n  const location = useLocation();\r\n  const content = (location.pathname !== \"/store/list\") ? <img\r\n    src=\"/images/storeimage.png\"\r\n    alt=\"슬라이드 1\"\r\n  /> : <img src='/images/login.png' />;\r\n\r\n  return (\r\n    <div style={carousel}>\r\n      <Carousel >\r\n        {/* 슬라이드 이미지 */}\r\n        <Carousel.Item id={styles.carousel}>\r\n          {content}\r\n\r\n          <Carousel.Caption>\r\n            <h3>꽃소녀</h3>\r\n            <p>김철수 作</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item id={styles.carousel}>\r\n          {content}\r\n          <Carousel.Caption>\r\n            <h3>형형색색</h3>\r\n            <p>이숙자 作</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item id={styles.carousel}>\r\n          {content}\r\n          <Carousel.Caption>\r\n            <h3>분홍</h3>\r\n            <p>Robert Park 作</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item id={styles.carousel}>\r\n          {content}\r\n          <Carousel.Caption>\r\n            <h3>두꺼운 터치</h3>\r\n            <p>Thomas Lee 作</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n      </Carousel>\r\n      <div>\r\n        쿠폰div\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Announce;","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MainPage\\Button.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\StoreHomeItem.js",["434","435","436","437","438","439","440","441","442","443","444","445"],[],"import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport styles from './StoreHomeItem.module.css';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Placeholder from 'react-bootstrap/Placeholder';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction StoreHomeItem({store}) {\r\n\r\n  function isCurrentTimeInRange(startTime, endTime) {\r\n    // 현재 날짜와 시간을 생성\r\n    const currentDate = new Date();\r\n    // 시작 시간과 종료 시간을 파싱 (예: \"08:00\" 형식)\r\n    \r\n    // 현재 시간이 시작 시간과 종료 시간 사이에 있는지 확인\r\n    return currentDate >= startTime && currentDate <= endTime;\r\n  }\r\n\r\n  const startTime = new Date();\r\n  const [startHours, startMinutes, startSecond] = store.weekdayStartTime.split(':');\r\n  startTime.setHours(parseInt(startHours, 10));\r\n  startTime.setMinutes(parseInt(startMinutes, 10));\r\n  // startTime.setSecond(parseInt(startSecond, 10));\r\n\r\n  const endTime = new Date();\r\n  const [endHours, endMinutes, endSecond] = store.weekdayEndTime.split(':');\r\n  endTime.setHours(parseInt(endHours, 10));\r\n  endTime.setMinutes(parseInt(endMinutes, 10));\r\n  // endTime.setSecond(parseInt(endSecond, 10));\r\n\r\n  \r\n  const isWorking = isCurrentTimeInRange(startTime, endTime) ? '영업중' : '영업 종료';\r\n\r\n  // console.log(store);\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <Link to={'/market/detail'}\r\n      state= {store}\r\n      className={styles.storeHomeItemDetailBoxMore}>\r\n      <Card style={{ width: '18rem' }}>\r\n        <img className={styles.storeHomeItemBoss} variant=\"top\" src=\"/images/boss.png\" />\r\n        <div className={styles.storeHomeItemHeader}>\r\n          <p className={styles.storeHomeItemTitle}>{store.storeName}</p>\r\n          <p className={styles.storeHomeItemBoxReview}>\r\n            <img className={styles.storeHomeItemFresh}src=\"/images/fresh.png\"/>5.0\r\n          </p>\r\n        </div>\r\n        <div>\r\n        <p className={styles.storeHomeItemBoxReview}>\r\n        <img className={styles.storeHomeItemStateIcon} src=\"/images/heart.png\"/>{isWorking}</p>\r\n        </div>\r\n        {/* <Button className={styles.storeHomeItemDetailBoxMore}>\r\n          <Link to=\"/\" variant=\"primary\">더보기</Link>\r\n        </Button> */}\r\n      </Card>\r\n    </Link>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default StoreHomeItem;","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Review\\ReviewList.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Coupon\\Coupon.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\StoreItemDailyPrice\\StoreItemAdd.js",["446","447","448","449"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { sendAxiosRequest } from '../utility/common';\r\nimport './StoreItemAdd.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Hidden } from '@mui/material';\r\n\r\n\r\nfunction StroeItemAdd() {\r\n\r\n  const [fish, setFish] = useState('');\r\n  const [code, setCode] = useState('');\r\n  const [size, setSize] = useState('');\r\n  const [origin, setOrigin] = useState('');\r\n  const [place, setPlace] = useState('');\r\n  const [wild, setWild] = useState('');\r\n  const [price, setPrice] = useState('');\r\n\r\n  const handleCode = () => {\r\n    setCode(\r\n      (fish === '광어'||'우럭'||'도미'||'방어'||'참치') ? 'S' :\r\n      (fish === '연어') ? 'F' :\r\n      (fish === '오징어') ? 'E' :\r\n      (fish === '새우') ? 'C' :\r\n      (fish === '가리비'||'전복') ? 'M' : '')\r\n    }\r\n\r\n  const handleSize = (e) => {\r\n    setSize(e.target.value)\r\n  }\r\n\r\n  const handlePrice = (e) => {\r\n    setPrice(e.target.value)\r\n  }\r\n\r\n  const itemSize = \r\n  Number(size) >= 3 ? 'L' :\r\n  Number(size) >= 2 ? 'M' : 'S'\r\n  \r\n\r\n  const fishs = {\r\n    '광어': 1,\r\n    '우럭': 2,\r\n    '도미': 3,\r\n    '방어': 4,\r\n    '참치': 5,\r\n    '연어': 6,\r\n    '오징어': 7,\r\n    '새우': 8,\r\n    '가리비': 9,\r\n    '전복': 10\r\n  }\r\n\r\n  const codes = {\r\n    S: '생선/횟감',\r\n    F: '생선/비횟감',\r\n    C: '갑각류',\r\n    M: '패류',\r\n    E: '기타',\r\n  };\r\n\r\n  const DPlace = {\r\n    ES: '동해',\r\n    WS: '서해',\r\n    SS: '남해',\r\n    JJ: '제주',\r\n    WD: '완도'\r\n  }\r\n\r\n  const IPlace = {\r\n    JP: '일본',\r\n    CN: '중국',\r\n    RU: '러시아',\r\n    NW: '노르웨이'\r\n  }\r\n\r\n  const selectPlace = \r\n  (origin === \"D\") ? DPlace : \r\n  (origin === \"I\") ? IPlace : null;\r\n\r\n  const hiddenButtons = \r\n  (selectPlace !== null) ?\r\n    Object.keys(selectPlace).map((code) => (\r\n      <button\r\n        key={code}\r\n        className={place === code ? 'selected' : ''}\r\n        onClick={() => setPlace(code)}\r\n      >\r\n        {selectPlace[code]}\r\n      </button>\r\n    ))\r\n    : null;\r\n  \r\n  const navigate = useNavigate();\r\n  \r\n  const handleSubmit = () => {\r\n    console.log('dddd');\r\n    sendAxiosRequest ('/api/item/new', 'POST', item, response => {\r\n      console.log(response.data);\r\n      console.log(item);\r\n      navigate('/');\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n\r\n  };\r\n\r\n  const item = {\r\n    'itemName': fish,\r\n    'itemCode': code,\r\n    'itemSize': itemSize,\r\n    'originStatus': origin,\r\n    'originPlaceStatus': place,\r\n    'wildFarmStatus': wild\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <p>품목 선택</p>\r\n      <div className=\"freezer_box\">\r\n      {\r\n        Object.keys(fishs).map((name) => (\r\n          <div key={name}\r\n            className={fish === name ? 'selected' : 'not_selected'} \r\n            onClick={() => {setFish(name); handleCode()}}>\r\n            <img src={`/images/fish${fishs[name]}.jpg`} alt={name} className='fish_image'/>\r\n            <p>{name}</p>\r\n          </div>\r\n        ))\r\n      }\r\n      </div>\r\n\r\n      <div className='fish_size'>\r\n        <p>무게 입력 (kg)</p>\r\n        <div>\r\n          <input\r\n              type=\"number\"\r\n              value={size}\r\n              onChange={handleSize}\r\n              placeholder=\"예) 2.5\"\r\n            />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='fish_size'>\r\n        <p>금일 판매 가격 (원)</p>\r\n        <div>\r\n          <input\r\n              type=\"number\"\r\n              value={price}\r\n              onChange={handlePrice}\r\n              placeholder=\"예) 10000\"\r\n            />\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"fish_origin\">\r\n        <p>원산지</p>\r\n        \r\n        <div className=\"origin_buttons\">\r\n          <button className={origin === 'D' ? 'selected' : ''}\r\n            onClick={() => setOrigin('D')}>국내산</button>\r\n          <button className={origin === 'I' ? 'selected' : ''}\r\n            onClick={() => setOrigin('I')}>수입산</button>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className='fish_place'>\r\n        \r\n\r\n        <div className=\"filter_buttons\">\r\n          {hiddenButtons}\r\n        </div>\r\n      </div>\r\n\r\n      <div className='fish_origin'>\r\n        <p>자연산 / 양식</p>\r\n\r\n        <div className=\"origin_buttons\">\r\n          <button className={wild === 'W' ? 'selected' : ''}\r\n            onClick={() => setWild('W')}>자연산</button>\r\n          <button className={wild === 'F' ? 'selected' : ''}\r\n            onClick={() => setWild('F')}>양식</button>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className='fish_origin'>\r\n        <div className=\"origin_buttons\">\r\n        <button onClick={handleSubmit}>제출하기</button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default StroeItemAdd;","C:\\Users\\think\\git\\bleuauction_fe\\src\\routes\\StoreList.js",["450","451","452","453","454"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Chat\\Chat.js",["455","456"],[],"import React, { useState, useRef, useEffect } from 'react';\r\nimport { MessageBox, ChatList } from 'react-chat-elements';\r\nimport 'react-chat-elements/dist/main.css';\r\nimport axios from 'axios';\r\n\r\nconst Chat = ({ closeModal }) => {\r\n    const [chatMessage, setChatMessage] = useState('');\r\n    const [response, setResponse] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const chatContainerRef = useRef(null);\r\n\r\n    const handleMessage = async () => {\r\n        try {\r\n            const response = await axios.post('/api/chat/message', chatMessage, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n\r\n            setMessages((prevMessages) => [\r\n                ...prevMessages,\r\n                {\r\n                    position: 'right',\r\n                    type: 'text',\r\n                    text: chatMessage,\r\n                    date: new Date(),\r\n                },\r\n                {\r\n                    position: 'left',\r\n                    type: 'text',\r\n                    text: response.data,\r\n                    date: new Date(),\r\n                },\r\n            ]);\r\n\r\n            setResponse(response.data);\r\n            setChatMessage('');\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            handleMessage();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\r\n    }, [messages]);\r\n\r\n    const handleOutsideClick = (e) => {\r\n        if (e.target.classList.contains('chat-modal-container')) {\r\n            closeModal();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"chat-modal-container\"\r\n            style={{\r\n                position: 'fixed',\r\n                top: 0,\r\n                left: 0,\r\n                width: '100%',\r\n                height: '100%',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                zIndex: 9999,\r\n            }}\r\n            onClick={handleOutsideClick}\r\n        >\r\n            <div\r\n                style={{\r\n                    backgroundColor: '#2F80ED',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    padding: '20px',\r\n                    maxWidth: '600px',\r\n                    width: '70%',\r\n                    borderRadius: '20px',\r\n                    position: 'relative',\r\n                    maxHeight: '100%',\r\n                    overflow: 'auto',\r\n                }}\r\n            >\r\n                <ChatList\r\n                    className=\"chat-list\"\r\n                    dataSource={[\r\n                        {\r\n                            avatar: 'https://www.pngfind.com/pngs/m/676-6764066_fish-cartoon-images-fish-logo-png-transparent-png.png',\r\n                            alt: 'Fish',\r\n                            title: 'BA_ChatBot',\r\n                            subtitle: '무엇이든 물어보세요',\r\n                            date: new Date(),\r\n                            unread: 0,\r\n                        },\r\n                    ]}\r\n                    style={{ marginBottom: '20px' }}\r\n                />\r\n                <div\r\n                    ref={chatContainerRef}\r\n                    style={{ flex: '1', overflowY: 'auto', marginTop: '10px' }}\r\n                >\r\n                    {messages.map((message, index) => (\r\n                        <MessageBox\r\n                            key={index}\r\n                            position={message.position}\r\n                            type={message.type}\r\n                            text={message.text}\r\n                            date={message.date}\r\n                            avatar={\r\n                                message.position === 'left'\r\n                                    ? 'https://www.pngfind.com/pngs/m/676-6764066_fish-cartoon-images-fish-logo-png-transparent-png.png'\r\n                                    : null\r\n                            }\r\n                            text={message.text}\r\n                            title={message.position === 'left' ? 'BA_ChatBot' : 'You'}\r\n                            titleColor={message.position === 'left' ? '#FFFFFF' : '#4CAF50'}\r\n                            textFontSize={16}\r\n                            textFontColor=\"#333\"\r\n                            style={{\r\n                                backgroundColor: message.position === 'left' ? '#FFFFFF' : '#DCF8C6',\r\n                                borderRadius: message.position === 'left' ? '0px 10px 10px 10px' : '10px 0px 10px 10px',\r\n                                padding: '10px 15px',\r\n                                maxWidth: '70%',\r\n                                alignSelf: message.position === 'left' ? 'flex-start' : 'flex-end',\r\n                                marginBottom: 10,\r\n                            }}\r\n                        />\r\n                    ))}\r\n                </div>\r\n                <div style={{ display: 'flex', alignItems: 'center', marginTop: '20px' }}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={chatMessage}\r\n                        onChange={(e) => setChatMessage(e.target.value)}\r\n                        onKeyPress={handleKeyPress}\r\n                        style={{ flex: '1', padding: '15px', borderRadius: '30px', border: 'none', fontSize: '16px' }}\r\n                        placeholder=\"메시지를 입력하세요...\"\r\n                    />\r\n                    <button\r\n                        onClick={handleMessage}\r\n                        style={{\r\n                            marginLeft: '10px',\r\n                            padding: '15px 25px',\r\n                            borderRadius: '30px',\r\n                            border: 'none',\r\n                            backgroundColor: '#4CAF50',\r\n                            color: '#fff',\r\n                            cursor: 'pointer',\r\n                            fontSize: '16px',\r\n                        }}\r\n                    >\r\n                        보내기\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Notice\\NoticeDetail.js",["457"],[],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nfunction NoticeDetail() {\r\n  const [notice, setNotice] = useState({});\r\n  const { noticeNo } = useParams();\r\n\r\n  useEffect(() => {\r\n    axios.get(`/api/notice/detail/${noticeNo}`)\r\n      .then(response => setNotice(response.data))\r\n      .catch(error => console.log(error));\r\n  }, [noticeNo]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"top-controls\"></div>\r\n      <div style={{ padding: \"0 12px\" }}>\r\n        <table className=\"board_list text-center\">\r\n          <colgroup>\r\n            <col width=\"20%\" />\r\n            <col width=\"80%\" />\r\n          </colgroup>\r\n          <thead>\r\n          <tr>\r\n          <th>제목</th>\r\n          <td className=\"text-left\">{notice.noticeTitle}</td>\r\n          </tr>\r\n          <tr>\r\n          <th>내용</th>\r\n          <td>{notice.noticeContent}</td>\r\n          </tr>\r\n          </thead>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoticeDetail;\r\n","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Notice\\NoticeList.js",["458","459"],[],"import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n//import Announce from '/components/MainPage/Announce';\r\nimport NoticeListItem from './NoticeListItem';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport styles from './NoticeList.css'\r\n\r\n\r\nfunction NoticeList() {\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/notice')\r\n      .then(response => setData(response.data))\r\n      .catch(error => console.log(error));\r\n      // console.log(data);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n    <div className={styles.storeListBox}>\r\n      <NoticeListItem data={data}/>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NoticeList;","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Notice\\NoticeListItem.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\OrderModal.js",["460","461","462","463","464","465","466","467"],[],"import React, { useState, useEffect } from 'react';\r\nimport './OrderModal.css';\r\nimport { useUser } from '../Auth/UserContext';\r\nimport OrderItem from './OrderItem';\r\nimport { sendAxiosRequest } from '../utility/common';\r\nimport Payment from '../Pay/Pay';\r\nimport { formToJSON } from 'axios';\r\n\r\nconst OrderModal = ({ store, menus, isOpen, onClose, setMenuData }) => {\r\n\r\n  \r\nconst {user, login, logout} = useUser();\r\n\r\nconst [order, setOrder] = useState({\r\n  orderType:'Q',\r\n  orderPrice:0,\r\n  orderRequest:'',\r\n  recipientPhone:'',\r\n  recipientName:'',\r\n  recipientZipcode:'',\r\n  recipientAddr:'',\r\n  recipientDetailAddr:'',\r\n  orderStatus:'',\r\n})\r\n\r\n  // OrderItem 변경 사항 적용\r\n    const updateMenuCount = (updateMenu)=> { \r\n      const updatedItems = menus?.map((menu) =>\r\n      menu.menuNo === updateMenu.menuNo ? updateMenu : menu\r\n    );\r\n      setMenuData(\r\n        updatedItems\r\n      )\r\n  };\r\n\r\n\r\n  const [orderMenus, setOrderMenus] = useState([])\r\n\r\n  let totalPrice = 0\r\n  let totalOrders = [];\r\n  \r\n \r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    setActiveSection('deliveryMethod');\r\n\r\n  }\r\n  \r\n\r\n  // 수령 방식 변경 사항을 저장\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setOrder(prevDetails => ({\r\n      ...prevDetails,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n\r\n  // order, orderMenu 생성 및 결제 진행\r\n  const handleOrder = (event) => {\r\n    event.preventDefault();\r\n    // console.log(orderMenus)\r\n\r\n\r\n   // orderMenu 생성\r\n    menus.filter((menu) => menu.count !== 0).map((menu) => {\r\n      \r\n      totalPrice += menu.count * menu.menuPrice\r\n\r\n      totalOrders.push({\r\n        menuNo: Number(menu.menuNo),\r\n        orderMenuCount: Number(menu.count),\r\n        // orderNo: 0,\r\n        // memberNo:0,\r\n      })\r\n    })\r\n    \r\n    setOrderMenus(totalOrders)\r\n\r\n\r\n\r\n    setOrder({\r\n      ...order, orderPrice: totalPrice\r\n    })\r\n\r\n    // console.log(orderMenus)\r\n    // console.log(typeof(orderMenus[0].menuNo))\r\n\r\n\r\n    // 주문 생성\r\n    sendAxiosRequest('/api/order/new', 'POST', order, response => {\r\n      if (response.data && response.data.length > 0) {\r\n        console.log(\"주문 생성에 성공했습니다:\", response.data);\r\n      }\r\n    }, error => {\r\n      console.error(\"주문 생성에 실패했습니다:\", error);\r\n    });\r\n\r\n    \r\n    //주문 메뉴 추가 생성\r\n    setTimeout(() => {\r\n      orderMenus.map((orderMenu) => {\r\n        console.log('orderMenu=> : ', orderMenu);\r\n\r\n        sendAxiosRequest('/api/ordermenu/new', 'POST', orderMenu, response => {\r\n          if (response.data && response.data.length > 0) {\r\n            console.log(\"주문메뉴 생성에 성공했습니다:\", response.data);\r\n            // console.log('orderMenu=> : ', orderMenu);\r\n            console.log(typeof(orderMenu.menuNo))\r\n          }\r\n        }, error => {\r\n          console.error(\"주문메뉴 생성에 실패했습니다:\", error);\r\n        });\r\n      })\r\n    }, 6000);\r\n\r\n    \r\n    \r\n  }\r\n\r\n\r\n  const [activeSection, setActiveSection] = useState('orderInfo'); // 현재 활성화된 섹션을 추적\r\n\r\n  const switchSection = (section) => {\r\n    setActiveSection(section);\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n\r\n  return (\r\n    <div className=\"orderModalBackground\">\r\n      <div className=\"orderModalContainer\">\r\n        <div className=\"orderModalHeader\">\r\n          <button className=\"closeButton\" onClick={onClose}>X</button>\r\n        </div>\r\n\r\n        <div className=\"sectionButtons\">\r\n          <button onClick={() => switchSection('orderInfo')}>주문 정보</button>\r\n          <button onClick={() => switchSection('deliveryMethod')}>수령 방식</button>\r\n        </div>\r\n\r\n        {activeSection === 'orderInfo' && (\r\n          <form onSubmit={handleSubmit}>\r\n            <h2>주문 정보</h2>\r\n\r\n            <div>\r\n              {menus?.map((menu) => \r\n                <OrderItem key={menu.menuNo} menu={menu}  update = {updateMenuCount} />\r\n              )}\r\n            </div>\r\n\r\n            <button type=\"submit\">주문 정보 제출</button>\r\n          </form>\r\n        )}\r\n\r\n\r\n\r\n        {activeSection === 'deliveryMethod' && (\r\n          <div>\r\n            {/* 수령 방식 선택 부분 */}\r\n            <h2>수령 방식</h2>\r\n\r\n            <div>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"orderType\"\r\n                  value='Q'\r\n                  checked={order.orderType === 'Q'}\r\n                  onChange={handleInputChange}\r\n                />\r\n                퀵배송\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"orderType\"\r\n                  value='T'\r\n                  checked={order.orderType === 'T'}\r\n                  onChange={handleInputChange}\r\n                />\r\n                포장\r\n              </label>\r\n            </div>\r\n\r\n            <h2>수령 정보</h2>\r\n            <input\r\n            type=\"text\"\r\n            name=\"recipientName\"\r\n            placeholder=\"이름\"\r\n            value={order.recipientName}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"recipientPhone\"\r\n            placeholder=\"전화번호\"\r\n            value={order.recipientPhone}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"recipientZipcode\"\r\n            placeholder=\"우편번호\"\r\n            value={order.recipientZipcode}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"recipientAddr\"\r\n            placeholder=\"기본주소\"\r\n            value={order.recipientAddr}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"recipientDetailAddr\"\r\n            placeholder=\"상세주소\"\r\n            value={order.recipientDetailAddr}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"orderRequest\"\r\n            placeholder=\"요청사항\"\r\n            value={order.orderRequest}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n            <button onClick={handleOrder}>결제하기</button>\r\n            {/* <Payment onClick={handleOrder}>결제하기</Payment> */}\r\n          </div>\r\n        )}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n          \r\n\r\nexport default OrderModal;\r\n","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Admin\\AdminNoticeList.js",["468","469"],[],"import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n//import Announce from '/components/MainPage/Announce';\r\nimport AdminNoticeListItem from './AdminNoticeListItem';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport styles from '../Notice/NoticeList.css'\r\n\r\n\r\nfunction AdminNoticeList() {\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/notice')\r\n      .then(response => setData(response.data))\r\n      .catch(error => console.log(error));\r\n      // console.log(data);\r\n  }, []);\r\n  \r\n\r\n  return (\r\n    <>\r\n    <div className={styles.storeListBox}>\r\n      <AdminNoticeListItem data={data}/>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminNoticeList;","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Admin\\AdminNoticeDetail.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Admin\\NoticeRegisterationForm.js",["470"],[],"import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios, { formToJSON } from 'axios';\r\nimport { sendAxiosRequest } from '../utility/common';\r\n\r\nfunction NoticeRegisterationForm() {\r\n  const [notice, setNotice] = useState({\r\n    noticeTitle: 'title',\r\n    noticeContent: 'content',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNotice({ ...notice, [name]: value });\r\n  };\r\n\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let formData = new FormData(e.target);\r\n    let formObj = formToJSON(formData);\r\n    sendAxiosRequest('/api/notice/new', 'POST', formObj, response => {\r\n      console.log('응답값:', response.data);\r\n      alert('공지사항이 등록 되었습니다.');\r\n      navigate('/main');\r\n    },\r\n      error => {\r\n        console.error('API 호출 중 에러 발생: ', error);\r\n        alert('공지사항 등록에 실패하셨습니다!');\r\n      }\r\n    )\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <form onSubmit={handleSubmit} style={styles.form}>\r\n      <h2>공지사항 등록</h2>\r\n        <div>\r\n          <label>제목 </label>\r\n          <input style={styles.input} type=\"text\" name=\"noticeTitle\" value={notice.noticeTitle} onChange={handleChange} />\r\n        </div>\r\n        <div>\r\n          <label>내용 </label>\r\n          <input style={styles.input} type=\"text\" name=\"noticeContent\" value={notice.noticeContent} onChange={handleChange} />\r\n        </div>\r\n        <button type=\"submit\" style={styles.submitButton}>등록</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '30vh',\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center', // 폼 내용을 중앙 정렬합니다.\r\n    padding: '20px',  // 내부 패딩을 추가합니다.\r\n    borderRadius: '12px',  // 모서리를 둥글게 합니다.\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2)', // 약간의 그림자 효과를 추가합니다.\r\n    background: 'white', // 배경색을 흰색으로 설정합니다.\r\n    width: '800px',\r\n  },\r\n  input: {\r\n    padding: '10px',\r\n    margin: '5px 0',\r\n    borderRadius: '6px',\r\n    border: '1px solid #ccc',\r\n    outline: 'none',\r\n    width: '300px',\r\n  },\r\n  submitButton: {\r\n    padding: '10px 20px',\r\n    cursor: 'pointer',\r\n    backgroundColor: '#0575E6',\r\n    border: 'none',\r\n    borderRadius: '8px',\r\n    color: 'white',\r\n  },\r\n}\r\n\r\n\r\nexport default NoticeRegisterationForm;\r\n","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Admin\\AdminNoticeListItem.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\OrderItem.js",["471","472","473"],[],"import React, { useState, useEffect } from 'react';\r\nimport './OrderModal.css';\r\nimport { useUser } from '../Auth/UserContext';\r\n\r\nfunction OrderItem({ key, menu, orderMenu, update }) {\r\n  // console.log(menu)\r\n  const [localItem, setLocalItem] = useState(menu);\r\n\r\n  const handleNameChange = (e) => {\r\n    if (e.target.value >= 0) {\r\n      const newName = e.target.value;\r\n      setLocalItem({ ...localItem, count: newName });\r\n      update({ ...localItem, count: newName });\r\n      // update(localItem)\r\n      console.log('발동')\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className='order-item-box'>\r\n      \r\n      <div style={{overflow:'hidden'}}>\r\n        <img src='/images/fish1.jpg'/>\r\n      </div>\r\n\r\n      <div>\r\n        <p>{menu.menuName}</p>\r\n      </div>\r\n\r\n      <div>\r\n        <p>{menu.menuSize}</p>\r\n      </div>\r\n\r\n      <div>\r\n       <p>{menu.menuPrice}</p>\r\n      </div>\r\n\r\n      <div>\r\n        {/* <button onClick={()=>setCount(count + 1)}>+</button> */}\r\n        <input\r\n              type=\"number\"\r\n              name='count'\r\n              value={localItem.count}\r\n              onChange={handleNameChange}\r\n            />\r\n        {/* <button onClick={()=>setCount(count + 1)}>-</button> */}\r\n      </div>\r\n      \r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\n          \r\n\r\nexport default OrderItem;\r\n","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\OrderMenuList.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\StoreOrder.js",["474","475","476"],[],{"ruleId":"477","severity":1,"message":"478","line":1,"column":17,"nodeType":"479","messageId":"480","endLine":1,"endColumn":26},{"ruleId":"477","severity":1,"message":"481","line":1,"column":28,"nodeType":"479","messageId":"480","endLine":1,"endColumn":36},{"ruleId":"477","severity":1,"message":"482","line":2,"column":8,"nodeType":"479","messageId":"480","endLine":2,"endColumn":13},{"ruleId":"477","severity":1,"message":"483","line":2,"column":17,"nodeType":"479","messageId":"480","endLine":2,"endColumn":27},{"ruleId":"477","severity":1,"message":"484","line":22,"column":8,"nodeType":"479","messageId":"480","endLine":22,"endColumn":20},{"ruleId":"477","severity":1,"message":"485","line":30,"column":10,"nodeType":"479","messageId":"480","endLine":30,"endColumn":26},{"ruleId":"477","severity":1,"message":"486","line":41,"column":11,"nodeType":"479","messageId":"480","endLine":41,"endColumn":15},{"ruleId":"477","severity":1,"message":"487","line":41,"column":17,"nodeType":"479","messageId":"480","endLine":41,"endColumn":22},{"ruleId":"477","severity":1,"message":"483","line":12,"column":10,"nodeType":"479","messageId":"480","endLine":12,"endColumn":20},{"ruleId":"477","severity":1,"message":"481","line":13,"column":10,"nodeType":"479","messageId":"480","endLine":13,"endColumn":18},{"ruleId":"477","severity":1,"message":"488","line":13,"column":20,"nodeType":"479","messageId":"480","endLine":13,"endColumn":30},{"ruleId":"477","severity":1,"message":"489","line":14,"column":10,"nodeType":"479","messageId":"480","endLine":14,"endColumn":17},{"ruleId":"477","severity":1,"message":"490","line":15,"column":10,"nodeType":"479","messageId":"480","endLine":15,"endColumn":19},{"ruleId":"477","severity":1,"message":"482","line":16,"column":8,"nodeType":"479","messageId":"480","endLine":16,"endColumn":13},{"ruleId":"477","severity":1,"message":"482","line":3,"column":8,"nodeType":"479","messageId":"480","endLine":3,"endColumn":13},{"ruleId":"477","severity":1,"message":"490","line":4,"column":10,"nodeType":"479","messageId":"480","endLine":4,"endColumn":19},{"ruleId":"477","severity":1,"message":"491","line":31,"column":9,"nodeType":"479","messageId":"480","endLine":31,"endColumn":16},{"ruleId":"477","severity":1,"message":"482","line":2,"column":8,"nodeType":"479","messageId":"480","endLine":2,"endColumn":13},{"ruleId":"477","severity":1,"message":"478","line":1,"column":17,"nodeType":"479","messageId":"480","endLine":1,"endColumn":26},{"ruleId":"477","severity":1,"message":"481","line":1,"column":28,"nodeType":"479","messageId":"480","endLine":1,"endColumn":36},{"ruleId":"477","severity":1,"message":"482","line":2,"column":10,"nodeType":"479","messageId":"480","endLine":2,"endColumn":15},{"ruleId":"477","severity":1,"message":"483","line":2,"column":17,"nodeType":"479","messageId":"480","endLine":2,"endColumn":27},{"ruleId":"477","severity":1,"message":"489","line":5,"column":10,"nodeType":"479","messageId":"480","endLine":5,"endColumn":17},{"ruleId":"477","severity":1,"message":"492","line":6,"column":117,"nodeType":"479","messageId":"480","endLine":6,"endColumn":124},{"ruleId":"477","severity":1,"message":"482","line":2,"column":8,"nodeType":"479","messageId":"480","endLine":2,"endColumn":13},{"ruleId":"477","severity":1,"message":"493","line":5,"column":8,"nodeType":"479","messageId":"480","endLine":5,"endColumn":21},{"ruleId":"477","severity":1,"message":"494","line":7,"column":10,"nodeType":"479","messageId":"480","endLine":7,"endColumn":16},{"ruleId":"477","severity":1,"message":"495","line":7,"column":18,"nodeType":"479","messageId":"480","endLine":7,"endColumn":23},{"ruleId":"477","severity":1,"message":"496","line":8,"column":10,"nodeType":"479","messageId":"480","endLine":8,"endColumn":28},{"ruleId":"477","severity":1,"message":"497","line":8,"column":30,"nodeType":"479","messageId":"480","endLine":8,"endColumn":49},{"ruleId":"477","severity":1,"message":"498","line":9,"column":10,"nodeType":"479","messageId":"480","endLine":9,"endColumn":33},{"ruleId":"477","severity":1,"message":"499","line":14,"column":24,"nodeType":"479","messageId":"480","endLine":14,"endColumn":39},{"ruleId":"477","severity":1,"message":"500","line":15,"column":9,"nodeType":"479","messageId":"480","endLine":15,"endColumn":20},{"ruleId":"501","severity":1,"message":"502","line":56,"column":6,"nodeType":"503","endLine":56,"endColumn":8,"suggestions":"504"},{"ruleId":"477","severity":1,"message":"478","line":1,"column":16,"nodeType":"479","messageId":"480","endLine":1,"endColumn":25},{"ruleId":"477","severity":1,"message":"481","line":1,"column":27,"nodeType":"479","messageId":"480","endLine":1,"endColumn":35},{"ruleId":"477","severity":1,"message":"482","line":2,"column":8,"nodeType":"479","messageId":"480","endLine":2,"endColumn":13},{"ruleId":"505","severity":1,"message":"506","line":9,"column":7,"nodeType":"507","endLine":9,"endColumn":41},{"ruleId":"477","severity":1,"message":"482","line":3,"column":8,"nodeType":"479","messageId":"480","endLine":3,"endColumn":13},{"ruleId":"477","severity":1,"message":"482","line":2,"column":8,"nodeType":"479","messageId":"480","endLine":2,"endColumn":13},{"ruleId":"477","severity":1,"message":"508","line":4,"column":8,"nodeType":"479","messageId":"480","endLine":4,"endColumn":14},{"ruleId":"477","severity":1,"message":"509","line":5,"column":8,"nodeType":"479","messageId":"480","endLine":5,"endColumn":16},{"ruleId":"477","severity":1,"message":"510","line":7,"column":8,"nodeType":"479","messageId":"480","endLine":7,"endColumn":17},{"ruleId":"477","severity":1,"message":"494","line":8,"column":10,"nodeType":"479","messageId":"480","endLine":8,"endColumn":16},{"ruleId":"477","severity":1,"message":"495","line":8,"column":18,"nodeType":"479","messageId":"480","endLine":8,"endColumn":23},{"ruleId":"477","severity":1,"message":"490","line":9,"column":10,"nodeType":"479","messageId":"480","endLine":9,"endColumn":19},{"ruleId":"477","severity":1,"message":"511","line":9,"column":54,"nodeType":"479","messageId":"480","endLine":9,"endColumn":68},{"ruleId":"477","severity":1,"message":"512","line":9,"column":70,"nodeType":"479","messageId":"480","endLine":9,"endColumn":84},{"ruleId":"477","severity":1,"message":"513","line":11,"column":8,"nodeType":"479","messageId":"480","endLine":11,"endColumn":17},{"ruleId":"501","severity":1,"message":"514","line":27,"column":6,"nodeType":"503","endLine":27,"endColumn":8,"suggestions":"515"},{"ruleId":"501","severity":1,"message":"516","line":56,"column":6,"nodeType":"503","endLine":56,"endColumn":30,"suggestions":"517"},{"ruleId":"477","severity":1,"message":"518","line":10,"column":10,"nodeType":"479","messageId":"480","endLine":10,"endColumn":18},{"ruleId":"477","severity":1,"message":"489","line":12,"column":10,"nodeType":"479","messageId":"480","endLine":12,"endColumn":17},{"ruleId":"501","severity":1,"message":"519","line":51,"column":6,"nodeType":"503","endLine":51,"endColumn":8,"suggestions":"520"},{"ruleId":"477","severity":1,"message":"521","line":3,"column":10,"nodeType":"479","messageId":"480","endLine":3,"endColumn":14},{"ruleId":"477","severity":1,"message":"522","line":3,"column":16,"nodeType":"479","messageId":"480","endLine":3,"endColumn":20},{"ruleId":"477","severity":1,"message":"523","line":3,"column":22,"nodeType":"479","messageId":"480","endLine":3,"endColumn":28},{"ruleId":"477","severity":1,"message":"524","line":4,"column":10,"nodeType":"479","messageId":"480","endLine":4,"endColumn":14},{"ruleId":"477","severity":1,"message":"525","line":4,"column":16,"nodeType":"479","messageId":"480","endLine":4,"endColumn":27},{"ruleId":"477","severity":1,"message":"482","line":5,"column":8,"nodeType":"479","messageId":"480","endLine":5,"endColumn":13},{"ruleId":"477","severity":1,"message":"487","line":100,"column":17,"nodeType":"479","messageId":"480","endLine":100,"endColumn":22},{"ruleId":"477","severity":1,"message":"526","line":100,"column":24,"nodeType":"479","messageId":"480","endLine":100,"endColumn":30},{"ruleId":"477","severity":1,"message":"527","line":101,"column":10,"nodeType":"479","messageId":"480","endLine":101,"endColumn":19},{"ruleId":"477","severity":1,"message":"528","line":105,"column":10,"nodeType":"479","messageId":"480","endLine":105,"endColumn":15},{"ruleId":"477","severity":1,"message":"529","line":3,"column":10,"nodeType":"479","messageId":"480","endLine":3,"endColumn":35},{"ruleId":"477","severity":1,"message":"525","line":5,"column":10,"nodeType":"479","messageId":"480","endLine":5,"endColumn":21},{"ruleId":"477","severity":1,"message":"530","line":5,"column":23,"nodeType":"479","messageId":"480","endLine":5,"endColumn":32},{"ruleId":"477","severity":1,"message":"481","line":1,"column":17,"nodeType":"479","messageId":"480","endLine":1,"endColumn":25},{"ruleId":"531","severity":1,"message":"532","line":125,"column":5,"nodeType":"533","messageId":"534","endLine":125,"endColumn":15},{"ruleId":"477","severity":1,"message":"482","line":3,"column":8,"nodeType":"479","messageId":"480","endLine":3,"endColumn":13},{"ruleId":"477","severity":1,"message":"483","line":3,"column":17,"nodeType":"479","messageId":"480","endLine":3,"endColumn":27},{"ruleId":"477","severity":1,"message":"490","line":4,"column":10,"nodeType":"479","messageId":"480","endLine":4,"endColumn":19},{"ruleId":"477","severity":1,"message":"535","line":2,"column":10,"nodeType":"479","messageId":"480","endLine":2,"endColumn":14},{"ruleId":"477","severity":1,"message":"536","line":3,"column":10,"nodeType":"479","messageId":"480","endLine":3,"endColumn":18},{"ruleId":"477","severity":1,"message":"485","line":6,"column":10,"nodeType":"479","messageId":"480","endLine":6,"endColumn":26},{"ruleId":"477","severity":1,"message":"537","line":10,"column":8,"nodeType":"479","messageId":"480","endLine":10,"endColumn":20},{"ruleId":"477","severity":1,"message":"538","line":13,"column":10,"nodeType":"479","messageId":"480","endLine":13,"endColumn":26},{"ruleId":"477","severity":1,"message":"539","line":53,"column":7,"nodeType":"479","messageId":"480","endLine":53,"endColumn":26},{"ruleId":"477","severity":1,"message":"540","line":79,"column":10,"nodeType":"479","messageId":"480","endLine":79,"endColumn":21},{"ruleId":"477","severity":1,"message":"541","line":79,"column":23,"nodeType":"479","messageId":"480","endLine":79,"endColumn":37},{"ruleId":"477","severity":1,"message":"542","line":80,"column":10,"nodeType":"479","messageId":"480","endLine":80,"endColumn":22},{"ruleId":"477","severity":1,"message":"543","line":87,"column":9,"nodeType":"479","messageId":"480","endLine":87,"endColumn":29},{"ruleId":"477","severity":1,"message":"544","line":262,"column":23,"nodeType":"479","messageId":"480","endLine":262,"endColumn":32},{"ruleId":"545","severity":1,"message":"546","line":361,"column":43,"nodeType":"547","messageId":"534","endLine":361,"endColumn":45},{"ruleId":"477","severity":1,"message":"548","line":34,"column":9,"nodeType":"479","messageId":"480","endLine":34,"endColumn":14},{"ruleId":"477","severity":1,"message":"549","line":37,"column":10,"nodeType":"479","messageId":"480","endLine":37,"endColumn":13},{"ruleId":"477","severity":1,"message":"550","line":94,"column":17,"nodeType":"479","messageId":"480","endLine":94,"endColumn":21},{"ruleId":"545","severity":1,"message":"546","line":123,"column":36,"nodeType":"547","messageId":"534","endLine":123,"endColumn":38},{"ruleId":"477","severity":1,"message":"478","line":1,"column":17,"nodeType":"479","messageId":"480","endLine":1,"endColumn":26},{"ruleId":"477","severity":1,"message":"482","line":2,"column":8,"nodeType":"479","messageId":"480","endLine":2,"endColumn":13},{"ruleId":"477","severity":1,"message":"551","line":6,"column":22,"nodeType":"479","messageId":"480","endLine":6,"endColumn":30},{"ruleId":"545","severity":1,"message":"552","line":26,"column":38,"nodeType":"547","messageId":"534","endLine":26,"endColumn":40},{"ruleId":"477","severity":1,"message":"553","line":42,"column":19,"nodeType":"479","messageId":"480","endLine":42,"endColumn":31},{"ruleId":"477","severity":1,"message":"554","line":44,"column":8,"nodeType":"479","messageId":"480","endLine":44,"endColumn":16},{"ruleId":"545","severity":1,"message":"552","line":47,"column":38,"nodeType":"547","messageId":"534","endLine":47,"endColumn":40},{"ruleId":"505","severity":1,"message":"506","line":53,"column":9,"nodeType":"507","endLine":53,"endColumn":147},{"ruleId":"505","severity":1,"message":"506","line":56,"column":65,"nodeType":"507","endLine":56,"endColumn":94},{"ruleId":"505","severity":1,"message":"506","line":57,"column":68,"nodeType":"507","endLine":57,"endColumn":97},{"ruleId":"505","severity":1,"message":"506","line":58,"column":66,"nodeType":"507","endLine":58,"endColumn":96},{"ruleId":"501","severity":1,"message":"555","line":146,"column":6,"nodeType":"503","endLine":146,"endColumn":31,"suggestions":"556"},{"ruleId":"501","severity":1,"message":"557","line":158,"column":6,"nodeType":"503","endLine":158,"endColumn":8,"suggestions":"558"},{"ruleId":"505","severity":1,"message":"506","line":170,"column":15,"nodeType":"507","endLine":170,"endColumn":154},{"ruleId":"505","severity":1,"message":"506","line":178,"column":19,"nodeType":"507","endLine":178,"endColumn":48},{"ruleId":"505","severity":1,"message":"506","line":182,"column":19,"nodeType":"507","endLine":182,"endColumn":48},{"ruleId":"505","severity":1,"message":"506","line":186,"column":19,"nodeType":"507","endLine":186,"endColumn":49},{"ruleId":"505","severity":1,"message":"506","line":196,"column":19,"nodeType":"507","endLine":196,"endColumn":227},{"ruleId":"505","severity":1,"message":"506","line":202,"column":27,"nodeType":"507","endLine":209,"endColumn":32},{"ruleId":"545","severity":1,"message":"546","line":217,"column":39,"nodeType":"547","messageId":"534","endLine":217,"endColumn":41},{"ruleId":"545","severity":1,"message":"546","line":223,"column":37,"nodeType":"547","messageId":"534","endLine":223,"endColumn":39},{"ruleId":"545","severity":1,"message":"546","line":276,"column":30,"nodeType":"547","messageId":"534","endLine":276,"endColumn":32},{"ruleId":"477","severity":1,"message":"559","line":334,"column":9,"nodeType":"479","messageId":"480","endLine":334,"endColumn":19},{"ruleId":"501","severity":1,"message":"560","line":359,"column":6,"nodeType":"503","endLine":359,"endColumn":8,"suggestions":"561"},{"ruleId":"505","severity":1,"message":"506","line":368,"column":15,"nodeType":"507","endLine":368,"endColumn":154},{"ruleId":"545","severity":1,"message":"546","line":374,"column":37,"nodeType":"547","messageId":"534","endLine":374,"endColumn":39},{"ruleId":"477","severity":1,"message":"478","line":1,"column":17,"nodeType":"479","messageId":"480","endLine":1,"endColumn":26},{"ruleId":"477","severity":1,"message":"481","line":1,"column":28,"nodeType":"479","messageId":"480","endLine":1,"endColumn":36},{"ruleId":"477","severity":1,"message":"482","line":2,"column":8,"nodeType":"479","messageId":"480","endLine":2,"endColumn":13},{"ruleId":"477","severity":1,"message":"482","line":2,"column":8,"nodeType":"479","messageId":"480","endLine":2,"endColumn":13},{"ruleId":"477","severity":1,"message":"485","line":5,"column":21,"nodeType":"479","messageId":"480","endLine":5,"endColumn":37},{"ruleId":"477","severity":1,"message":"562","line":8,"column":15,"nodeType":"479","messageId":"480","endLine":8,"endColumn":23},{"ruleId":"501","severity":1,"message":"563","line":15,"column":6,"nodeType":"503","endLine":15,"endColumn":8,"suggestions":"564"},{"ruleId":"505","severity":1,"message":"506","line":19,"column":7,"nodeType":"507","endLine":19,"endColumn":74},{"ruleId":"505","severity":1,"message":"506","line":28,"column":11,"nodeType":"507","endLine":28,"endColumn":80},{"ruleId":"505","severity":1,"message":"506","line":31,"column":11,"nodeType":"507","endLine":31,"endColumn":84},{"ruleId":"545","severity":1,"message":"546","line":32,"column":17,"nodeType":"547","messageId":"534","endLine":32,"endColumn":19},{"ruleId":"477","severity":1,"message":"482","line":2,"column":8,"nodeType":"479","messageId":"480","endLine":2,"endColumn":13},{"ruleId":"477","severity":1,"message":"565","line":12,"column":21,"nodeType":"479","messageId":"480","endLine":12,"endColumn":33},{"ruleId":"477","severity":1,"message":"528","line":13,"column":10,"nodeType":"479","messageId":"480","endLine":13,"endColumn":15},{"ruleId":"477","severity":1,"message":"508","line":72,"column":8,"nodeType":"479","messageId":"480","endLine":72,"endColumn":14},{"ruleId":"477","severity":1,"message":"478","line":1,"column":16,"nodeType":"479","messageId":"480","endLine":1,"endColumn":25},{"ruleId":"477","severity":1,"message":"482","line":2,"column":8,"nodeType":"479","messageId":"480","endLine":2,"endColumn":13},{"ruleId":"477","severity":1,"message":"566","line":3,"column":8,"nodeType":"479","messageId":"480","endLine":3,"endColumn":14},{"ruleId":"477","severity":1,"message":"567","line":1,"column":28,"nodeType":"479","messageId":"480","endLine":1,"endColumn":38},{"ruleId":"477","severity":1,"message":"568","line":5,"column":8,"nodeType":"479","messageId":"480","endLine":5,"endColumn":21},{"ruleId":"501","severity":1,"message":"569","line":17,"column":6,"nodeType":"503","endLine":17,"endColumn":8,"suggestions":"570"},{"ruleId":"505","severity":1,"message":"506","line":40,"column":9,"nodeType":"507","endLine":40,"endColumn":39},{"ruleId":"477","severity":1,"message":"478","line":1,"column":17,"nodeType":"479","messageId":"480","endLine":1,"endColumn":26},{"ruleId":"477","severity":1,"message":"481","line":1,"column":28,"nodeType":"479","messageId":"480","endLine":1,"endColumn":36},{"ruleId":"477","severity":1,"message":"482","line":2,"column":8,"nodeType":"479","messageId":"480","endLine":2,"endColumn":13},{"ruleId":"505","severity":1,"message":"506","line":22,"column":8,"nodeType":"507","endLine":22,"endColumn":39},{"ruleId":"477","severity":1,"message":"478","line":1,"column":16,"nodeType":"479","messageId":"480","endLine":1,"endColumn":25},{"ruleId":"477","severity":1,"message":"481","line":1,"column":27,"nodeType":"479","messageId":"480","endLine":1,"endColumn":35},{"ruleId":"477","severity":1,"message":"482","line":2,"column":8,"nodeType":"479","messageId":"480","endLine":2,"endColumn":13},{"ruleId":"477","severity":1,"message":"571","line":4,"column":16,"nodeType":"479","messageId":"480","endLine":4,"endColumn":23},{"ruleId":"477","severity":1,"message":"523","line":5,"column":8,"nodeType":"479","messageId":"480","endLine":5,"endColumn":14},{"ruleId":"477","severity":1,"message":"572","line":7,"column":8,"nodeType":"479","messageId":"480","endLine":7,"endColumn":19},{"ruleId":"477","severity":1,"message":"525","line":8,"column":10,"nodeType":"479","messageId":"480","endLine":8,"endColumn":21},{"ruleId":"477","severity":1,"message":"573","line":24,"column":36,"nodeType":"479","messageId":"480","endLine":24,"endColumn":47},{"ruleId":"477","severity":1,"message":"574","line":30,"column":32,"nodeType":"479","messageId":"480","endLine":30,"endColumn":41},{"ruleId":"505","severity":1,"message":"506","line":48,"column":9,"nodeType":"507","endLine":48,"endColumn":90},{"ruleId":"505","severity":1,"message":"506","line":52,"column":13,"nodeType":"507","endLine":52,"endColumn":80},{"ruleId":"505","severity":1,"message":"506","line":57,"column":9,"nodeType":"507","endLine":57,"endColumn":81},{"ruleId":"477","severity":1,"message":"478","line":1,"column":27,"nodeType":"479","messageId":"480","endLine":1,"endColumn":36},{"ruleId":"477","severity":1,"message":"482","line":2,"column":8,"nodeType":"479","messageId":"480","endLine":2,"endColumn":13},{"ruleId":"477","severity":1,"message":"575","line":6,"column":10,"nodeType":"479","messageId":"480","endLine":6,"endColumn":16},{"ruleId":"477","severity":1,"message":"576","line":54,"column":9,"nodeType":"479","messageId":"480","endLine":54,"endColumn":14},{"ruleId":"477","severity":1,"message":"508","line":4,"column":8,"nodeType":"479","messageId":"480","endLine":4,"endColumn":14},{"ruleId":"477","severity":1,"message":"509","line":5,"column":8,"nodeType":"479","messageId":"480","endLine":5,"endColumn":16},{"ruleId":"477","severity":1,"message":"510","line":7,"column":8,"nodeType":"479","messageId":"480","endLine":7,"endColumn":17},{"ruleId":"477","severity":1,"message":"494","line":8,"column":10,"nodeType":"479","messageId":"480","endLine":8,"endColumn":16},{"ruleId":"477","severity":1,"message":"495","line":8,"column":18,"nodeType":"479","messageId":"480","endLine":8,"endColumn":23},{"ruleId":"477","severity":1,"message":"577","line":8,"column":12,"nodeType":"479","messageId":"480","endLine":8,"endColumn":20},{"ruleId":"578","severity":1,"message":"579","line":120,"column":29,"nodeType":"580","messageId":"581","endLine":120,"endColumn":48},{"ruleId":"477","severity":1,"message":"535","line":3,"column":10,"nodeType":"479","messageId":"480","endLine":3,"endColumn":14},{"ruleId":"477","severity":1,"message":"494","line":5,"column":10,"nodeType":"479","messageId":"480","endLine":5,"endColumn":16},{"ruleId":"477","severity":1,"message":"495","line":5,"column":18,"nodeType":"479","messageId":"480","endLine":5,"endColumn":23},{"ruleId":"477","severity":1,"message":"478","line":1,"column":27,"nodeType":"479","messageId":"480","endLine":1,"endColumn":36},{"ruleId":"477","severity":1,"message":"582","line":6,"column":8,"nodeType":"479","messageId":"480","endLine":6,"endColumn":15},{"ruleId":"477","severity":1,"message":"483","line":7,"column":10,"nodeType":"479","messageId":"480","endLine":7,"endColumn":20},{"ruleId":"477","severity":1,"message":"486","line":12,"column":8,"nodeType":"479","messageId":"480","endLine":12,"endColumn":12},{"ruleId":"477","severity":1,"message":"487","line":12,"column":14,"nodeType":"479","messageId":"480","endLine":12,"endColumn":19},{"ruleId":"477","severity":1,"message":"526","line":12,"column":21,"nodeType":"479","messageId":"480","endLine":12,"endColumn":27},{"ruleId":"583","severity":1,"message":"584","line":68,"column":57,"nodeType":"585","messageId":"586","endLine":68,"endColumn":59},{"ruleId":"583","severity":1,"message":"584","line":104,"column":34,"nodeType":"585","messageId":"586","endLine":104,"endColumn":36},{"ruleId":"477","severity":1,"message":"494","line":5,"column":10,"nodeType":"479","messageId":"480","endLine":5,"endColumn":16},{"ruleId":"477","severity":1,"message":"495","line":5,"column":18,"nodeType":"479","messageId":"480","endLine":5,"endColumn":23},{"ruleId":"477","severity":1,"message":"482","line":3,"column":8,"nodeType":"479","messageId":"480","endLine":3,"endColumn":13},{"ruleId":"477","severity":1,"message":"478","line":1,"column":27,"nodeType":"479","messageId":"480","endLine":1,"endColumn":36},{"ruleId":"477","severity":1,"message":"489","line":3,"column":10,"nodeType":"479","messageId":"480","endLine":3,"endColumn":17},{"ruleId":"505","severity":1,"message":"506","line":25,"column":9,"nodeType":"507","endLine":25,"endColumn":39},{"ruleId":"477","severity":1,"message":"567","line":1,"column":28,"nodeType":"479","messageId":"480","endLine":1,"endColumn":38},{"ruleId":"501","severity":1,"message":"569","line":17,"column":6,"nodeType":"503","endLine":17,"endColumn":8,"suggestions":"587"},{"ruleId":"505","severity":1,"message":"506","line":37,"column":9,"nodeType":"507","endLine":37,"endColumn":39},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'axios' is defined but never used.","'formToJSON' is defined but never used.","'UserProvider' is defined but never used.","'sendAxiosRequest' is defined but never used.","'user' is assigned a value but never used.","'login' is assigned a value but never used.","'useContext' is defined but never used.","'useUser' is defined but never used.","'isOpenNow' is defined but never used.","'useForm' is assigned a value but never used.","'mainUrl' is defined but never used.","'StoreListItem' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'accessTokenRefresh' is defined but never used.","'refreshTokenInvalid' is defined but never used.","'accordionSummaryClasses' is defined but never used.","'setPageRowCount' is assigned a value but never used.","'accessToken' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pageRowCount'. Either include it or remove the dependency array.","ArrayExpression",["588"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Coupon' is defined but never used.","'Category' is defined but never used.","'StoreHome' is defined but never used.","'getAccessToken' is defined but never used.","'isTokenExpired' is defined but never used.","'jwtDecode' is defined but never used.","React Hook useEffect has missing dependencies: 'accessToken' and 'newAddLength'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setStartPageNo' needs the current value of 'newAddLength'.",["589"],"React Hook useEffect has missing dependencies: 'accessToken' and 'newAddLength'. Either include them or remove the dependency array.",["590"],"'MenuItem' is defined but never used.","React Hook useEffect has missing dependencies: 'menuData' and 'store'. Either include them or remove the dependency array.",["591"],"'Form' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","'json' is defined but never used.","'useNavigate' is defined but never used.","'logout' is assigned a value but never used.","'loginUser' is assigned a value but never used.","'store' is assigned a value but never used.","'sendAxiosMultipartRequest' is defined but never used.","'useParams' is defined but never used.","no-dupe-keys","Duplicate key 'transition'.","ObjectExpression","unexpected","'Link' is defined but never used.","'Carousel' is defined but never used.","'Handsontable' is defined but never used.","'registerRenderer' is defined but never used.","'recommendationItems' is assigned a value but never used.","'summaryData' is assigned a value but never used.","'setSummaryData' is assigned a value but never used.","'averagePrice' is assigned a value but never used.","'handsontableInstance' is assigned a value but never used.","'cellWidth' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'payNo' is assigned a value but never used.","'pay' is assigned a value but never used.","'data' is assigned a value but never used.","'setState' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'setLoginUser' is assigned a value but never used.","'memberNo' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'newAddLength'. Either include it or remove the dependency array.",["592"],"React Hook useEffect has a missing dependency: 'newAddLength'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setStartPageNo' needs the current value of 'newAddLength'.",["593"],"'pageRowCnt' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.reviewNo'. Either include it or remove the dependency array.",["594"],"'setStore' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'store'. Either include it or remove the dependency array.",["595"],"'setMenuItems' is assigned a value but never used.","'styles' is defined but never used.","'useReducer' is defined but never used.","'OrderMenuList' is defined but never used.","React Hook useEffect has a missing dependency: 'orders'. Either include it or remove the dependency array.",["596"],"'NavLink' is defined but never used.","'Placeholder' is defined but never used.","'startSecond' is assigned a value but never used.","'endSecond' is assigned a value but never used.","'Hidden' is defined but never used.","'codes' is assigned a value but never used.","'response' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Payment' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["597"],{"desc":"598","fix":"599"},{"desc":"600","fix":"601"},{"desc":"602","fix":"603"},{"desc":"604","fix":"605"},{"desc":"606","fix":"607"},{"desc":"608","fix":"609"},{"desc":"610","fix":"611"},{"desc":"612","fix":"613"},{"desc":"614","fix":"615"},{"desc":"614","fix":"616"},"Update the dependencies array to be: [pageRowCount]",{"range":"617","text":"618"},"Update the dependencies array to be: [accessToken, newAddLength]",{"range":"619","text":"620"},"Update the dependencies array to be: [accessToken, newAddLength, startPageNo, storeList]",{"range":"621","text":"622"},"Update the dependencies array to be: [menuData, store]",{"range":"623","text":"624"},"Update the dependencies array to be: [startPageNo, reviewList, newAddLength]",{"range":"625","text":"626"},"Update the dependencies array to be: [newAddLength]",{"range":"627","text":"628"},"Update the dependencies array to be: [props.reviewNo]",{"range":"629","text":"630"},"Update the dependencies array to be: [store]",{"range":"631","text":"632"},"Update the dependencies array to be: [orders]",{"range":"633","text":"634"},{"range":"635","text":"634"},[2120,2122],"[pageRowCount]",[1191,1193],"[accessToken, newAddLength]",[2232,2256],"[accessToken, newAddLength, startPageNo, storeList]",[1619,1621],"[menuData, store]",[6376,6401],"[startPageNo, reviewList, newAddLength]",[6837,6839],"[newAddLength]",[15960,15962],"[props.reviewNo]",[551,553],"[store]",[486,488],"[orders]",[444,446]]
\ No newline at end of file
+[{"C:\\Users\\think\\git\\bleuauction_fe\\src\\index.js":"1","C:\\Users\\think\\git\\bleuauction_fe\\src\\App.js":"2","C:\\Users\\think\\git\\bleuauction_fe\\src\\reportWebVitals.js":"3","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Auth\\UserContext.js":"4","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Auth\\LoginPage.js":"5","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Auth\\RegisterPage.js":"6","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Menu\\MenuList.js":"7","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Common\\SideBar.js":"8","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Common\\Header.js":"9","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Test\\Test.js":"10","C:\\Users\\think\\git\\bleuauction_fe\\src\\routes\\Home.js":"11","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Common\\Footer.js":"12","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Menu\\MenuRegisterationForm.js":"13","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\TabBar.js":"14","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\StoreList.js":"15","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\MarketDetailPage.js":"16","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\StoreMyPage.js":"17","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\StoreItemRegister.js":"18","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\UserEditPage.js":"19","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\StoreRegisterPage.js":"20","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\MyPage.js":"21","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\MyOrder.js":"22","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\StoreItemDailyPrice\\StoreItemDailyPrice.js":"23","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\utility\\common.js":"24","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Pay\\Pay.js":"25","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Test\\test2.jsx":"26","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Review\\ReviewForm.js":"27","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\StoreHome.js":"28","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\StoreListItem.js":"29","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Menu\\MenuItem.js":"30","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\InputField.js":"31","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\StoreInfo.js":"32","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Review\\ReviewSection.js":"33","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MainPage\\Category.js":"34","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\MyOrderContent.js":"35","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MainPage\\Announce.js":"36","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MainPage\\Button.js":"37","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\StoreHomeItem.js":"38","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Review\\ReviewList.js":"39","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Coupon\\Coupon.js":"40","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\StoreItemDailyPrice\\StoreItemAdd.js":"41","C:\\Users\\think\\git\\bleuauction_fe\\src\\routes\\StoreList.js":"42","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Chat\\Chat.js":"43","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Notice\\NoticeDetail.js":"44","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Notice\\NoticeList.js":"45","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Notice\\NoticeListItem.js":"46","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\OrderModal.js":"47","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Admin\\AdminNoticeList.js":"48","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Admin\\AdminNoticeDetail.js":"49","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Admin\\NoticeRegisterationForm.js":"50","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Admin\\AdminNoticeListItem.js":"51","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\OrderItem.js":"52","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\OrderMenuList.js":"53","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\StoreOrder.js":"54"},{"size":661,"mtime":1697978277777,"results":"55","hashOfConfig":"56"},{"size":5651,"mtime":1698038999194,"results":"57","hashOfConfig":"56"},{"size":375,"mtime":1696236038543,"results":"58","hashOfConfig":"56"},{"size":1644,"mtime":1697580419735,"results":"59","hashOfConfig":"56"},{"size":4892,"mtime":1698044304944,"results":"60","hashOfConfig":"56"},{"size":6672,"mtime":1697693754234,"results":"61","hashOfConfig":"56"},{"size":1072,"mtime":1697776613316,"results":"62","hashOfConfig":"56"},{"size":706,"mtime":1697692768881,"results":"63","hashOfConfig":"56"},{"size":3320,"mtime":1698038999198,"results":"64","hashOfConfig":"56"},{"size":1115,"mtime":1696943521784,"results":"65","hashOfConfig":"56"},{"size":2569,"mtime":1698038999217,"results":"66","hashOfConfig":"56"},{"size":285,"mtime":1697521231622,"results":"67","hashOfConfig":"56"},{"size":3962,"mtime":1697776613317,"results":"68","hashOfConfig":"56"},{"size":1388,"mtime":1697097424814,"results":"69","hashOfConfig":"56"},{"size":2621,"mtime":1698038999200,"results":"70","hashOfConfig":"56"},{"size":2965,"mtime":1697990268617,"results":"71","hashOfConfig":"56"},{"size":0,"mtime":1697691593162,"results":"72","hashOfConfig":"73"},{"size":8281,"mtime":1698038999207,"results":"74","hashOfConfig":"56"},{"size":6428,"mtime":1698038999208,"results":"75","hashOfConfig":"56"},{"size":7165,"mtime":1697776613319,"results":"76","hashOfConfig":"56"},{"size":4993,"mtime":1698038999206,"results":"77","hashOfConfig":"56"},{"size":2335,"mtime":1697521308636,"results":"78","hashOfConfig":"56"},{"size":13418,"mtime":1698038999213,"results":"79","hashOfConfig":"56"},{"size":6525,"mtime":1698038999215,"results":"80","hashOfConfig":"56"},{"size":4473,"mtime":1697713109592,"results":"81","hashOfConfig":"56"},{"size":470,"mtime":1696943521785,"results":"82","hashOfConfig":"56"},{"size":20110,"mtime":1697697390436,"results":"83","hashOfConfig":"56"},{"size":800,"mtime":1698038999209,"results":"84","hashOfConfig":"56"},{"size":1651,"mtime":1698038999201,"results":"85","hashOfConfig":"56"},{"size":2090,"mtime":1697691593156,"results":"86","hashOfConfig":"56"},{"size":381,"mtime":1698038999204,"results":"87","hashOfConfig":"56"},{"size":3829,"mtime":1697776613313,"results":"88","hashOfConfig":"56"},{"size":750,"mtime":1697097424831,"results":"89","hashOfConfig":"56"},{"size":642,"mtime":1697097424806,"results":"90","hashOfConfig":"56"},{"size":2332,"mtime":1698038717403,"results":"91","hashOfConfig":"56"},{"size":1807,"mtime":1697627389378,"results":"92","hashOfConfig":"56"},{"size":436,"mtime":1697097424804,"results":"93","hashOfConfig":"56"},{"size":2417,"mtime":1697624654909,"results":"94","hashOfConfig":"56"},{"size":1326,"mtime":1697097424829,"results":"95","hashOfConfig":"56"},{"size":1441,"mtime":1697097424799,"results":"96","hashOfConfig":"56"},{"size":4808,"mtime":1697868489177,"results":"97","hashOfConfig":"56"},{"size":1055,"mtime":1697691593170,"results":"98","hashOfConfig":"73"},{"size":6453,"mtime":1697691593146,"results":"99","hashOfConfig":"56"},{"size":1078,"mtime":1697691593165,"results":"100","hashOfConfig":"56"},{"size":691,"mtime":1697691593167,"results":"101","hashOfConfig":"56"},{"size":1438,"mtime":1697691593168,"results":"102","hashOfConfig":"56"},{"size":6687,"mtime":1698033743056,"results":"103","hashOfConfig":"56"},{"size":728,"mtime":1697792750306,"results":"104","hashOfConfig":"56"},{"size":2560,"mtime":1697792750304,"results":"105","hashOfConfig":"56"},{"size":2653,"mtime":1697792750308,"results":"106","hashOfConfig":"56"},{"size":2545,"mtime":1697792750307,"results":"107","hashOfConfig":"56"},{"size":1316,"mtime":1698012733667,"results":"108","hashOfConfig":"56"},{"size":3032,"mtime":1698038717405,"results":"109","hashOfConfig":"56"},{"size":1926,"mtime":1698038717406,"results":"110","hashOfConfig":"56"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"1u8wuzz",{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"114"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"114"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"114"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"114"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"131ovsd",{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"114"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"114"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"114"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"114"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"114"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"114"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"114"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"114"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"114"},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"114"},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"114"},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"114"},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"114"},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"114"},{"filePath":"271","messages":"272","suppressedMessages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"114"},{"filePath":"275","messages":"276","suppressedMessages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"278","messages":"279","suppressedMessages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"114"},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"114"},{"filePath":"289","messages":"290","suppressedMessages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","suppressedMessages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\think\\git\\bleuauction_fe\\src\\index.js",[],[],["295"],"C:\\Users\\think\\git\\bleuauction_fe\\src\\App.js",["296","297","298","299","300","301","302","303"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\reportWebVitals.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Auth\\UserContext.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Auth\\LoginPage.js",["304","305","306","307","308","309"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Auth\\RegisterPage.js",["310","311","312"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Menu\\MenuList.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Common\\SideBar.js",["313"],[],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport styles from './SideBar.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Chat from '../Chat/Chat';\r\n\r\nfunction SideBar() {\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n    const toggleModal = () => {\r\n        setIsModalOpen(!isModalOpen);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.sideBarBox}>\r\n            <Link to='/StoreItemAdd'>등록</Link>\r\n            <Link to=\"/\">오늘의 <br />방사능</Link>\r\n            <Link to=\"#\" onClick={toggleModal}>챗봇</Link>\r\n            {isModalOpen && <Chat closeModal={toggleModal} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideBar;","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Common\\Header.js",["314","315","316","317","318","319"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Test\\Test.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\routes\\Home.js",["320","321","322","323","324","325","326","327","328","329"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Common\\Footer.js",["330","331","332","333"],[],"import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport styles from './Footer.module.css';\r\n\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className={styles.footerBox}>\r\n      <img src='/images/LogoPage.png' />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer;","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Menu\\MenuRegisterationForm.js",["334"],[],"import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios, { formToJSON } from 'axios';\r\nimport { sendAxiosRequest } from '../utility/common';\r\n\r\nfunction MenuRegisterationForm() {\r\n  const [menu, setMenu] = useState({\r\n    menuImage: null,\r\n    menuName: '',\r\n    menuSize: '',\r\n    menuPrice: '',\r\n    menuContent: '',\r\n  });\r\n\r\n  const [previewImage, setPreviewImage] = useState(null); // 이미지 미리보기 URL\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) {\r\n      return;\r\n    }\r\n\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      // 이미지 파일 데이터를 상태에 저장하고 미리보기 설정\r\n      setMenu({ ...menu, menuImage: file });\r\n      setPreviewImage(reader.result);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setMenu({ ...menu, [name]: value });\r\n  };\r\n\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let formData = new FormData(e.target);\r\n    let formObj = formToJSON(formData);\r\n    sendAxiosRequest('/api/menu/new', 'POST', formObj, response => {\r\n      console.log('메뉴 응답값:', response.data);\r\n      alert('메뉴등록에 성공하셨습니다!');\r\n      navigate('/');\r\n    },\r\n      error => {\r\n        console.error('API 호출 중 에러 발생: ', error);\r\n        alert('메뉴등록에 실패하셨습니다!');\r\n      }\r\n    )\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <form onSubmit={handleSubmit} style={styles.form}>\r\n      <h2>메뉴 등록</h2>\r\n        <div>\r\n          <label>메뉴 이미지:</label>\r\n          <input style={styles.input} type=\"file\" onChange={handleImageChange} />\r\n          {previewImage && (\r\n            <div>\r\n              <h3>이미지 미리보기:</h3>\r\n              <img src={previewImage} alt=\"미리보기\" style={{ height: '100px' }} /> {/* 미리보기 이미지 크기는 조절 가능 */}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label>메뉴 이름:</label>\r\n          <input style={styles.input} type=\"text\" name=\"menuName\" value={menu.menuName} onChange={handleChange} />\r\n        </div>\r\n        <div>\r\n          <label>메뉴 사이즈:</label>\r\n          <input style={styles.input} type=\"text\" name=\"menuSize\" value={menu.menuSize} onChange={handleChange} />\r\n        </div>\r\n        <div>\r\n          <label>메뉴 가격:</label>\r\n          <input style={styles.input} type=\"number\" name=\"menuPrice\" value={menu.menuPrice} onChange={handleChange} />\r\n        </div>\r\n        <div>\r\n          <label>메뉴 설명:</label>\r\n          <textarea name=\"menuContent\" value={menu.menuContent} onChange={handleChange} />\r\n        </div>\r\n        <button type=\"submit\" style={styles.submitButton}>메뉴 등록</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '30vh',\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center', // 폼 내용을 중앙 정렬합니다.\r\n    padding: '20px',  // 내부 패딩을 추가합니다.\r\n    borderRadius: '12px',  // 모서리를 둥글게 합니다.\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2)', // 약간의 그림자 효과를 추가합니다.\r\n    background: 'white', // 배경색을 흰색으로 설정합니다.\r\n    width: '800px', \r\n  },\r\n  input: {\r\n    padding: '10px',\r\n    margin: '5px 0',\r\n    borderRadius: '6px',\r\n    border: '1px solid #ccc',\r\n    outline: 'none',\r\n    width: '300px', \r\n  },\r\n  submitButton: {\r\n    padding: '10px 20px',\r\n    cursor: 'pointer',\r\n    backgroundColor: '#0575E6',\r\n    border: 'none',\r\n    borderRadius: '8px',\r\n    color: 'white',\r\n  },\r\n}\r\n\r\n\r\nexport default MenuRegisterationForm;\r\n","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\TabBar.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\StoreList.js",["335","336","337","338","339","340","341","342","343","344","345","346"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\MarketDetailPage.js",["347","348","349"],[],"import React, { useState } from 'react';\r\nimport TabBar from './TabBar';\r\nimport MenuList from '../Menu/MenuList';\r\nimport Button from '../MainPage/Button';\r\nimport StoreInfo from './StoreInfo';\r\nimport ReviewSection from '../Review/ReviewSection';\r\nimport { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { sendAxiosRequest } from '../utility/common';\r\nimport { MenuItem } from '@mui/material';\r\nimport OrderModal from './OrderModal';\r\nimport { useUser } from '../Auth/UserContext';\r\n\r\n\r\nfunction MarketDetailPage() {\r\n\r\n  const [activeTab, setActiveTab] = useState('info');\r\n  const [modal, setModal] = useState(false);\r\n  const [menuData, setMenuData] = useState([]); // 메뉴 데이터를 저장할 상태\r\n\r\n  const location = useLocation(); // 추가된 부분\r\n  const store = location.state; // 추가된 부분\r\n\r\n\r\n  const storeInfo = {\r\n    image: '/images/storeimage.png',\r\n    name: '대원수산',\r\n    location: '서울특별시 동작구 노들로 674 노량진수산시장 , 2층 활어 2-15호 강변상회',\r\n    hours: '월요일 (오늘) 09:00 ~ 21:00',\r\n    phone: '02-1234-5678',\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (store && store.storeNo) {\r\n      // 상점 번호가 있는 경우에만 요청을 실행합니다.\r\n      sendAxiosRequest(`/api/menu/${store.storeNo}`, 'GET', null, response => {\r\n        if (response.data && response.data.length > 0) {\r\n          console.log(response.data);\r\n          setMenuData(response.data.map((menu) => ({\r\n            ...menu, \r\n            count: 0\r\n          }))); // 받아온 데이터로 상태를 업데이트합니다.\r\n          console.log(menuData);\r\n        }\r\n      }, error => {\r\n        console.error(\"An error occurred while fetching the menus:\", error);\r\n      });\r\n    }\r\n  }, [])\r\n\r\n\r\n\r\n  const handleOrderClick = () => {\r\n    // alert('주문하기 버튼 클릭!');\r\n    setModal(true);\r\n    console.log(modal);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModal(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div style={infoContainerStyle}>\r\n      <StoreInfo storeInfo={storeInfo} store={store} />\r\n      </div>\r\n      <div style={tabContainerStyle}>\r\n        <TabBar activeTab={activeTab} onTabClick={setActiveTab} />\r\n        {activeTab === 'menu' && <Button onClick={handleOrderClick} buttonText=\"주문하기\" />}\r\n        <OrderModal store={store} menus={menuData} isOpen={modal} onClose={closeModal} setMenuData={setMenuData} />\r\n      </div>\r\n      {activeTab === 'info' && <p>여기에 가게정보를 표시합니다.</p>}\r\n      {activeTab === 'menu' && <MenuList menus={menuData}/>}\r\n      {activeTab === 'review' && <ReviewSection />}\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nconst infoContainerStyle = {\r\n  marginBottom: '0px', // 예시: 아래쪽 마진을 추가하여 공간 생성\r\n};\r\n\r\nconst tabContainerStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center'\r\n};\r\n\r\n\r\nexport default MarketDetailPage;","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\StoreMyPage.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\StoreItemRegister.js",["350","351","352","353","354","355","356","357","358","359"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\UserEditPage.js",["360","361","362"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\StoreRegisterPage.js",["363","364"],[],"import React, { useState } from 'react';\r\n// import { Form, Card, Button } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios, { formToJSON } from 'axios';\r\n\r\n\r\n\r\nfunction StoreRegisterPage() {\r\n\r\n\r\n  const navigate = useNavigate();\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(e.target);\r\n    let formData = new FormData(e.target);\r\n\r\n    let jsonObj = formToJSON(formData);\r\n\r\n    console.log(jsonObj);\r\n\r\n    // POST 요청 생성\r\n    axios.post('/api/store/signup', jsonObj, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(response => {\r\n        // 성공적으로 서버에서 응답을 받은 경우의 처리\r\n        console.log('등록된 가게 정보:', response.data);\r\n        alert('가게 등록 성공!')\r\n        navigate('/mypage');\r\n\r\n      })\r\n      .catch(error => {\r\n        // 오류가 발생한 경우의 처리\r\n        console.error('에러 발생:', error);\r\n      });\r\n\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <form onSubmit={handleSubmit} style={styles.form}>\r\n      <div>\r\n        <h2>가게 등록 </h2>\r\n        </div>\r\n        <div>\r\n        <label>시장명: </label>\r\n        <input style={styles.input} type=\"text\" name=\"marketName\" />\r\n        </div>\r\n        <div>\r\n        <label>가게명: </label>\r\n        <input style={styles.input} type=\"text\" name=\"storeName\" />\r\n        </div>\r\n        <div>\r\n        <label>사업자등록번호: </label>\r\n        <input style={styles.input} type=\"text\" name=\"licenseNo\" />\r\n        </div>\r\n        <div>\r\n        <label>우편번호: </label>\r\n        <input style={styles.input} type=\"text\" name=\"storeZipcode\" />\r\n        </div>\r\n        <div>\r\n        <label>기본주소: </label>\r\n        <input style={styles.input} type=\"text\" name=\"storeAddr\" />\r\n        </div>\r\n        <div>\r\n        <label>상세주소: </label>\r\n        <input style={styles.input} type=\"text\" name=\"storeDetailAddr\" />\r\n        </div>\r\n\r\n\r\n        <div>\r\n          <label>평일운영시작시간: </label>\r\n          <input style={styles.input} type=\"time\" name=\"weekdayStartTime\" />\r\n        </div>\r\n        <div>\r\n          <label>평일운영종료시간: </label>\r\n          <input style={styles.input} type=\"time\" name=\"weekdayEndTime\" />\r\n        </div>\r\n        <div>\r\n          <label>주말운영시작시간: </label>\r\n          <input style={styles.input} type=\"time\" name=\"weekendStartTime\" />\r\n        </div>\r\n        <div>\r\n          <label>주말운영종료시간: </label>\r\n          <input style={styles.input} type=\"time\" name=\"weekendEndTime\" />\r\n        </div>\r\n\r\n        <button type=\"submit\" style={styles.submitButton}> 가게 등록</button>\r\n\r\n      </form>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '60vh',\r\n  },\r\n  card: {\r\n    width: '50%', \r\n    boxShadow: '0 8px 30px rgba(0, 0, 0, 0.12)',\r\n    borderRadius: '20px', \r\n    padding: '20px', \r\n  },\r\n\r\n  title: {\r\n    fontSize: '1.8rem',\r\n    marginBottom: '30px',\r\n    textAlign: 'center',\r\n  },\r\n  button: {\r\n    background: 'linear-gradient(to right, #6a11cb, #2575fc)',\r\n    border: 'none',\r\n    padding: '10px 20px',\r\n    color: 'white',\r\n    borderRadius: '25px',\r\n    transition: 'all 0.2s',\r\n    cursor: 'pointer',\r\n    transition: 'all 0.3s', \r\n    '&:hover': {\r\n      transform: 'scale(1.1)', \r\n    },\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center', // 폼 내용을 중앙 정렬합니다.\r\n    padding: '20px',  // 내부 패딩을 추가합니다.\r\n    borderRadius: '12px',  // 모서리를 둥글게 합니다.\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2)', // 약간의 그림자 효과를 추가합니다.\r\n    background: 'white', // 배경색을 흰색으로 설정합니다.\r\n    width: '800px', \r\n  },\r\n  input: {\r\n    padding: '10px',\r\n    margin: '5px 0',\r\n    borderRadius: '6px',\r\n    border: '1px solid #ccc',\r\n    outline: 'none',\r\n    width: '300px', \r\n  },\r\n  submitButton: {\r\n    padding: '10px 20px',\r\n    cursor: 'pointer',\r\n    backgroundColor: '#0575E6',\r\n    border: 'none',\r\n    borderRadius: '8px',\r\n    color: 'white',\r\n  },\r\n};\r\n\r\n\r\n\r\nexport default StoreRegisterPage;\r\n\r\n\r\n\r\n// import * as React from 'react';\r\n// import { Button, TextField, Box, Typography, Container } from '@mui/material';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\n// function StoreRegisterPage() {\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const formData = new FormData(e.currentTarget);\r\n//     // 폼 데이터를 JSON으로 변환하는 로직이 필요합니다.\r\n//     // formToJSON 함수를 정의하거나 다른 방법을 사용하세요.\r\n\r\n//     // JSON 객체 생성\r\n//     let jsonObj = {}; \r\n//     formData.forEach((value, key) => { jsonObj[key] = value });\r\n\r\n//     console.log(jsonObj);\r\n\r\n//     // POST 요청 생성\r\n//     axios.post('/api/store/signup', jsonObj, {\r\n//       headers: {\r\n//         'Content-Type': 'application/json'\r\n//       }\r\n//     })\r\n//       .then(response => {\r\n//         console.log('등록된 가게 정보:', response.data);\r\n//         // navigate('/path-after-success'); // 성공 후 리디렉션 경로\r\n//       })\r\n//       .catch(error => {\r\n//         console.error('에러 발생:', error);\r\n//       });\r\n//   };\r\n\r\n//   // Material-UI 컴포넌트를 사용한 레이아웃\r\n//   return (\r\n//     <Container component=\"main\" maxWidth=\"xs\">\r\n//       <Box\r\n//         sx={{\r\n//           marginTop: 8,\r\n//           display: 'flex',\r\n//           flexDirection: 'column',\r\n//           alignItems: 'center',\r\n//         }}\r\n//       >\r\n//         <Typography component=\"h1\" variant=\"h5\">\r\n//           가게 등록\r\n//         </Typography>\r\n//         <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n//           <TextField\r\n//             margin=\"normal\"\r\n//             required\r\n//             fullWidth\r\n//             id=\"marketName\"\r\n//             label=\"시장명\"\r\n//             name=\"marketName\"\r\n//             autoComplete=\"market-name\"\r\n//             autoFocus\r\n//           />\r\n//           {/* 다른 필드들도 이와 유사한 형태로 추가합니다. */}\r\n//           {/* 예시: */}\r\n//           <TextField\r\n//             margin=\"normal\"\r\n//             required\r\n//             fullWidth\r\n//             name=\"storeName\"\r\n//             label=\"가게명\"\r\n//             id=\"storeName\"\r\n//             autoComplete=\"store-name\"\r\n//           />\r\n//           {/* 나머지 필드를 여기에 추가 */}\r\n//           {/* ... */}\r\n//           <Button\r\n//             type=\"submit\"\r\n//             fullWidth\r\n//             variant=\"contained\"\r\n//             sx={{ mt: 3, mb: 2 }}\r\n//           >\r\n//             가게 등록\r\n//           </Button>\r\n//         </Box>\r\n//       </Box>\r\n//     </Container>\r\n//   );\r\n// }\r\n\r\n// export default StoreRegisterPage;\r\n","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\MyPage.js",["365","366","367"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\MyOrder.js",["368"],[],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport MyOrderContent from './MyOrderContent';\r\n\r\n\r\nfunction MyOrder() {\r\n\r\n  const order1 = {\r\n    orderPrice:'10000',\r\n    recipientPhone:'01011111111',\r\n    recipientName: '김성주',\r\n    recipientZipcode: '1111',\r\n    recipientAddr: '기본주소',\r\n    recipientDetailAddr: '상세주소',\r\n    regDatetime: '2023-09-01 15:00:00',\r\n    mdfDatetime: '2023-09-01 15:00:00',\r\n    orderStatus: 'Y'\r\n  }\r\n\r\n  const order2 = {\r\n    orderPrice:'20000',\r\n    recipientPhone:'01011111111',\r\n    recipientName: '김성주2',\r\n    recipientZipcode: '1111',\r\n    recipientAddr: '기본주소',\r\n    recipientDetailAddr: '상세주소',\r\n    regDatetime: '2023-09-01 15:00:00',\r\n    mdfDatetime: '2023-09-01 15:00:00',\r\n    orderStatus: 'N'\r\n  }\r\n\r\n  const order3 = {\r\n    orderPrice:'10000',\r\n    recipientPhone:'01011111111',\r\n    recipientName: '김성주',\r\n    recipientZipcode: '1111',\r\n    recipientAddr: '기본주소',\r\n    recipientDetailAddr: '상세주소',\r\n    regDatetime: '2023-09-01 15:00:00',\r\n    mdfDatetime: '2023-09-01 15:00:00',\r\n    orderStatus: 'Y'\r\n  }\r\n\r\n\r\n  const orderlist = [order1, order2, order3]\r\n\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  const onClick = (e) => {\r\n    setSelected(e.target.value);\r\n  };\r\n\r\n  useEffect(()=>{\r\n    console.log(selected);\r\n  }, [selected])\r\n\r\n  // let content = (selected === 'Delivered') ? \r\n  // <MyOrderContent orderlist = {orderlist.filter((item)=>item.orderStatus === 'N')}/> : \r\n  // <MyOrderContent orderlist = {orderlist.filter((item)=>item.orderStatus === 'Y')} />;\r\n\r\n  let content = (\r\n    (selected === 'Delivered') ? <MyOrderContent orderlist = {orderlist.filter((item)=>item.orderStatus === 'Y')}/> : \r\n    (selected === 'Canceled') ? <MyOrderContent orderlist = {orderlist.filter((item)=>item.orderStatus === 'N')} />:\r\n    null\r\n  )\r\n\r\n  return (\r\n      <>\r\n        <h2>마이오더</h2>\r\n        <div>\r\n          <button value={'Delivered'} onClick = {onClick}>Delivered</button>\r\n          <button value={'Canceled'} onClick = {onClick}>Canceled</button>\r\n        </div>\r\n        <div>\r\n          {/* <MyOrderContent /> */}\r\n          {content}\r\n        </div>\r\n      \r\n      \r\n      </>\r\n  );\r\n};\r\n\r\nexport default MyOrder;\r\n","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\StoreItemDailyPrice\\StoreItemDailyPrice.js",["369","370","371","372","373","374","375","376","377","378","379"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\utility\\common.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Pay\\Pay.js",["380","381","382","383"],[],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n// import swal from 'sweetalert';\r\n// import { response } from 'express';\r\n// import { error } from 'console';\r\n\r\nconst Payment = () => {\r\n  useEffect(() => {\r\n    const jquery = document.createElement(\"script\");\r\n    jquery.src = \"http://code.jquery.com/jquery-1.12.4.min.js\";\r\n    const iamport = document.createElement(\"script\");\r\n    iamport.src = \"https://cdn.iamport.kr/v1/iamport.js\";\r\n    document.head.appendChild(jquery);\r\n    document.head.appendChild(iamport);\r\n    return () => {\r\n      document.head.removeChild(jquery);\r\n      document.head.removeChild(iamport);\r\n    };\r\n  }, []);\r\n\r\n  function sendAxiosRequest(url, method, params, successCallback, errorCallback) {\r\n    console.log(url);\r\n    const axiosConfig = {\r\n      timeout: 5000,\r\n      url: url,\r\n      method: method,\r\n    };\r\n    if (params != null)\r\n      axiosConfig.params = params;\r\n    axios(axiosConfig).then(successCallback).catch(errorCallback);\r\n  }\r\n\r\n  const memberNo = 1;\r\n  const payNo = 1;\r\n  const orderNo = 1;\r\n  const [member, setMember] = useState(null);\r\n  const [pay, setPay] = useState(null);\r\n  const [order, setOrder] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch member data\r\n    sendAxiosRequest(`/api/member/${memberNo}`, 'GET', null,\r\n      response => {\r\n\r\n        console.log('Member data:', response.data);\r\n        setMember(response.data); // Update member state\r\n      },\r\n      error => {\r\n        console.error('Error fetching member data:', error);\r\n      }\r\n    );\r\n\r\n    // Fetch order data\r\n    sendAxiosRequest(`/api/order/detail/${orderNo}`, 'GET', null,\r\n      response => {\r\n        console.log('Order data:', response.data);\r\n        setOrder(response.data); // Update order state\r\n      },\r\n      error => {\r\n        console.error('Error fetching order data:', error);\r\n      }\r\n    );\r\n  }, []); // Empty dependency array to ensure this effect runs only once\r\n\r\n  const requestPay = () => {\r\n    console.log('memberState', member);\r\n    console.log('orderState', order);\r\n\r\n    const { IMP } = window;\r\n    const buyerEmail = member ? member.memberEmail : '';\r\n    const buyerName = member ? member.memberName : '';\r\n    const buyerTel = member ? member.memberPhone : '';\r\n    const name = order ? order.orderNo : '';\r\n    const buyerAddr = order ? order.resipientAddr : '';\r\n    const buyerPostcode = order ? order.resipientZipcode : '';\r\n    const amount = order.orderPrice;\r\n\r\n    IMP.init('imp11340204');\r\n\r\n    IMP.request_pay({\r\n      pg: 'kakaopay.TC0ONETIME',\r\n      pay_method: 'card',\r\n      merchant_uid: new Date().getTime(),\r\n      name: name,\r\n      amount: amount,\r\n      buyer_email: buyerEmail,\r\n      buyer_name: buyerName,\r\n      buyer_tel: buyerTel,\r\n      buyer_addr: buyerAddr,\r\n      buyer_postcode: buyerPostcode,\r\n    }, async (rsp) => {\r\n      console.log('rsp: ', rsp);\r\n      try {\r\n        const { data } = await axios.post('/api/pay/verifyIamport/' + rsp.imp_uid);\r\n        if (rsp.paid_amount === amount) {\r\n          alert('결제 성공!');\r\n          const testPay = {\r\n            // \"payType\": \"C\",\r\n            // \"orderStatus\": \"Y\",\r\n            // \"payNo\": 123,\r\n            orderNo: order.orderNo,\r\n            payPrice: amount,\r\n            payStatus: rsp.success ? 'Y' : 'N'\r\n            // \"payDatetime\": \"2023-10-18T12:34:56\",  // 예: ISO 8601 형식의 날짜 및 시간\r\n            // \"payCancelDatetime\": \"2023-10-18T14:45:00\"  // 예: ISO 8601 형식의 날짜 및 시간\r\n          }\r\n\r\n          console.log('testPay.payStatus: ', testPay.payStatus);\r\n\r\n          axios.post('/api/pay/createPayment', testPay, {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n          })\r\n            .then(response => {\r\n              console.log('Pay data:', response.data);\r\n              setPay(response.data);\r\n            })\r\n            .catch(error => {\r\n              console.error('Error fetching pay data:', error);\r\n            });\r\n\r\n        } else if (rsp.paid_amount == amount) {\r\n          alert('결제 성공?');\r\n        } else {\r\n          alert('결제 실패?');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error while verifying payment:', error);\r\n        alert('결제 실패');\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={requestPay}>결제하기</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n\r\n","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Test\\test2.jsx",["384","385","386"],[],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Test.css';\r\n\r\nconst Test = () => {\r\n  const [testStatus, setState] = useState({\r\n    loading: false,\r\n    response: '값을 가져오니라'\r\n  });\r\n\r\n  console.log(\"testStatus : \",testStatus)\r\n  return (\r\n    <>\r\n      <h1>Test API</h1>\r\n      <div className=\"response-container\">\r\n          <p>{testStatus.response}</p>\r\n        </div>\r\n    </>\r\n  );\r\n}\r\nexport default Test;\r\n","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Review\\ReviewForm.js",["387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409"],[],"import '../utility/Common.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { formToJSON } from 'axios';\r\nimport { scrollMoveTop, sendAxiosMultipartRequest, sendAxiosRequest, dateFormatParse, handleInputChange } from '../utility/common';\r\n\r\n\r\nfunction ReviewForm() {\r\n  let [loginUser, setLoginUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    sendAxiosRequest(\"/api/member/loginCheck\", \"GET\", null,\r\n      response => {\r\n        let repLoginUser = response.data.loginUser;\r\n        console.log('loginUser#@#@#@#@', response.data);\r\n        if (repLoginUser === null) {\r\n          window.location.href = '/';\r\n        } else {\r\n          setLoginUser(repLoginUser);\r\n        }\r\n      }, error => console.log(error));\r\n  }, []);\r\n\r\n  // 로그인 확인\r\n  console.log(loginUser);\r\n\r\n  if (loginUser != null && loginUser != undefined) {\r\n    return (\r\n      <div id='maindDiv' className=\"review-main-div\">\r\n        <div id='mainContentDiv' className=\"ba-main-content-div\">\r\n          <ReviewWriteForm loginUser={loginUser}></ReviewWriteForm>\r\n          <ReviewListDiv></ReviewListDiv>\r\n        </div>\r\n        <div id=\"topBtnDiv\" onClick={scrollMoveTop}>↑</div>\r\n      </div >\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction ReviewWriteForm(props) {\r\n  let [loginUser, setLoginUser] = useState(props.loginUser);\r\n  let [storeNo, setStoreNo] = useState(1);\r\n  let [memberNo, setMemberNo] = useState(1);\r\n  let [reviewFreshness, setReviewFreshness] = useState('M');\r\n\r\n  if (loginUser != null && loginUser != undefined) {\r\n\r\n    return (\r\n      <form id=\"reviewWriteForm\" encType='multipart/form-data' className='ba-form'>\r\n        <label htmlFor='storeNo'><input id='storeNo' name='storeNo' value={storeNo} hidden onChange={(e) => setStoreNo(e.target.value)}></input></label>\r\n        <label htmlFor='memberNo'><input id='memberNo' name='memberNo' value={loginUser.memberNo} hidden text onChange={(e) => setMemberNo(e.target.value)}></input></label>\r\n        <img className='ba-member-profile' src='http://fvhsczepiibf19983519.cdn.ntruss.com/member/defaultProfile.jpg?type=f&w=50&h=50&ttype=jpg' ></img>\r\n        <sapn className='ba-font-name'>{loginUser.memberName}</sapn>\r\n        <span className='ba-font-title'>신선도 :</span>\r\n        <label htmlFor='freshness-low' className='ba-freshness'><img src='/images/low.png' /><input type=\"radio\" id='freshness-low' name='reviewFreshness' value={'L'} checked={reviewFreshness === 'L'} onChange={() => setReviewFreshness('L')}></input></label>\r\n        <label htmlFor='freshness-medium' className='ba-freshness'><img src='/images/mid.png' /><input type=\"radio\" id='freshness-medium' name='reviewFreshness' value={'M'} checked={reviewFreshness === 'M'} onChange={() => setReviewFreshness('M')}></input></label>\r\n        <label htmlFor='freshness-high' className='ba-freshness'><img src='/images/high.png' /><input type=\"radio\" id='freshness-high' name='reviewFreshness' value={'H'} checked={reviewFreshness === 'H'} onChange={() => setReviewFreshness('H')}></input></label>\r\n        <div>\r\n          <textarea name=\"reviewContent\" className='ba-textarea' />\r\n        </div>\r\n        <div className='ba-text-left'>\r\n          <button type='button' className='ba-btn ba-margin-right10' onClick={() => {\r\n            let formData = new FormData(document.getElementById('reviewWriteForm'));\r\n            let reviewContentLength = formData.get('reviewContent').trim().length;\r\n            console.log(reviewContentLength);\r\n\r\n            if (reviewContentLength < 1) {\r\n              alert('작성하실 리뷰 내용을 입력해주세요!');\r\n              return;\r\n            }\r\n\r\n            let inputFile = document.querySelector('input[type=\"file\"]');\r\n            if (inputFile.files.length > 0) {\r\n              let files = inputFile.files;\r\n              for (let i = 0; i < files.length; i++) {\r\n                formData.append(\"multipartFiles\", files[i]);\r\n              }\r\n            }\r\n\r\n            console.log('여기다.');\r\n            sendAxiosMultipartRequest('/api/review/add', formData,\r\n              response => {\r\n                console.log('리뷰작성성공');\r\n                window.location.reload();\r\n                alert('리뷰를 성공적으로 작성하였습니다!');\r\n                console.log(response.data);\r\n              }, error => console.log(error));\r\n\r\n          }}>리뷰작성</button>\r\n          <label htmlFor='fileInput' className='ba-file-label'>파일 첨부</label><span id='fileInfoSpan'></span>\r\n          <input type='file' id='fileInput' multiple hidden className='ba-file-btn' onChange={(e) => {\r\n            let files = e.target.files;\r\n            console.log(files);\r\n            let fileInfoStr;\r\n            for (let i = 0; i < 2; i++) {\r\n              fileInfoStr = (i === 0) ? fileInfoStr + ' ' + files[i].name + ', ' : fileInfoStr + ' ' + files[i].name;\r\n            }\r\n            document.getElementById('fileInfoSpan').textContent = '파일명: ' + fileInfoStr + ' 등 ' + files.length + '개의 첨부파일';\r\n          }} />\r\n        </div>\r\n\r\n      </form >\r\n    );\r\n  }\r\n}\r\n\r\nfunction ReviewListDiv(props) {\r\n  const pageRowCnt = 4;\r\n  let [loginUser, setLoginUser] = useState(props.loginUser);\r\n  let [startPageNo, setStartPageNo] = useState(0);\r\n  let [reviewList, setReviewList] = useState([]);\r\n  let [selectedReviewNo, setSelectedReviewNo] = useState(null);\r\n  let [newAddLength, setNewAddLength] = useState(pageRowCnt);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      console.log(newAddLength);\r\n      if (newAddLength < pageRowCnt) {\r\n        return;\r\n      }\r\n      if (\r\n        window.innerHeight + document.documentElement.scrollTop >=\r\n        document.documentElement.scrollHeight - 100\r\n      ) {\r\n\r\n        console.log(\"스크롤 이벤트 핸들러 작동\");\r\n        sendAxiosRequest(`/api/review/list?startPage=${startPageNo}`, 'GET', null, response => {\r\n          console.log('response:', response);\r\n          console.log('response.data:',response.data);\r\n          let addReviewList = response.data.reviewList;\r\n          setNewAddLength(response.data.reviewList.length);\r\n          let newReviewList = [...reviewList, ...addReviewList];\r\n\r\n          setStartPageNo(Math.floor(newReviewList.length / pageRowCnt));\r\n          setReviewList(newReviewList);\r\n        }, error => console.log(error))\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    }\r\n  }, [startPageNo, reviewList]);\r\n\r\n  useEffect(() => {\r\n    sendAxiosRequest(\"/api/review/list\", \"GET\", null,\r\n      response => {\r\n        console.log('response.datasdsd:', response.data);\r\n        let data = response.data;\r\n        setLoginUser(data.loginUser);\r\n        setReviewList(data.reviewList);\r\n        setNewAddLength(data.reviewList.length);\r\n        setStartPageNo(Math.floor(newAddLength / pageRowCnt));\r\n      }, error => console.log(error));\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <div id=\"reviewListDiv\" className='review-list-div'>\r\n      { reviewList.map((review, index) => (\r\n        <div key={index} className='review-div'>\r\n          <form id={'reviewUpdateForm' + index}>\r\n            <input id={'reviewNo' + index} name='reviewNo' hidden value={review.reviewNo} />\r\n\r\n            <div className='ba-title-container'>\r\n              <img className='ba-member-profile' src='http://fvhsczepiibf19983519.cdn.ntruss.com/member/defaultProfile.jpg?type=f&w=50&h=50&ttype=jpg' />\r\n              <div className='ba-title-info'>\r\n                <b>{review.member.memberName}</b>\r\n                <span><b>작성일:</b><input type='text' value={dateFormatParse(new Date(review.mdfDatetime))} className='ba-input-text' disabled /></span>\r\n              </div>\r\n              <div className='ba-title-freshness'>\r\n                <span className='ba-font-title'>신선도 :</span>\r\n                <label htmlFor='freshness-low'>\r\n                  <img src='/images/low.png' />\r\n                  <input type=\"radio\" name='reviewFreshness' value={'L'} checked={review.reviewFreshness === 'L'} onChange={(e) => handleInputChange(e, index, reviewList, setReviewList)} />\r\n                </label>\r\n                <label htmlFor='freshness-mid'>\r\n                  <img src='/images/mid.png' />\r\n                  <input type=\"radio\" name='reviewFreshness' value={'M'} checked={review.reviewFreshness === 'M'} onChange={(e) => handleInputChange(e, index, reviewList, setReviewList)} />\r\n                </label>\r\n                <label htmlFor='freshness-high'>\r\n                  <img src='/images/high.png' />\r\n                  <input type=\"radio\" name='reviewFreshness' value={'H'} checked={review.reviewFreshness === 'H'} onChange={(e) => handleInputChange(e, index, reviewList, setReviewList)} />\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <hr />\r\n            <div>\r\n              {review.reviewAttaches.length > 0 && (\r\n                <div className='ba-img-list-div'>\r\n                  <img id={'defaultImg' + index} className='ba-img-first' src={`http://kr.object.ncloudstorage.com/bleuauction-bucket/review/${review.reviewAttaches.length > 0 ? review.reviewAttaches[0].saveFilename : ''}`} />\r\n\r\n                  <div className='ba-div-col-sort'>\r\n                    {\r\n                      review.reviewAttaches.map((attach) => (\r\n                        <div>\r\n                          <img className='ba-img-sub-list-div' src={`http://kr.object.ncloudstorage.com/bleuauction-bucket/review/${attach.saveFilename}`} onMouseEnter={(e) => {\r\n                            let targetImgSrc = e.target.src;\r\n                            let defaultImgId = 'defaultImg' + index;\r\n                            console.log(targetImgSrc);\r\n                            let defaultImg = document.getElementById(defaultImgId);\r\n                            console.log(defaultImg);\r\n                            defaultImg.src = targetImgSrc;\r\n                          }} />\r\n                        </div>\r\n                      )\r\n                      )\r\n                    }\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {review.member.memberNo == loginUser.memberNo ?\r\n                (<textarea name='reviewContent' value={review.reviewContent} className='ba-textarea' onChange={(e) => handleInputChange(e, index, reviewList, setReviewList)} />)\r\n                : (<textarea name='reviewContent' value={review.reviewContent} className='ba-textarea-disabled' readOnly />\r\n                )}\r\n            </div>\r\n\r\n            {review.member.memberNo == loginUser.memberNo ?\r\n              (<div className='ba-btn-div'>\r\n                <div className='ba-file-list'>\r\n                  {review.reviewAttaches.map((attach) => (\r\n                    <div key={attach.fileNo} className=\"ba-file-item\">\r\n                      <li>{attach.originFilename}</li>\r\n                      <p className=\"ba-delete-text\" onClick={() => {\r\n                        sendAxiosRequest(`/api/review/deleteFile?fileNo=${attach.fileNo}`, 'GET', null,\r\n                          response => {\r\n                            console.log(response.data);\r\n                            window.location.reload();\r\n                            alert(response.data.originFilename + '(이)가 삭제되었습니다!');\r\n                          },\r\n                          error => {\r\n                            console.log(error);\r\n                          }\r\n                        );\r\n                      }}>[삭제]</p>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n\r\n                <button type='button' className='ba-btn ba-margin-right20' onClick={() => {\r\n                  let jsonObj = formToJSON(new FormData(document.getElementById('reviewUpdateForm' + index)));\r\n                  console.log(jsonObj);\r\n                  sendAxiosRequest('/api/review/update', 'POST', jsonObj, response => {\r\n                    console.log(response.data);\r\n                    console.log('리뷰변경 성공!');\r\n                    window.location.reload();\r\n                    alert('리뷰를 성공적으로 변경하였습니다!');\r\n                  }, error => console.log(error));\r\n                }}>리뷰수정</button>\r\n                <button type='button' className='ba-btn ba-margin-right10' onClick={\r\n                  () => {\r\n                    sendAxiosRequest(`/api/review/delete?reviewNo=${review.reviewNo}`, 'GET', null, response => {\r\n                      console.log(response.data);\r\n                      window.location.reload();\r\n                      alert('리뷰가 성공적으로 삭제되었습니다!');\r\n                    }, error => {\r\n                      console.log(error);\r\n                    });\r\n                  }}>리뷰삭제</button>\r\n              </div>) : (<div></div>)\r\n            }\r\n\r\n            <div className='ba-text-right'>\r\n              <button type='button' className='ba-small-btn' onClick={() => {\r\n                selectedReviewNo === review.reviewNo ? setSelectedReviewNo(null) : setSelectedReviewNo(review.reviewNo);\r\n              }}>답글</button>\r\n            </div>\r\n          </form>\r\n\r\n          {\r\n            selectedReviewNo == review.reviewNo && (\r\n              <AnswerForm reviewNo={review.reviewNo} loginUser={loginUser} />\r\n            )\r\n          }\r\n        </div >\r\n      ))\r\n      }\r\n    </div >\r\n  );\r\n}\r\n\r\nfunction AnswerForm(props) {\r\n  return (\r\n    <div>\r\n      <hr />\r\n      <div className='ba-text-right'>\r\n        <button type='button' className='ba-small-btn' onClick={() => {\r\n          document.getElementById('answerWriteFormDiv').style.display = 'block';\r\n        }}>답글작성✍️</button>\r\n      </div>\r\n      <div id=\"answerWriteFormDiv\">\r\n        <h4 className='ba-font-title'>답글작성</h4>\r\n        <form id=\"answerWriteForm\">\r\n          <input name='reviewNo' hidden value={props.reviewNo}></input>\r\n          <input name='memberNo' hidden value={1}></input>\r\n          <button type='button' className='ba-close-btn' onClick={\r\n            () => {\r\n              document.getElementById('answerWriteFormDiv').style.display = 'none';\r\n\r\n            }\r\n          }>x</button>\r\n          <div>\r\n            <textarea name='answerContent' className='ba-small-textarea'></textarea>\r\n          </div>\r\n          <div className='ba-btn-div'>\r\n            <button type='button' className='ba-btn ba-margin-right40' onClick={() => {\r\n              let jsonObj = formToJSON(document.getElementById('answerWriteForm'));\r\n              console.log(jsonObj);\r\n              if (jsonObj.answerContent.trim().length < 1) {\r\n                alert('작성하실 답급 내용을 입력해주세요!');\r\n                return;\r\n              }\r\n              sendAxiosRequest('/api/answer/add', 'POST', jsonObj,\r\n                response => {\r\n                  window.location.reload();\r\n                  alert('답글을 성공적으로 작성하였습니다!');\r\n                  console.log(response.data);\r\n                }, error => console.log(error));\r\n            }}>작성하기</button>\r\n          </div>\r\n        </form >\r\n      </div>\r\n      <AnswerListDiv reviewNo={props.reviewNo} loginUser={props.loginUser}></AnswerListDiv>\r\n    </div >\r\n  );\r\n}\r\n\r\nfunction AnswerListDiv(props) {\r\n  const pageRowCnt = 2;\r\n  let [answerList, setAnswerList] = useState([]);\r\n  let [startPageNo, setStartPageNo] = useState(0);\r\n\r\n\r\n  useEffect(() => {\r\n    sendAxiosRequest(`/api/answer/list?reviewNo=${props.reviewNo}`, \"GET\", null,\r\n      response => {\r\n        let asnwerList = response.data.answerList;\r\n        let totalRows = response.data.totalRows;\r\n        console.log('최초 렌더시 totalRow');\r\n        console.log(totalRows);\r\n        console.log('최초 렌더시 asnwerList.length');\r\n        console.log(asnwerList.length);\r\n\r\n        if (totalRows > asnwerList.length) {\r\n          console.log(document.querySelector('.ba-more-btn'));\r\n          document.querySelector('.ba-more-btn').hidden = false;\r\n        }\r\n        setAnswerList(response.data.answerList);\r\n        setStartPageNo(response.data.answerList.length / 2);\r\n      }, error => console.log(error));\r\n\r\n    return () => {\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"answerListDiv\" className='answer-list-div'>\r\n      {answerList.map((answer, index) => (\r\n\r\n        < div className='answer-div' key={index} >\r\n          <form id={'answerUpdateForm' + index}>\r\n            <div className='ba-title-container'>\r\n              <img className='ba-member-profile' src='http://fvhsczepiibf19983519.cdn.ntruss.com/member/defaultProfile.jpg?type=f&w=50&h=50&ttype=jpg' />\r\n              <div className='ba-title-info'>\r\n                <b>{answer.member.memberName}</b>\r\n                <span><b>작성일:</b><input type='text' value={dateFormatParse(new Date(answer.mdfDatetime))} className='ba-input-text' disabled /></span>\r\n              </div>\r\n            </div>\r\n            {answer.member.memberNo == props.loginUser.memberNo ?\r\n              (\r\n                <div>\r\n                  <input type='text' name='answerNo' hidden value={answer.answerNo} />\r\n                  <input type='text' name='reviewNo' hidden value={answer.reviewNo} />\r\n                  <input type='text' name='memberNo' hidden value={answer.member.memberNo} />\r\n\r\n                  <textarea name='answerContent' value={answer.answerContent} className='ba-textarea' onChange={(e) => {\r\n                    handleInputChange(e, index, answerList, setAnswerList);\r\n                  }} />\r\n                  <div className='ba-btn-div'>\r\n                    <button type='button' className='ba-btn ba-margin-right20' onClick={\r\n                      () => {\r\n                        let jsonObj = formToJSON(new FormData(document.getElementById('answerUpdateForm' + index)));\r\n                        console.log(jsonObj);\r\n                        sendAxiosRequest(`/api/answer/update?`, 'POST', jsonObj, response => {\r\n                          window.location.reload();\r\n                          alert('답글이 성공적으로 변경되었습니다!');\r\n                        }, error => {\r\n                          console.log(error);\r\n                        });\r\n                      }\r\n                    } >답글수정</button>\r\n                    <button type='button' className='ba-btn ba-margin-right80' onClick={\r\n                      () => {\r\n                        sendAxiosRequest(`/api/answer/delete?answerNo=${answer.answerNo}`, 'GET', null, response => {\r\n                          window.location.reload();\r\n                          alert('답글이 성공적으로 삭제되었습니다!');\r\n                        }, error => {\r\n                          console.log(error);\r\n                        });\r\n                      }\r\n                    }>답글삭제</button>\r\n                  </div>\r\n                </div>)\r\n              : (<textarea name='answerContent' value={answer.answerContent} className='ba-textarea-disabled' />)}\r\n          </form>\r\n        </div >\r\n      ))\r\n      }\r\n      <div className='ba-btn-div'>\r\n        <button type='button' className='ba-more-btn' hidden onClick={(e) => {\r\n          sendAxiosRequest(`/api/answer/list?reviewNo=${props.reviewNo}&startPage=${startPageNo}`, \"GET\", null,\r\n            response => {\r\n              console.log(response.data);\r\n              let totalRows = response.data.totalRows;\r\n              let appendAnswerList = response.data.answerList;\r\n              let newAnswerList = [...answerList, ...appendAnswerList];\r\n              setAnswerList(newAnswerList);\r\n              setStartPageNo(newAnswerList.length / 2);\r\n              if (totalRows <= newAnswerList.length) {\r\n                e.target.hidden = true;\r\n              }\r\n\r\n            }, error => {\r\n              console.log(error);\r\n            })\r\n        }}>더 보기</button>\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\n\r\nexport default ReviewForm;\r\n","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\StoreHome.js",["410","411","412"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\StoreListItem.js",["413","414","415","416","417","418","419","420"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Menu\\MenuItem.js",["421","422","423"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\InputField.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\StoreInfo.js",["424"],[],"// import React from 'react';\r\n// import Coupon from '../Coupon/Coupon'; \r\n\r\n// function StoreIntro({storeInfo, store, coupons }) {\r\n//   console.log(store);\r\n//   // console.log(storeInfo);\r\n\r\n//   return (\r\n//     <div style={outerContainer}>\r\n//     <div style={introContainer}>\r\n//       <img src={storeInfo.image} alt={storeInfo.name} style={imageStyle} />\r\n//      <div style={storeInfoContainer}>\r\n//       <h2>{store.storeName}</h2>\r\n//       <ul style={infoList}>\r\n//         <li>{store.storeDetailAddr}</li>\r\n//         <li>{store.weekdayStartTime} ~ {store.weekdayEndTime}</li>\r\n//         <li>{store.store}</li>\r\n//       </ul>\r\n//       </div>\r\n//       {/* <div style={couponContainer}>\r\n//         {coupons.map(coupon => (\r\n//           <Coupon key={coupon.id} coupon={coupon} />\r\n//         ))}\r\n//       </div> */}\r\n//     </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// const outerContainer = {\r\n//   display: 'flex',\r\n//   justifyContent: 'center',\r\n//   alignItems: 'center',\r\n//   height: '50vh', // 화면 높이를 100%로 설정 (필요한 경우 조절)\r\n//   };\r\n\r\n// const introContainer = {\r\n//     display: 'flex',\r\n//     flexDirection: 'column', // children들을 열 방향으로 배열\r\n//     alignItems: 'center', // children들을 가운데 정렬\r\n//     backgroundColor: '#f0f0f0', // 연한 회색 배경\r\n//     padding: '0px',\r\n//     borderRadius: '8px', // 소프트한 테두리를 위한 둥근 모서리 추가\r\n//     textAlign: 'center',\r\n//     width : '70%',\r\n//     height: '100%'\r\n// };\r\n\r\n// const storeInfoContainer = {\r\n//     textAlign: 'left', \r\n//     padding: '20px',\r\n//     marginBottom: '50px', // 쿠폰 컨테이너와의 간격을 조절\r\n//     width : '100%',\r\n//   };\r\n\r\n// const imageStyle = {\r\n//   width: '100%',\r\n//   height: 'auto',\r\n//   objectFit: 'cover',\r\n// };\r\n\r\n// const infoList = {\r\n//   listStyleType: 'none',\r\n//   padding: '0',\r\n//   margin: '10px 0',\r\n// };\r\n\r\n\r\n// export default StoreIntro;\r\n\r\nimport React from 'react';\r\nimport Coupon from '../Coupon/Coupon'; \r\n\r\nfunction StoreIntro({storeInfo, store, coupons }) {\r\n\r\n  console.log('storeInfo,',storeInfo);\r\n  console.log('store,',store);\r\n  // console.log(storeInfo);\r\n\r\n  return (\r\n    <div style={outerContainer}>\r\n    <div style={introContainer}>\r\n      <img src={storeInfo.image} alt={storeInfo.name} style={imageStyle} />\r\n     <div style={storeInfoContainer}>\r\n      <h2>{store.storeName}</h2>\r\n      <ul style={infoList}>\r\n        <li>{store.storeDetailAddr}</li>\r\n        <li>{store.weekdayStartTime} ~ {store.weekdayEndTime}</li>\r\n        <li>{store.store}</li>\r\n      </ul>\r\n      </div>\r\n      {/* <div style={couponContainer}>\r\n        {coupons.map(coupon => (\r\n          <Coupon key={coupon.id} coupon={coupon} />\r\n        ))}\r\n      </div> */}\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst outerContainer = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '50vh', // 화면 높이를 100%로 설정 (필요한 경우 조절)\r\n  };\r\n\r\nconst introContainer = {\r\n    display: 'flex',\r\n    flexDirection: 'column', // children들을 열 방향으로 배열\r\n    alignItems: 'center', // children들을 가운데 정렬\r\n    backgroundColor: '#f0f0f0', // 연한 회색 배경\r\n    padding: '0px',\r\n    borderRadius: '8px', // 소프트한 테두리를 위한 둥근 모서리 추가\r\n    textAlign: 'center',\r\n    width : '70%',\r\n    height: '100%'\r\n};\r\n\r\nconst storeInfoContainer = {\r\n    textAlign: 'left', \r\n    padding: '20px',\r\n    marginBottom: '10px', // 쿠폰 컨테이너와의 간격을 조절\r\n    width : '100%',\r\n  };\r\n\r\nconst imageStyle = {\r\n  width: '100%',\r\n  height: 'auto',\r\n  objectFit: 'cover',\r\n};\r\n\r\nconst infoList = {\r\n  listStyleType: 'none',\r\n  padding: '0',\r\n  margin: '10px 0',\r\n};\r\n\r\n\r\nexport default StoreIntro;","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Review\\ReviewSection.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MainPage\\Category.js",["425","426","427"],[],"import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport styles from './Category.module.css';\r\n\r\n\r\nfunction Category() {\r\n\r\n  const [selectedOption, setSelectedOption] = useState('');\r\n\r\n  const handleOptionChange = (event) => {\r\n    setSelectedOption(event.target.value);}\r\n\r\n  return (\r\n    <>\r\n      <select value={selectedOption} onChange={handleOptionChange}>\r\n        <option value=\"option1\">옵션 1</option>\r\n        <option value=\"option2\">옵션 2</option>\r\n        <option value=\"option3\">옵션 3</option>\r\n      </select>\r\n\r\n      <p>{selectedOption}</p>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Category;","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\MyOrderContent.js",["428","429","430","431"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MainPage\\Announce.js",["432","433","434","435"],[],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport styles from './Announce.module.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\r\nimport { Carousel } from 'react-bootstrap';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nfunction Announce() {\r\n  const carousel = {\r\n    height: '400px',\r\n    width: '60%',\r\n    margin: '0 auto',\r\n    borderRadius: '30px',\r\n    overflow: 'hidden'\r\n  }\r\n\r\n  const location = useLocation();\r\n  const content = (location.pathname !== \"/store/list\") ? <img\r\n    src=\"/images/storeimage.png\"\r\n    alt=\"슬라이드 1\"\r\n  /> : <img src='/images/login.png' />;\r\n\r\n  return (\r\n    <div style={carousel}>\r\n      <Carousel >\r\n        {/* 슬라이드 이미지 */}\r\n        <Carousel.Item id={styles.carousel}>\r\n          {content}\r\n\r\n          <Carousel.Caption>\r\n            <h3>꽃소녀</h3>\r\n            <p>김철수 作</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item id={styles.carousel}>\r\n          {content}\r\n          <Carousel.Caption>\r\n            <h3>형형색색</h3>\r\n            <p>이숙자 作</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item id={styles.carousel}>\r\n          {content}\r\n          <Carousel.Caption>\r\n            <h3>분홍</h3>\r\n            <p>Robert Park 作</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item id={styles.carousel}>\r\n          {content}\r\n          <Carousel.Caption>\r\n            <h3>두꺼운 터치</h3>\r\n            <p>Thomas Lee 作</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n      </Carousel>\r\n      <div>\r\n        쿠폰div\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Announce;","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MainPage\\Button.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\StoreHomeItem.js",["436","437","438","439","440","441","442","443","444","445","446","447"],[],"import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport styles from './StoreHomeItem.module.css';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Placeholder from 'react-bootstrap/Placeholder';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction StoreHomeItem({store}) {\r\n\r\n  function isCurrentTimeInRange(startTime, endTime) {\r\n    // 현재 날짜와 시간을 생성\r\n    const currentDate = new Date();\r\n    // 시작 시간과 종료 시간을 파싱 (예: \"08:00\" 형식)\r\n    \r\n    // 현재 시간이 시작 시간과 종료 시간 사이에 있는지 확인\r\n    return currentDate >= startTime && currentDate <= endTime;\r\n  }\r\n\r\n  const startTime = new Date();\r\n  const [startHours, startMinutes, startSecond] = store.weekdayStartTime.split(':');\r\n  startTime.setHours(parseInt(startHours, 10));\r\n  startTime.setMinutes(parseInt(startMinutes, 10));\r\n  // startTime.setSecond(parseInt(startSecond, 10));\r\n\r\n  const endTime = new Date();\r\n  const [endHours, endMinutes, endSecond] = store.weekdayEndTime.split(':');\r\n  endTime.setHours(parseInt(endHours, 10));\r\n  endTime.setMinutes(parseInt(endMinutes, 10));\r\n  // endTime.setSecond(parseInt(endSecond, 10));\r\n\r\n  \r\n  const isWorking = isCurrentTimeInRange(startTime, endTime) ? '영업중' : '영업 종료';\r\n\r\n  // console.log(store);\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <Link to={'/market/detail'}\r\n      state= {store}\r\n      className={styles.storeHomeItemDetailBoxMore}>\r\n      <Card style={{ width: '18rem' }}>\r\n        <img className={styles.storeHomeItemBoss} variant=\"top\" src=\"/images/boss.png\" />\r\n        <div className={styles.storeHomeItemHeader}>\r\n          <p className={styles.storeHomeItemTitle}>{store.storeName}</p>\r\n          <p className={styles.storeHomeItemBoxReview}>\r\n            <img className={styles.storeHomeItemFresh}src=\"/images/fresh.png\"/>5.0\r\n          </p>\r\n        </div>\r\n        <div>\r\n        <p className={styles.storeHomeItemBoxReview}>\r\n        <img className={styles.storeHomeItemStateIcon} src=\"/images/heart.png\"/>{isWorking}</p>\r\n        </div>\r\n        {/* <Button className={styles.storeHomeItemDetailBoxMore}>\r\n          <Link to=\"/\" variant=\"primary\">더보기</Link>\r\n        </Button> */}\r\n      </Card>\r\n    </Link>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default StoreHomeItem;","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Review\\ReviewList.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Coupon\\Coupon.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\StoreItemDailyPrice\\StoreItemAdd.js",["448","449","450","451"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { sendAxiosRequest } from '../utility/common';\r\nimport './StoreItemAdd.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Hidden } from '@mui/material';\r\n\r\n\r\nfunction StroeItemAdd() {\r\n\r\n  const [fish, setFish] = useState('');\r\n  const [code, setCode] = useState('');\r\n  const [size, setSize] = useState('');\r\n  const [origin, setOrigin] = useState('');\r\n  const [place, setPlace] = useState('');\r\n  const [wild, setWild] = useState('');\r\n  const [price, setPrice] = useState('');\r\n\r\n  const handleCode = () => {\r\n    setCode(\r\n      (fish === '광어'||'우럭'||'도미'||'방어'||'참치') ? 'S' :\r\n      (fish === '연어') ? 'F' :\r\n      (fish === '오징어') ? 'E' :\r\n      (fish === '새우') ? 'C' :\r\n      (fish === '가리비'||'전복') ? 'M' : '')\r\n    }\r\n\r\n  const handleSize = (e) => {\r\n    setSize(e.target.value)\r\n  }\r\n\r\n  const handlePrice = (e) => {\r\n    setPrice(e.target.value)\r\n  }\r\n\r\n  const itemSize = \r\n  Number(size) >= 3 ? 'L' :\r\n  Number(size) >= 2 ? 'M' : 'S'\r\n  \r\n\r\n  const fishs = {\r\n    '광어': 1,\r\n    '우럭': 2,\r\n    '도미': 3,\r\n    '방어': 4,\r\n    '참치': 5,\r\n    '연어': 6,\r\n    '오징어': 7,\r\n    '새우': 8,\r\n    '가리비': 9,\r\n    '전복': 10\r\n  }\r\n\r\n  const codes = {\r\n    S: '생선/횟감',\r\n    F: '생선/비횟감',\r\n    C: '갑각류',\r\n    M: '패류',\r\n    E: '기타',\r\n  };\r\n\r\n  const DPlace = {\r\n    ES: '동해',\r\n    WS: '서해',\r\n    SS: '남해',\r\n    JJ: '제주',\r\n    WD: '완도'\r\n  }\r\n\r\n  const IPlace = {\r\n    JP: '일본',\r\n    CN: '중국',\r\n    RU: '러시아',\r\n    NW: '노르웨이'\r\n  }\r\n\r\n  const selectPlace = \r\n  (origin === \"D\") ? DPlace : \r\n  (origin === \"I\") ? IPlace : null;\r\n\r\n  const hiddenButtons = \r\n  (selectPlace !== null) ?\r\n    Object.keys(selectPlace).map((code) => (\r\n      <button\r\n        key={code}\r\n        className={place === code ? 'selected' : ''}\r\n        onClick={() => setPlace(code)}\r\n      >\r\n        {selectPlace[code]}\r\n      </button>\r\n    ))\r\n    : null;\r\n  \r\n  const navigate = useNavigate();\r\n  \r\n  const handleSubmit = () => {\r\n    console.log('dddd');\r\n    sendAxiosRequest ('/api/item/new', 'POST', item, response => {\r\n      console.log(response.data);\r\n      console.log(item);\r\n      navigate('/');\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n\r\n  };\r\n\r\n  const item = {\r\n    'itemName': fish,\r\n    'itemCode': code,\r\n    'itemSize': itemSize,\r\n    'originStatus': origin,\r\n    'originPlaceStatus': place,\r\n    'wildFarmStatus': wild\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <p>품목 선택</p>\r\n      <div className=\"freezer_box\">\r\n      {\r\n        Object.keys(fishs).map((name) => (\r\n          <div key={name}\r\n            className={fish === name ? 'selected' : 'not_selected'} \r\n            onClick={() => {setFish(name); handleCode()}}>\r\n            <img src={`/images/fish${fishs[name]}.jpg`} alt={name} className='fish_image'/>\r\n            <p>{name}</p>\r\n          </div>\r\n        ))\r\n      }\r\n      </div>\r\n\r\n      <div className='fish_size'>\r\n        <p>무게 입력 (kg)</p>\r\n        <div>\r\n          <input\r\n              type=\"number\"\r\n              value={size}\r\n              onChange={handleSize}\r\n              placeholder=\"예) 2.5\"\r\n            />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='fish_size'>\r\n        <p>금일 판매 가격 (원)</p>\r\n        <div>\r\n          <input\r\n              type=\"number\"\r\n              value={price}\r\n              onChange={handlePrice}\r\n              placeholder=\"예) 10000\"\r\n            />\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"fish_origin\">\r\n        <p>원산지</p>\r\n        \r\n        <div className=\"origin_buttons\">\r\n          <button className={origin === 'D' ? 'selected' : ''}\r\n            onClick={() => setOrigin('D')}>국내산</button>\r\n          <button className={origin === 'I' ? 'selected' : ''}\r\n            onClick={() => setOrigin('I')}>수입산</button>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className='fish_place'>\r\n        \r\n\r\n        <div className=\"filter_buttons\">\r\n          {hiddenButtons}\r\n        </div>\r\n      </div>\r\n\r\n      <div className='fish_origin'>\r\n        <p>자연산 / 양식</p>\r\n\r\n        <div className=\"origin_buttons\">\r\n          <button className={wild === 'W' ? 'selected' : ''}\r\n            onClick={() => setWild('W')}>자연산</button>\r\n          <button className={wild === 'F' ? 'selected' : ''}\r\n            onClick={() => setWild('F')}>양식</button>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className='fish_origin'>\r\n        <div className=\"origin_buttons\">\r\n        <button onClick={handleSubmit}>제출하기</button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default StroeItemAdd;","C:\\Users\\think\\git\\bleuauction_fe\\src\\routes\\StoreList.js",["452","453","454","455","456"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Chat\\Chat.js",["457","458"],[],"import React, { useState, useRef, useEffect } from 'react';\r\nimport { MessageBox, ChatList } from 'react-chat-elements';\r\nimport 'react-chat-elements/dist/main.css';\r\nimport axios from 'axios';\r\n\r\nconst Chat = ({ closeModal }) => {\r\n    const [chatMessage, setChatMessage] = useState('');\r\n    const [response, setResponse] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const chatContainerRef = useRef(null);\r\n\r\n    const handleMessage = async () => {\r\n        try {\r\n            const response = await axios.post('/api/chat/message', chatMessage, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n\r\n            setMessages((prevMessages) => [\r\n                ...prevMessages,\r\n                {\r\n                    position: 'right',\r\n                    type: 'text',\r\n                    text: chatMessage,\r\n                    date: new Date(),\r\n                },\r\n                {\r\n                    position: 'left',\r\n                    type: 'text',\r\n                    text: response.data,\r\n                    date: new Date(),\r\n                },\r\n            ]);\r\n\r\n            setResponse(response.data);\r\n            setChatMessage('');\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            handleMessage();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\r\n    }, [messages]);\r\n\r\n    const handleOutsideClick = (e) => {\r\n        if (e.target.classList.contains('chat-modal-container')) {\r\n            closeModal();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"chat-modal-container\"\r\n            style={{\r\n                position: 'fixed',\r\n                top: 0,\r\n                left: 0,\r\n                width: '100%',\r\n                height: '100%',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                zIndex: 9999,\r\n            }}\r\n            onClick={handleOutsideClick}\r\n        >\r\n            <div\r\n                style={{\r\n                    backgroundColor: '#2F80ED',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    padding: '20px',\r\n                    maxWidth: '600px',\r\n                    width: '70%',\r\n                    borderRadius: '20px',\r\n                    position: 'relative',\r\n                    maxHeight: '100%',\r\n                    overflow: 'auto',\r\n                }}\r\n            >\r\n                <ChatList\r\n                    className=\"chat-list\"\r\n                    dataSource={[\r\n                        {\r\n                            avatar: 'https://www.pngfind.com/pngs/m/676-6764066_fish-cartoon-images-fish-logo-png-transparent-png.png',\r\n                            alt: 'Fish',\r\n                            title: 'BA_ChatBot',\r\n                            subtitle: '무엇이든 물어보세요',\r\n                            date: new Date(),\r\n                            unread: 0,\r\n                        },\r\n                    ]}\r\n                    style={{ marginBottom: '20px' }}\r\n                />\r\n                <div\r\n                    ref={chatContainerRef}\r\n                    style={{ flex: '1', overflowY: 'auto', marginTop: '10px' }}\r\n                >\r\n                    {messages.map((message, index) => (\r\n                        <MessageBox\r\n                            key={index}\r\n                            position={message.position}\r\n                            type={message.type}\r\n                            text={message.text}\r\n                            date={message.date}\r\n                            avatar={\r\n                                message.position === 'left'\r\n                                    ? 'https://www.pngfind.com/pngs/m/676-6764066_fish-cartoon-images-fish-logo-png-transparent-png.png'\r\n                                    : null\r\n                            }\r\n                            text={message.text}\r\n                            title={message.position === 'left' ? 'BA_ChatBot' : 'You'}\r\n                            titleColor={message.position === 'left' ? '#FFFFFF' : '#4CAF50'}\r\n                            textFontSize={16}\r\n                            textFontColor=\"#333\"\r\n                            style={{\r\n                                backgroundColor: message.position === 'left' ? '#FFFFFF' : '#DCF8C6',\r\n                                borderRadius: message.position === 'left' ? '0px 10px 10px 10px' : '10px 0px 10px 10px',\r\n                                padding: '10px 15px',\r\n                                maxWidth: '70%',\r\n                                alignSelf: message.position === 'left' ? 'flex-start' : 'flex-end',\r\n                                marginBottom: 10,\r\n                            }}\r\n                        />\r\n                    ))}\r\n                </div>\r\n                <div style={{ display: 'flex', alignItems: 'center', marginTop: '20px' }}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={chatMessage}\r\n                        onChange={(e) => setChatMessage(e.target.value)}\r\n                        onKeyPress={handleKeyPress}\r\n                        style={{ flex: '1', padding: '15px', borderRadius: '30px', border: 'none', fontSize: '16px' }}\r\n                        placeholder=\"메시지를 입력하세요...\"\r\n                    />\r\n                    <button\r\n                        onClick={handleMessage}\r\n                        style={{\r\n                            marginLeft: '10px',\r\n                            padding: '15px 25px',\r\n                            borderRadius: '30px',\r\n                            border: 'none',\r\n                            backgroundColor: '#4CAF50',\r\n                            color: '#fff',\r\n                            cursor: 'pointer',\r\n                            fontSize: '16px',\r\n                        }}\r\n                    >\r\n                        보내기\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Notice\\NoticeDetail.js",["459"],[],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nfunction NoticeDetail() {\r\n  const [notice, setNotice] = useState({});\r\n  const { noticeNo } = useParams();\r\n\r\n  useEffect(() => {\r\n    axios.get(`/api/notice/detail/${noticeNo}`)\r\n      .then(response => setNotice(response.data))\r\n      .catch(error => console.log(error));\r\n  }, [noticeNo]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"top-controls\"></div>\r\n      <div style={{ padding: \"0 12px\" }}>\r\n        <table className=\"board_list text-center\">\r\n          <colgroup>\r\n            <col width=\"20%\" />\r\n            <col width=\"80%\" />\r\n          </colgroup>\r\n          <thead>\r\n          <tr>\r\n          <th>제목</th>\r\n          <td className=\"text-left\">{notice.noticeTitle}</td>\r\n          </tr>\r\n          <tr>\r\n          <th>내용</th>\r\n          <td>{notice.noticeContent}</td>\r\n          </tr>\r\n          </thead>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoticeDetail;\r\n","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Notice\\NoticeList.js",["460","461"],[],"import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n//import Announce from '/components/MainPage/Announce';\r\nimport NoticeListItem from './NoticeListItem';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport styles from './NoticeList.css'\r\n\r\n\r\nfunction NoticeList() {\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/notice')\r\n      .then(response => setData(response.data))\r\n      .catch(error => console.log(error));\r\n      // console.log(data);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n    <div className={styles.storeListBox}>\r\n      <NoticeListItem data={data}/>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NoticeList;","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Notice\\NoticeListItem.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\OrderModal.js",["462","463","464","465","466","467","468","469"],[],"import React, { useState, useEffect } from 'react';\r\nimport './OrderModal.css';\r\nimport { useUser } from '../Auth/UserContext';\r\nimport OrderItem from './OrderItem';\r\nimport { sendAxiosRequest } from '../utility/common';\r\nimport Payment from '../Pay/Pay';\r\nimport { formToJSON } from 'axios';\r\n\r\nconst OrderModal = ({ store, menus, isOpen, onClose, setMenuData }) => {\r\n\r\n  \r\nconst {user, login, logout} = useUser();\r\n\r\nconst [order, setOrder] = useState({\r\n  orderType:'Q',\r\n  orderPrice:0,\r\n  orderRequest:'',\r\n  recipientPhone:'',\r\n  recipientName:'',\r\n  recipientZipcode:'',\r\n  recipientAddr:'',\r\n  recipientDetailAddr:'',\r\n  orderStatus:'',\r\n})\r\n\r\n  // OrderItem 변경 사항 적용\r\n    const updateMenuCount = (updateMenu)=> { \r\n      const updatedItems = menus?.map((menu) =>\r\n      menu.menuNo === updateMenu.menuNo ? updateMenu : menu\r\n    );\r\n      setMenuData(\r\n        updatedItems\r\n      )\r\n  };\r\n\r\n\r\n  const [orderMenus, setOrderMenus] = useState([])\r\n\r\n  let totalPrice = 0\r\n  let totalOrders = [];\r\n  \r\n \r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    setActiveSection('deliveryMethod');\r\n\r\n  }\r\n  \r\n\r\n  // 수령 방식 변경 사항을 저장\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setOrder(prevDetails => ({\r\n      ...prevDetails,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n\r\n  // order, orderMenu 생성 및 결제 진행\r\n  const handleOrder = (event) => {\r\n    event.preventDefault();\r\n    // console.log(orderMenus)\r\n\r\n\r\n   // orderMenu 생성\r\n    menus.filter((menu) => menu.count !== 0).map((menu) => {\r\n      \r\n      totalPrice += menu.count * menu.menuPrice\r\n\r\n      totalOrders.push({\r\n        menuNo: Number(menu.menuNo),\r\n        orderMenuCount: Number(menu.count),\r\n        // orderNo: 0,\r\n        // memberNo:0,\r\n      })\r\n    })\r\n    \r\n    setOrderMenus(totalOrders)\r\n\r\n\r\n\r\n    setOrder({\r\n      ...order, orderPrice: totalPrice\r\n    })\r\n\r\n    // console.log(orderMenus)\r\n    // console.log(typeof(orderMenus[0].menuNo))\r\n\r\n\r\n    // 주문 생성\r\n    sendAxiosRequest('/api/order/new', 'POST', order, response => {\r\n      if (response.data && response.data.length > 0) {\r\n        console.log(\"주문 생성에 성공했습니다:\", response.data);\r\n      }\r\n    }, error => {\r\n      console.error(\"주문 생성에 실패했습니다:\", error);\r\n    });\r\n\r\n    \r\n    //주문 메뉴 추가 생성\r\n    setTimeout(() => {\r\n      orderMenus.map((orderMenu) => {\r\n        console.log('orderMenu=> : ', orderMenu);\r\n\r\n        sendAxiosRequest('/api/ordermenu/new', 'POST', orderMenu, response => {\r\n          if (response.data && response.data.length > 0) {\r\n            console.log(\"주문메뉴 생성에 성공했습니다:\", response.data);\r\n            // console.log('orderMenu=> : ', orderMenu);\r\n            console.log(typeof(orderMenu.menuNo))\r\n          }\r\n        }, error => {\r\n          console.error(\"주문메뉴 생성에 실패했습니다:\", error);\r\n        });\r\n      })\r\n    }, 6000);\r\n\r\n    \r\n    \r\n  }\r\n\r\n\r\n  const [activeSection, setActiveSection] = useState('orderInfo'); // 현재 활성화된 섹션을 추적\r\n\r\n  const switchSection = (section) => {\r\n    setActiveSection(section);\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n\r\n  return (\r\n    <div className=\"orderModalBackground\">\r\n      <div className=\"orderModalContainer\">\r\n        <div className=\"orderModalHeader\">\r\n          <button className=\"closeButton\" onClick={onClose}>X</button>\r\n        </div>\r\n\r\n        <div className=\"sectionButtons\">\r\n          <button onClick={() => switchSection('orderInfo')}>주문 정보</button>\r\n          <button onClick={() => switchSection('deliveryMethod')}>수령 방식</button>\r\n        </div>\r\n\r\n        {activeSection === 'orderInfo' && (\r\n          <form onSubmit={handleSubmit}>\r\n            <h2>주문 정보</h2>\r\n\r\n            <div>\r\n              {menus?.map((menu) => \r\n                <OrderItem key={menu.menuNo} menu={menu}  update = {updateMenuCount} />\r\n              )}\r\n            </div>\r\n\r\n            <button type=\"submit\">주문 정보 제출</button>\r\n          </form>\r\n        )}\r\n\r\n\r\n\r\n        {activeSection === 'deliveryMethod' && (\r\n          <div>\r\n            {/* 수령 방식 선택 부분 */}\r\n            <h2>수령 방식</h2>\r\n\r\n            <div>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"orderType\"\r\n                  value='Q'\r\n                  checked={order.orderType === 'Q'}\r\n                  onChange={handleInputChange}\r\n                />\r\n                퀵배송\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"orderType\"\r\n                  value='T'\r\n                  checked={order.orderType === 'T'}\r\n                  onChange={handleInputChange}\r\n                />\r\n                포장\r\n              </label>\r\n            </div>\r\n\r\n            <h2>수령 정보</h2>\r\n            <input\r\n            type=\"text\"\r\n            name=\"recipientName\"\r\n            placeholder=\"이름\"\r\n            value={order.recipientName}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"recipientPhone\"\r\n            placeholder=\"전화번호\"\r\n            value={order.recipientPhone}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"recipientZipcode\"\r\n            placeholder=\"우편번호\"\r\n            value={order.recipientZipcode}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"recipientAddr\"\r\n            placeholder=\"기본주소\"\r\n            value={order.recipientAddr}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"recipientDetailAddr\"\r\n            placeholder=\"상세주소\"\r\n            value={order.recipientDetailAddr}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"orderRequest\"\r\n            placeholder=\"요청사항\"\r\n            value={order.orderRequest}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n            <button onClick={handleOrder}>결제하기</button>\r\n            {/* <Payment onClick={handleOrder}>결제하기</Payment> */}\r\n          </div>\r\n        )}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n          \r\n\r\nexport default OrderModal;\r\n","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Admin\\AdminNoticeList.js",["470","471"],[],"import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n//import Announce from '/components/MainPage/Announce';\r\nimport AdminNoticeListItem from './AdminNoticeListItem';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport styles from '../Notice/NoticeList.css'\r\n\r\n\r\nfunction AdminNoticeList() {\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/notice')\r\n      .then(response => setData(response.data))\r\n      .catch(error => console.log(error));\r\n      // console.log(data);\r\n  }, []);\r\n  \r\n\r\n  return (\r\n    <>\r\n    <div className={styles.storeListBox}>\r\n      <AdminNoticeListItem data={data}/>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminNoticeList;","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Admin\\AdminNoticeDetail.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Admin\\NoticeRegisterationForm.js",["472"],[],"import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios, { formToJSON } from 'axios';\r\nimport { sendAxiosRequest } from '../utility/common';\r\n\r\nfunction NoticeRegisterationForm() {\r\n  const [notice, setNotice] = useState({\r\n    noticeTitle: 'title',\r\n    noticeContent: 'content',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNotice({ ...notice, [name]: value });\r\n  };\r\n\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let formData = new FormData(e.target);\r\n    let formObj = formToJSON(formData);\r\n    sendAxiosRequest('/api/notice/new', 'POST', formObj, response => {\r\n      console.log('응답값:', response.data);\r\n      alert('공지사항이 등록 되었습니다.');\r\n      navigate('/main');\r\n    },\r\n      error => {\r\n        console.error('API 호출 중 에러 발생: ', error);\r\n        alert('공지사항 등록에 실패하셨습니다!');\r\n      }\r\n    )\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <form onSubmit={handleSubmit} style={styles.form}>\r\n      <h2>공지사항 등록</h2>\r\n        <div>\r\n          <label>제목 </label>\r\n          <input style={styles.input} type=\"text\" name=\"noticeTitle\" value={notice.noticeTitle} onChange={handleChange} />\r\n        </div>\r\n        <div>\r\n          <label>내용 </label>\r\n          <input style={styles.input} type=\"text\" name=\"noticeContent\" value={notice.noticeContent} onChange={handleChange} />\r\n        </div>\r\n        <button type=\"submit\" style={styles.submitButton}>등록</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '30vh',\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center', // 폼 내용을 중앙 정렬합니다.\r\n    padding: '20px',  // 내부 패딩을 추가합니다.\r\n    borderRadius: '12px',  // 모서리를 둥글게 합니다.\r\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2)', // 약간의 그림자 효과를 추가합니다.\r\n    background: 'white', // 배경색을 흰색으로 설정합니다.\r\n    width: '800px',\r\n  },\r\n  input: {\r\n    padding: '10px',\r\n    margin: '5px 0',\r\n    borderRadius: '6px',\r\n    border: '1px solid #ccc',\r\n    outline: 'none',\r\n    width: '300px',\r\n  },\r\n  submitButton: {\r\n    padding: '10px 20px',\r\n    cursor: 'pointer',\r\n    backgroundColor: '#0575E6',\r\n    border: 'none',\r\n    borderRadius: '8px',\r\n    color: 'white',\r\n  },\r\n}\r\n\r\n\r\nexport default NoticeRegisterationForm;\r\n","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Admin\\AdminNoticeListItem.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\OrderItem.js",["473","474","475"],[],"import React, { useState, useEffect } from 'react';\r\nimport './OrderModal.css';\r\nimport { useUser } from '../Auth/UserContext';\r\n\r\nfunction OrderItem({ key, menu, orderMenu, update }) {\r\n  // console.log(menu)\r\n  const [localItem, setLocalItem] = useState(menu);\r\n\r\n  const handleNameChange = (e) => {\r\n    if (e.target.value >= 0) {\r\n      const newName = e.target.value;\r\n      setLocalItem({ ...localItem, count: newName });\r\n      update({ ...localItem, count: newName });\r\n      // update(localItem)\r\n      console.log('발동')\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className='order-item-box'>\r\n      \r\n      <div style={{overflow:'hidden'}}>\r\n        <img src='/images/fish1.jpg'/>\r\n      </div>\r\n\r\n      <div>\r\n        <p>{menu.menuName}</p>\r\n      </div>\r\n\r\n      <div>\r\n        <p>{menu.menuSize}</p>\r\n      </div>\r\n\r\n      <div>\r\n       <p>{menu.menuPrice}</p>\r\n      </div>\r\n\r\n      <div>\r\n        {/* <button onClick={()=>setCount(count + 1)}>+</button> */}\r\n        <input\r\n              type=\"number\"\r\n              name='count'\r\n              value={localItem.count}\r\n              onChange={handleNameChange}\r\n            />\r\n        {/* <button onClick={()=>setCount(count + 1)}>-</button> */}\r\n      </div>\r\n      \r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\n          \r\n\r\nexport default OrderItem;\r\n","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\OrderMenuList.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\StoreOrder.js",["476","477","478"],[],{"ruleId":"479","replacedBy":"480"},{"ruleId":"481","severity":1,"message":"482","line":1,"column":17,"nodeType":"483","messageId":"484","endLine":1,"endColumn":26},{"ruleId":"481","severity":1,"message":"485","line":1,"column":28,"nodeType":"483","messageId":"484","endLine":1,"endColumn":36},{"ruleId":"481","severity":1,"message":"486","line":2,"column":8,"nodeType":"483","messageId":"484","endLine":2,"endColumn":13},{"ruleId":"481","severity":1,"message":"487","line":2,"column":17,"nodeType":"483","messageId":"484","endLine":2,"endColumn":27},{"ruleId":"481","severity":1,"message":"488","line":22,"column":8,"nodeType":"483","messageId":"484","endLine":22,"endColumn":20},{"ruleId":"481","severity":1,"message":"489","line":30,"column":10,"nodeType":"483","messageId":"484","endLine":30,"endColumn":26},{"ruleId":"481","severity":1,"message":"490","line":41,"column":11,"nodeType":"483","messageId":"484","endLine":41,"endColumn":15},{"ruleId":"481","severity":1,"message":"491","line":41,"column":17,"nodeType":"483","messageId":"484","endLine":41,"endColumn":22},{"ruleId":"481","severity":1,"message":"487","line":12,"column":10,"nodeType":"483","messageId":"484","endLine":12,"endColumn":20},{"ruleId":"481","severity":1,"message":"485","line":13,"column":10,"nodeType":"483","messageId":"484","endLine":13,"endColumn":18},{"ruleId":"481","severity":1,"message":"492","line":13,"column":20,"nodeType":"483","messageId":"484","endLine":13,"endColumn":30},{"ruleId":"481","severity":1,"message":"493","line":14,"column":10,"nodeType":"483","messageId":"484","endLine":14,"endColumn":17},{"ruleId":"481","severity":1,"message":"494","line":15,"column":10,"nodeType":"483","messageId":"484","endLine":15,"endColumn":19},{"ruleId":"481","severity":1,"message":"486","line":16,"column":8,"nodeType":"483","messageId":"484","endLine":16,"endColumn":13},{"ruleId":"481","severity":1,"message":"486","line":3,"column":8,"nodeType":"483","messageId":"484","endLine":3,"endColumn":13},{"ruleId":"481","severity":1,"message":"494","line":4,"column":10,"nodeType":"483","messageId":"484","endLine":4,"endColumn":19},{"ruleId":"481","severity":1,"message":"495","line":31,"column":9,"nodeType":"483","messageId":"484","endLine":31,"endColumn":16},{"ruleId":"481","severity":1,"message":"486","line":2,"column":8,"nodeType":"483","messageId":"484","endLine":2,"endColumn":13},{"ruleId":"481","severity":1,"message":"482","line":1,"column":17,"nodeType":"483","messageId":"484","endLine":1,"endColumn":26},{"ruleId":"481","severity":1,"message":"485","line":1,"column":28,"nodeType":"483","messageId":"484","endLine":1,"endColumn":36},{"ruleId":"481","severity":1,"message":"486","line":2,"column":10,"nodeType":"483","messageId":"484","endLine":2,"endColumn":15},{"ruleId":"481","severity":1,"message":"487","line":2,"column":17,"nodeType":"483","messageId":"484","endLine":2,"endColumn":27},{"ruleId":"481","severity":1,"message":"493","line":5,"column":10,"nodeType":"483","messageId":"484","endLine":5,"endColumn":17},{"ruleId":"481","severity":1,"message":"496","line":6,"column":117,"nodeType":"483","messageId":"484","endLine":6,"endColumn":124},{"ruleId":"481","severity":1,"message":"486","line":2,"column":8,"nodeType":"483","messageId":"484","endLine":2,"endColumn":13},{"ruleId":"481","severity":1,"message":"497","line":5,"column":8,"nodeType":"483","messageId":"484","endLine":5,"endColumn":21},{"ruleId":"481","severity":1,"message":"498","line":7,"column":10,"nodeType":"483","messageId":"484","endLine":7,"endColumn":16},{"ruleId":"481","severity":1,"message":"499","line":7,"column":18,"nodeType":"483","messageId":"484","endLine":7,"endColumn":23},{"ruleId":"481","severity":1,"message":"500","line":8,"column":10,"nodeType":"483","messageId":"484","endLine":8,"endColumn":28},{"ruleId":"481","severity":1,"message":"501","line":8,"column":30,"nodeType":"483","messageId":"484","endLine":8,"endColumn":49},{"ruleId":"481","severity":1,"message":"502","line":9,"column":10,"nodeType":"483","messageId":"484","endLine":9,"endColumn":33},{"ruleId":"481","severity":1,"message":"503","line":14,"column":24,"nodeType":"483","messageId":"484","endLine":14,"endColumn":39},{"ruleId":"481","severity":1,"message":"504","line":15,"column":9,"nodeType":"483","messageId":"484","endLine":15,"endColumn":20},{"ruleId":"505","severity":1,"message":"506","line":56,"column":6,"nodeType":"507","endLine":56,"endColumn":8,"suggestions":"508"},{"ruleId":"481","severity":1,"message":"482","line":1,"column":16,"nodeType":"483","messageId":"484","endLine":1,"endColumn":25},{"ruleId":"481","severity":1,"message":"485","line":1,"column":27,"nodeType":"483","messageId":"484","endLine":1,"endColumn":35},{"ruleId":"481","severity":1,"message":"486","line":2,"column":8,"nodeType":"483","messageId":"484","endLine":2,"endColumn":13},{"ruleId":"509","severity":1,"message":"510","line":9,"column":7,"nodeType":"511","endLine":9,"endColumn":41},{"ruleId":"481","severity":1,"message":"486","line":3,"column":8,"nodeType":"483","messageId":"484","endLine":3,"endColumn":13},{"ruleId":"481","severity":1,"message":"486","line":2,"column":8,"nodeType":"483","messageId":"484","endLine":2,"endColumn":13},{"ruleId":"481","severity":1,"message":"512","line":4,"column":8,"nodeType":"483","messageId":"484","endLine":4,"endColumn":14},{"ruleId":"481","severity":1,"message":"513","line":5,"column":8,"nodeType":"483","messageId":"484","endLine":5,"endColumn":16},{"ruleId":"481","severity":1,"message":"514","line":7,"column":8,"nodeType":"483","messageId":"484","endLine":7,"endColumn":17},{"ruleId":"481","severity":1,"message":"498","line":8,"column":10,"nodeType":"483","messageId":"484","endLine":8,"endColumn":16},{"ruleId":"481","severity":1,"message":"499","line":8,"column":18,"nodeType":"483","messageId":"484","endLine":8,"endColumn":23},{"ruleId":"481","severity":1,"message":"494","line":9,"column":10,"nodeType":"483","messageId":"484","endLine":9,"endColumn":19},{"ruleId":"481","severity":1,"message":"515","line":9,"column":54,"nodeType":"483","messageId":"484","endLine":9,"endColumn":68},{"ruleId":"481","severity":1,"message":"516","line":9,"column":70,"nodeType":"483","messageId":"484","endLine":9,"endColumn":84},{"ruleId":"481","severity":1,"message":"517","line":11,"column":8,"nodeType":"483","messageId":"484","endLine":11,"endColumn":17},{"ruleId":"505","severity":1,"message":"518","line":27,"column":6,"nodeType":"507","endLine":27,"endColumn":8,"suggestions":"519"},{"ruleId":"505","severity":1,"message":"520","line":56,"column":6,"nodeType":"507","endLine":56,"endColumn":30,"suggestions":"521"},{"ruleId":"481","severity":1,"message":"522","line":10,"column":10,"nodeType":"483","messageId":"484","endLine":10,"endColumn":18},{"ruleId":"481","severity":1,"message":"493","line":12,"column":10,"nodeType":"483","messageId":"484","endLine":12,"endColumn":17},{"ruleId":"505","severity":1,"message":"523","line":51,"column":6,"nodeType":"507","endLine":51,"endColumn":8,"suggestions":"524"},{"ruleId":"481","severity":1,"message":"525","line":3,"column":10,"nodeType":"483","messageId":"484","endLine":3,"endColumn":14},{"ruleId":"481","severity":1,"message":"526","line":3,"column":16,"nodeType":"483","messageId":"484","endLine":3,"endColumn":20},{"ruleId":"481","severity":1,"message":"527","line":3,"column":22,"nodeType":"483","messageId":"484","endLine":3,"endColumn":28},{"ruleId":"481","severity":1,"message":"528","line":4,"column":10,"nodeType":"483","messageId":"484","endLine":4,"endColumn":14},{"ruleId":"481","severity":1,"message":"529","line":4,"column":16,"nodeType":"483","messageId":"484","endLine":4,"endColumn":27},{"ruleId":"481","severity":1,"message":"486","line":5,"column":8,"nodeType":"483","messageId":"484","endLine":5,"endColumn":13},{"ruleId":"481","severity":1,"message":"491","line":100,"column":17,"nodeType":"483","messageId":"484","endLine":100,"endColumn":22},{"ruleId":"481","severity":1,"message":"530","line":100,"column":24,"nodeType":"483","messageId":"484","endLine":100,"endColumn":30},{"ruleId":"481","severity":1,"message":"531","line":101,"column":10,"nodeType":"483","messageId":"484","endLine":101,"endColumn":19},{"ruleId":"481","severity":1,"message":"532","line":105,"column":10,"nodeType":"483","messageId":"484","endLine":105,"endColumn":15},{"ruleId":"481","severity":1,"message":"533","line":3,"column":10,"nodeType":"483","messageId":"484","endLine":3,"endColumn":35},{"ruleId":"481","severity":1,"message":"529","line":5,"column":10,"nodeType":"483","messageId":"484","endLine":5,"endColumn":21},{"ruleId":"481","severity":1,"message":"534","line":5,"column":23,"nodeType":"483","messageId":"484","endLine":5,"endColumn":32},{"ruleId":"481","severity":1,"message":"485","line":1,"column":17,"nodeType":"483","messageId":"484","endLine":1,"endColumn":25},{"ruleId":"535","severity":1,"message":"536","line":125,"column":5,"nodeType":"537","messageId":"538","endLine":125,"endColumn":15},{"ruleId":"481","severity":1,"message":"486","line":3,"column":8,"nodeType":"483","messageId":"484","endLine":3,"endColumn":13},{"ruleId":"481","severity":1,"message":"487","line":3,"column":17,"nodeType":"483","messageId":"484","endLine":3,"endColumn":27},{"ruleId":"481","severity":1,"message":"494","line":4,"column":10,"nodeType":"483","messageId":"484","endLine":4,"endColumn":19},{"ruleId":"481","severity":1,"message":"539","line":2,"column":10,"nodeType":"483","messageId":"484","endLine":2,"endColumn":14},{"ruleId":"481","severity":1,"message":"540","line":3,"column":10,"nodeType":"483","messageId":"484","endLine":3,"endColumn":18},{"ruleId":"481","severity":1,"message":"489","line":6,"column":10,"nodeType":"483","messageId":"484","endLine":6,"endColumn":26},{"ruleId":"481","severity":1,"message":"541","line":10,"column":8,"nodeType":"483","messageId":"484","endLine":10,"endColumn":20},{"ruleId":"481","severity":1,"message":"542","line":13,"column":10,"nodeType":"483","messageId":"484","endLine":13,"endColumn":26},{"ruleId":"481","severity":1,"message":"543","line":53,"column":7,"nodeType":"483","messageId":"484","endLine":53,"endColumn":26},{"ruleId":"481","severity":1,"message":"544","line":79,"column":10,"nodeType":"483","messageId":"484","endLine":79,"endColumn":21},{"ruleId":"481","severity":1,"message":"545","line":79,"column":23,"nodeType":"483","messageId":"484","endLine":79,"endColumn":37},{"ruleId":"481","severity":1,"message":"546","line":80,"column":10,"nodeType":"483","messageId":"484","endLine":80,"endColumn":22},{"ruleId":"481","severity":1,"message":"547","line":87,"column":9,"nodeType":"483","messageId":"484","endLine":87,"endColumn":29},{"ruleId":"481","severity":1,"message":"548","line":262,"column":23,"nodeType":"483","messageId":"484","endLine":262,"endColumn":32},{"ruleId":"549","severity":1,"message":"550","line":361,"column":43,"nodeType":"551","messageId":"538","endLine":361,"endColumn":45},{"ruleId":"481","severity":1,"message":"552","line":34,"column":9,"nodeType":"483","messageId":"484","endLine":34,"endColumn":14},{"ruleId":"481","severity":1,"message":"553","line":37,"column":10,"nodeType":"483","messageId":"484","endLine":37,"endColumn":13},{"ruleId":"481","severity":1,"message":"554","line":94,"column":17,"nodeType":"483","messageId":"484","endLine":94,"endColumn":21},{"ruleId":"549","severity":1,"message":"550","line":123,"column":36,"nodeType":"551","messageId":"538","endLine":123,"endColumn":38},{"ruleId":"481","severity":1,"message":"482","line":1,"column":17,"nodeType":"483","messageId":"484","endLine":1,"endColumn":26},{"ruleId":"481","severity":1,"message":"486","line":2,"column":8,"nodeType":"483","messageId":"484","endLine":2,"endColumn":13},{"ruleId":"481","severity":1,"message":"555","line":6,"column":22,"nodeType":"483","messageId":"484","endLine":6,"endColumn":30},{"ruleId":"549","severity":1,"message":"556","line":26,"column":38,"nodeType":"551","messageId":"538","endLine":26,"endColumn":40},{"ruleId":"481","severity":1,"message":"557","line":42,"column":19,"nodeType":"483","messageId":"484","endLine":42,"endColumn":31},{"ruleId":"481","severity":1,"message":"558","line":44,"column":8,"nodeType":"483","messageId":"484","endLine":44,"endColumn":16},{"ruleId":"549","severity":1,"message":"556","line":47,"column":38,"nodeType":"551","messageId":"538","endLine":47,"endColumn":40},{"ruleId":"509","severity":1,"message":"510","line":53,"column":9,"nodeType":"511","endLine":53,"endColumn":147},{"ruleId":"509","severity":1,"message":"510","line":56,"column":65,"nodeType":"511","endLine":56,"endColumn":94},{"ruleId":"509","severity":1,"message":"510","line":57,"column":68,"nodeType":"511","endLine":57,"endColumn":97},{"ruleId":"509","severity":1,"message":"510","line":58,"column":66,"nodeType":"511","endLine":58,"endColumn":96},{"ruleId":"505","severity":1,"message":"559","line":146,"column":6,"nodeType":"507","endLine":146,"endColumn":31,"suggestions":"560"},{"ruleId":"505","severity":1,"message":"561","line":158,"column":6,"nodeType":"507","endLine":158,"endColumn":8,"suggestions":"562"},{"ruleId":"509","severity":1,"message":"510","line":170,"column":15,"nodeType":"511","endLine":170,"endColumn":154},{"ruleId":"509","severity":1,"message":"510","line":178,"column":19,"nodeType":"511","endLine":178,"endColumn":48},{"ruleId":"509","severity":1,"message":"510","line":182,"column":19,"nodeType":"511","endLine":182,"endColumn":48},{"ruleId":"509","severity":1,"message":"510","line":186,"column":19,"nodeType":"511","endLine":186,"endColumn":49},{"ruleId":"509","severity":1,"message":"510","line":196,"column":19,"nodeType":"511","endLine":196,"endColumn":227},{"ruleId":"509","severity":1,"message":"510","line":202,"column":27,"nodeType":"511","endLine":209,"endColumn":32},{"ruleId":"549","severity":1,"message":"550","line":217,"column":39,"nodeType":"551","messageId":"538","endLine":217,"endColumn":41},{"ruleId":"549","severity":1,"message":"550","line":223,"column":37,"nodeType":"551","messageId":"538","endLine":223,"endColumn":39},{"ruleId":"549","severity":1,"message":"550","line":276,"column":30,"nodeType":"551","messageId":"538","endLine":276,"endColumn":32},{"ruleId":"481","severity":1,"message":"563","line":334,"column":9,"nodeType":"483","messageId":"484","endLine":334,"endColumn":19},{"ruleId":"505","severity":1,"message":"564","line":359,"column":6,"nodeType":"507","endLine":359,"endColumn":8,"suggestions":"565"},{"ruleId":"509","severity":1,"message":"510","line":368,"column":15,"nodeType":"511","endLine":368,"endColumn":154},{"ruleId":"549","severity":1,"message":"550","line":374,"column":37,"nodeType":"551","messageId":"538","endLine":374,"endColumn":39},{"ruleId":"481","severity":1,"message":"482","line":1,"column":17,"nodeType":"483","messageId":"484","endLine":1,"endColumn":26},{"ruleId":"481","severity":1,"message":"485","line":1,"column":28,"nodeType":"483","messageId":"484","endLine":1,"endColumn":36},{"ruleId":"481","severity":1,"message":"486","line":2,"column":8,"nodeType":"483","messageId":"484","endLine":2,"endColumn":13},{"ruleId":"481","severity":1,"message":"486","line":2,"column":8,"nodeType":"483","messageId":"484","endLine":2,"endColumn":13},{"ruleId":"481","severity":1,"message":"489","line":5,"column":21,"nodeType":"483","messageId":"484","endLine":5,"endColumn":37},{"ruleId":"481","severity":1,"message":"566","line":8,"column":15,"nodeType":"483","messageId":"484","endLine":8,"endColumn":23},{"ruleId":"505","severity":1,"message":"567","line":15,"column":6,"nodeType":"507","endLine":15,"endColumn":8,"suggestions":"568"},{"ruleId":"509","severity":1,"message":"510","line":19,"column":7,"nodeType":"511","endLine":19,"endColumn":74},{"ruleId":"509","severity":1,"message":"510","line":28,"column":11,"nodeType":"511","endLine":28,"endColumn":80},{"ruleId":"509","severity":1,"message":"510","line":31,"column":11,"nodeType":"511","endLine":31,"endColumn":84},{"ruleId":"549","severity":1,"message":"550","line":32,"column":17,"nodeType":"551","messageId":"538","endLine":32,"endColumn":19},{"ruleId":"481","severity":1,"message":"486","line":2,"column":8,"nodeType":"483","messageId":"484","endLine":2,"endColumn":13},{"ruleId":"481","severity":1,"message":"569","line":12,"column":21,"nodeType":"483","messageId":"484","endLine":12,"endColumn":33},{"ruleId":"481","severity":1,"message":"532","line":13,"column":10,"nodeType":"483","messageId":"484","endLine":13,"endColumn":15},{"ruleId":"481","severity":1,"message":"512","line":72,"column":8,"nodeType":"483","messageId":"484","endLine":72,"endColumn":14},{"ruleId":"481","severity":1,"message":"482","line":1,"column":16,"nodeType":"483","messageId":"484","endLine":1,"endColumn":25},{"ruleId":"481","severity":1,"message":"486","line":2,"column":8,"nodeType":"483","messageId":"484","endLine":2,"endColumn":13},{"ruleId":"481","severity":1,"message":"570","line":3,"column":8,"nodeType":"483","messageId":"484","endLine":3,"endColumn":14},{"ruleId":"481","severity":1,"message":"571","line":1,"column":28,"nodeType":"483","messageId":"484","endLine":1,"endColumn":38},{"ruleId":"481","severity":1,"message":"572","line":5,"column":8,"nodeType":"483","messageId":"484","endLine":5,"endColumn":21},{"ruleId":"505","severity":1,"message":"573","line":17,"column":6,"nodeType":"507","endLine":17,"endColumn":8,"suggestions":"574"},{"ruleId":"509","severity":1,"message":"510","line":40,"column":9,"nodeType":"511","endLine":40,"endColumn":39},{"ruleId":"481","severity":1,"message":"482","line":1,"column":17,"nodeType":"483","messageId":"484","endLine":1,"endColumn":26},{"ruleId":"481","severity":1,"message":"485","line":1,"column":28,"nodeType":"483","messageId":"484","endLine":1,"endColumn":36},{"ruleId":"481","severity":1,"message":"486","line":2,"column":8,"nodeType":"483","messageId":"484","endLine":2,"endColumn":13},{"ruleId":"509","severity":1,"message":"510","line":22,"column":8,"nodeType":"511","endLine":22,"endColumn":39},{"ruleId":"481","severity":1,"message":"482","line":1,"column":16,"nodeType":"483","messageId":"484","endLine":1,"endColumn":25},{"ruleId":"481","severity":1,"message":"485","line":1,"column":27,"nodeType":"483","messageId":"484","endLine":1,"endColumn":35},{"ruleId":"481","severity":1,"message":"486","line":2,"column":8,"nodeType":"483","messageId":"484","endLine":2,"endColumn":13},{"ruleId":"481","severity":1,"message":"575","line":4,"column":16,"nodeType":"483","messageId":"484","endLine":4,"endColumn":23},{"ruleId":"481","severity":1,"message":"527","line":5,"column":8,"nodeType":"483","messageId":"484","endLine":5,"endColumn":14},{"ruleId":"481","severity":1,"message":"576","line":7,"column":8,"nodeType":"483","messageId":"484","endLine":7,"endColumn":19},{"ruleId":"481","severity":1,"message":"529","line":8,"column":10,"nodeType":"483","messageId":"484","endLine":8,"endColumn":21},{"ruleId":"481","severity":1,"message":"577","line":24,"column":36,"nodeType":"483","messageId":"484","endLine":24,"endColumn":47},{"ruleId":"481","severity":1,"message":"578","line":30,"column":32,"nodeType":"483","messageId":"484","endLine":30,"endColumn":41},{"ruleId":"509","severity":1,"message":"510","line":48,"column":9,"nodeType":"511","endLine":48,"endColumn":90},{"ruleId":"509","severity":1,"message":"510","line":52,"column":13,"nodeType":"511","endLine":52,"endColumn":80},{"ruleId":"509","severity":1,"message":"510","line":57,"column":9,"nodeType":"511","endLine":57,"endColumn":81},{"ruleId":"481","severity":1,"message":"482","line":1,"column":27,"nodeType":"483","messageId":"484","endLine":1,"endColumn":36},{"ruleId":"481","severity":1,"message":"486","line":2,"column":8,"nodeType":"483","messageId":"484","endLine":2,"endColumn":13},{"ruleId":"481","severity":1,"message":"579","line":6,"column":10,"nodeType":"483","messageId":"484","endLine":6,"endColumn":16},{"ruleId":"481","severity":1,"message":"580","line":54,"column":9,"nodeType":"483","messageId":"484","endLine":54,"endColumn":14},{"ruleId":"481","severity":1,"message":"512","line":4,"column":8,"nodeType":"483","messageId":"484","endLine":4,"endColumn":14},{"ruleId":"481","severity":1,"message":"513","line":5,"column":8,"nodeType":"483","messageId":"484","endLine":5,"endColumn":16},{"ruleId":"481","severity":1,"message":"514","line":7,"column":8,"nodeType":"483","messageId":"484","endLine":7,"endColumn":17},{"ruleId":"481","severity":1,"message":"498","line":8,"column":10,"nodeType":"483","messageId":"484","endLine":8,"endColumn":16},{"ruleId":"481","severity":1,"message":"499","line":8,"column":18,"nodeType":"483","messageId":"484","endLine":8,"endColumn":23},{"ruleId":"481","severity":1,"message":"581","line":8,"column":12,"nodeType":"483","messageId":"484","endLine":8,"endColumn":20},{"ruleId":"582","severity":1,"message":"583","line":120,"column":29,"nodeType":"584","messageId":"585","endLine":120,"endColumn":48},{"ruleId":"481","severity":1,"message":"539","line":3,"column":10,"nodeType":"483","messageId":"484","endLine":3,"endColumn":14},{"ruleId":"481","severity":1,"message":"498","line":5,"column":10,"nodeType":"483","messageId":"484","endLine":5,"endColumn":16},{"ruleId":"481","severity":1,"message":"499","line":5,"column":18,"nodeType":"483","messageId":"484","endLine":5,"endColumn":23},{"ruleId":"481","severity":1,"message":"482","line":1,"column":27,"nodeType":"483","messageId":"484","endLine":1,"endColumn":36},{"ruleId":"481","severity":1,"message":"586","line":6,"column":8,"nodeType":"483","messageId":"484","endLine":6,"endColumn":15},{"ruleId":"481","severity":1,"message":"487","line":7,"column":10,"nodeType":"483","messageId":"484","endLine":7,"endColumn":20},{"ruleId":"481","severity":1,"message":"490","line":12,"column":8,"nodeType":"483","messageId":"484","endLine":12,"endColumn":12},{"ruleId":"481","severity":1,"message":"491","line":12,"column":14,"nodeType":"483","messageId":"484","endLine":12,"endColumn":19},{"ruleId":"481","severity":1,"message":"530","line":12,"column":21,"nodeType":"483","messageId":"484","endLine":12,"endColumn":27},{"ruleId":"587","severity":1,"message":"588","line":68,"column":57,"nodeType":"589","messageId":"590","endLine":68,"endColumn":59},{"ruleId":"587","severity":1,"message":"588","line":104,"column":34,"nodeType":"589","messageId":"590","endLine":104,"endColumn":36},{"ruleId":"481","severity":1,"message":"498","line":5,"column":10,"nodeType":"483","messageId":"484","endLine":5,"endColumn":16},{"ruleId":"481","severity":1,"message":"499","line":5,"column":18,"nodeType":"483","messageId":"484","endLine":5,"endColumn":23},{"ruleId":"481","severity":1,"message":"486","line":3,"column":8,"nodeType":"483","messageId":"484","endLine":3,"endColumn":13},{"ruleId":"481","severity":1,"message":"482","line":1,"column":27,"nodeType":"483","messageId":"484","endLine":1,"endColumn":36},{"ruleId":"481","severity":1,"message":"493","line":3,"column":10,"nodeType":"483","messageId":"484","endLine":3,"endColumn":17},{"ruleId":"509","severity":1,"message":"510","line":25,"column":9,"nodeType":"511","endLine":25,"endColumn":39},{"ruleId":"481","severity":1,"message":"571","line":1,"column":28,"nodeType":"483","messageId":"484","endLine":1,"endColumn":38},{"ruleId":"505","severity":1,"message":"573","line":17,"column":6,"nodeType":"507","endLine":17,"endColumn":8,"suggestions":"591"},{"ruleId":"509","severity":1,"message":"510","line":37,"column":9,"nodeType":"511","endLine":37,"endColumn":39},"no-new-object",["592"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'axios' is defined but never used.","'formToJSON' is defined but never used.","'UserProvider' is defined but never used.","'sendAxiosRequest' is defined but never used.","'user' is assigned a value but never used.","'login' is assigned a value but never used.","'useContext' is defined but never used.","'useUser' is defined but never used.","'isOpenNow' is defined but never used.","'useForm' is assigned a value but never used.","'mainUrl' is defined but never used.","'StoreListItem' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'accessTokenRefresh' is defined but never used.","'refreshTokenInvalid' is defined but never used.","'accordionSummaryClasses' is defined but never used.","'setPageRowCount' is assigned a value but never used.","'accessToken' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pageRowCount'. Either include it or remove the dependency array.","ArrayExpression",["593"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Coupon' is defined but never used.","'Category' is defined but never used.","'StoreHome' is defined but never used.","'getAccessToken' is defined but never used.","'isTokenExpired' is defined but never used.","'jwtDecode' is defined but never used.","React Hook useEffect has missing dependencies: 'accessToken' and 'newAddLength'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setStartPageNo' needs the current value of 'newAddLength'.",["594"],"React Hook useEffect has missing dependencies: 'accessToken' and 'newAddLength'. Either include them or remove the dependency array.",["595"],"'MenuItem' is defined but never used.","React Hook useEffect has missing dependencies: 'menuData' and 'store'. Either include them or remove the dependency array.",["596"],"'Form' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","'json' is defined but never used.","'useNavigate' is defined but never used.","'logout' is assigned a value but never used.","'loginUser' is assigned a value but never used.","'store' is assigned a value but never used.","'sendAxiosMultipartRequest' is defined but never used.","'useParams' is defined but never used.","no-dupe-keys","Duplicate key 'transition'.","ObjectExpression","unexpected","'Link' is defined but never used.","'Carousel' is defined but never used.","'Handsontable' is defined but never used.","'registerRenderer' is defined but never used.","'recommendationItems' is assigned a value but never used.","'summaryData' is assigned a value but never used.","'setSummaryData' is assigned a value but never used.","'averagePrice' is assigned a value but never used.","'handsontableInstance' is assigned a value but never used.","'cellWidth' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'payNo' is assigned a value but never used.","'pay' is assigned a value but never used.","'data' is assigned a value but never used.","'setState' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'setLoginUser' is assigned a value but never used.","'memberNo' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'newAddLength'. Either include it or remove the dependency array.",["597"],"React Hook useEffect has a missing dependency: 'newAddLength'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setStartPageNo' needs the current value of 'newAddLength'.",["598"],"'pageRowCnt' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.reviewNo'. Either include it or remove the dependency array.",["599"],"'setStore' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'store'. Either include it or remove the dependency array.",["600"],"'setMenuItems' is assigned a value but never used.","'styles' is defined but never used.","'useReducer' is defined but never used.","'OrderMenuList' is defined but never used.","React Hook useEffect has a missing dependency: 'orders'. Either include it or remove the dependency array.",["601"],"'NavLink' is defined but never used.","'Placeholder' is defined but never used.","'startSecond' is assigned a value but never used.","'endSecond' is assigned a value but never used.","'Hidden' is defined but never used.","'codes' is assigned a value but never used.","'response' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Payment' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["602"],"no-object-constructor",{"desc":"603","fix":"604"},{"desc":"605","fix":"606"},{"desc":"607","fix":"608"},{"desc":"609","fix":"610"},{"desc":"611","fix":"612"},{"desc":"613","fix":"614"},{"desc":"615","fix":"616"},{"desc":"617","fix":"618"},{"desc":"619","fix":"620"},{"desc":"619","fix":"621"},"Update the dependencies array to be: [pageRowCount]",{"range":"622","text":"623"},"Update the dependencies array to be: [accessToken, newAddLength]",{"range":"624","text":"625"},"Update the dependencies array to be: [accessToken, newAddLength, startPageNo, storeList]",{"range":"626","text":"627"},"Update the dependencies array to be: [menuData, store]",{"range":"628","text":"629"},"Update the dependencies array to be: [startPageNo, reviewList, newAddLength]",{"range":"630","text":"631"},"Update the dependencies array to be: [newAddLength]",{"range":"632","text":"633"},"Update the dependencies array to be: [props.reviewNo]",{"range":"634","text":"635"},"Update the dependencies array to be: [store]",{"range":"636","text":"637"},"Update the dependencies array to be: [orders]",{"range":"638","text":"639"},{"range":"640","text":"639"},[2120,2122],"[pageRowCount]",[1191,1193],"[accessToken, newAddLength]",[2232,2256],"[accessToken, newAddLength, startPageNo, storeList]",[1619,1621],"[menuData, store]",[6376,6401],"[startPageNo, reviewList, newAddLength]",[6837,6839],"[newAddLength]",[15960,15962],"[props.reviewNo]",[551,553],"[store]",[486,488],"[orders]",[444,446]]
\ No newline at end of file
