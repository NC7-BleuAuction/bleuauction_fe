{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\think\\\\git\\\\bleuauction_fe\\\\src\\\\components\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport '../Test.css';\nimport { useState, useEffect } from 'react';\n\n// class Test extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       response: '',\n//       loading: true, // 로딩 상태\n//     };\n//   }\n\n//   componentDidMount() {\n//     // `/api/test` 엔드포인트로 GET 요청\n//     axios.get('/api/test')\n//       .then((response) => {\n//         this.setState({ response: response.data, loading: false }); // 로딩 상태를 false로 변경\n//       })\n//       .catch((error) => {\n//         console.error('Error fetching data:', error);\n//         this.setState({ loading: false }); // 에러 발생 시 로딩 상태를 false로 변경\n//       });\n//   }\n\n//   render() {\n//     const { response, loading } = this.state;\n\n//     return (\n//       <div className=\"test-container\">\n//         <h1>Test API</h1>\n//         {loading ? (\n//           <p>Loading...</p> // 로딩\n//         ) : (\n//           <div className=\"response-container\">\n//             <p>API Response:</p>\n//             <p className=\"response-text\">{response}</p>\n//             <p>짜잔! 성공적으로 값을 가져왔습니다.</p>\n//           </div>\n//         )}\n//       </div>\n//     );\n//   }\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Test() {\n  _s();\n  const [test, setTest] = useState({\n    response: '',\n    loading: true\n  });\n  useEffect(() => {\n    axios.get('/api/test').then(response => setTest(response.data)).catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"test-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Test API\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), test.loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this) // 로딩\n    : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"response-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"API Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"response-text\",\n        children: test.response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC9DC\\uC794! \\uC131\\uACF5\\uC801\\uC73C\\uB85C \\uAC12\\uC744 \\uAC00\\uC838\\uC654\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Test, \"svgNjjH+qV0kyfUyHfzBmheJQ4c=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","Component","axios","useState","useEffect","jsxDEV","_jsxDEV","Test","_s","test","setTest","response","loading","get","then","data","catch","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/think/git/bleuauction_fe/src/components/Test.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport '../Test.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\n// class Test extends Component {\r\n//   constructor() {\r\n//     super();\r\n//     this.state = {\r\n//       response: '',\r\n//       loading: true, // 로딩 상태\r\n//     };\r\n//   }\r\n\r\n  \r\n\r\n//   componentDidMount() {\r\n//     // `/api/test` 엔드포인트로 GET 요청\r\n//     axios.get('/api/test')\r\n//       .then((response) => {\r\n//         this.setState({ response: response.data, loading: false }); // 로딩 상태를 false로 변경\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error('Error fetching data:', error);\r\n//         this.setState({ loading: false }); // 에러 발생 시 로딩 상태를 false로 변경\r\n//       });\r\n//   }\r\n\r\n//   render() {\r\n//     const { response, loading } = this.state;\r\n\r\n//     return (\r\n//       <div className=\"test-container\">\r\n//         <h1>Test API</h1>\r\n//         {loading ? (\r\n//           <p>Loading...</p> // 로딩\r\n//         ) : (\r\n//           <div className=\"response-container\">\r\n//             <p>API Response:</p>\r\n//             <p className=\"response-text\">{response}</p>\r\n//             <p>짜잔! 성공적으로 값을 가져왔습니다.</p>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\nfunction Test() {\r\n  const [test, setTest] = useState({response: '', loading: true});\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/test')\r\n      .then(response => setTest(response.data))\r\n      .catch(error => console.log(error));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"test-container\">\r\n        <h1>Test API</h1>\r\n        {test.loading ? (\r\n          <p>Loading...</p> // 로딩\r\n        ) : (\r\n          <div className=\"response-container\">\r\n            <p>API Response:</p>\r\n            <p className=\"response-text\">{test.response}</p>\r\n            <p>짜잔! 성공적으로 값을 가져왔습니다.</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Test;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC;IAACQ,QAAQ,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAI,CAAC,CAAC;EAE/DR,SAAS,CAAC,MAAM;IACdF,KAAK,CAACW,GAAG,CAAC,WAAW,CAAC,CACnBC,IAAI,CAACH,QAAQ,IAAID,OAAO,CAACC,QAAQ,CAACI,IAAI,CAAC,CAAC,CACxCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKc,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3Bf,OAAA;MAAAe,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBhB,IAAI,CAACG,OAAO,gBACXN,OAAA;MAAAe,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC;IAAA,eAElBnB,OAAA;MAAKc,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjCf,OAAA;QAAAe,QAAA,EAAG;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACpBnB,OAAA;QAAGc,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEZ,IAAI,CAACE;MAAQ;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChDnB,OAAA;QAAAe,QAAA,EAAG;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEZ;AAACjB,EAAA,CAvBQD,IAAI;AAAAmB,EAAA,GAAJnB,IAAI;AA2Bb,eAAeA,IAAI;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}