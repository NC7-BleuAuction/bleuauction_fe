[{"/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/MyPage/MyPage.js":"1","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Common/Header.js":"2","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/utility/common.js":"3","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/index.js":"4","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/App.js":"5","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/reportWebVitals.js":"6","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Auth/UserContext.js":"7","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Auth/RegisterPage.js":"8","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Auth/LoginPage.js":"9","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Test/Test.js":"10","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Common/SideBar.js":"11","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Common/Footer.js":"12","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/MyPage/UserEditPage.js":"13","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/MyPage/StoreRegisterPage.js":"14","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Menu/MenuList.js":"15","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/MyPage/OrderMenuList.js":"16","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/MyPage/StoreItemRegister.js":"17","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/MyPage/MyOrder.js":"18","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Menu/MenuRegisterationForm.js":"19","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Market/MarketDetailPage.js":"20","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Market/StoreList.js":"21","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/MyPage/StoreOrder.js":"22","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Review/ReviewForm.js":"23","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/StoreItemDailyPrice/StoreItemAdd.js":"24","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Notice/NoticeDetail.js":"25","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Notice/NoticeList.js":"26","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/StoreItemDailyPrice/StoreItemDailyPrice.js":"27","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/routes/Home.js":"28","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Admin/NoticeRegisterationForm.js":"29","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Test/test2.jsx":"30","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Admin/AdminNoticeList.js":"31","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Admin/AdminNoticeDetail.js":"32","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Pay/Pay.js":"33","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/MyPage/InputField.js":"34","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/MyPage/MyOrderContent.js":"35","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/StoreHome.js":"36","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Market/StoreInfo.js":"37","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Review/ReviewSection.js":"38","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Market/TabBar.js":"39","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Market/OrderModal.js":"40","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Market/StoreListItem.js":"41","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Notice/NoticeListItem.js":"42","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Chat/Chat.js":"43","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Admin/AdminNoticeListItem.js":"44","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/MainPage/Button.js":"45","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/MainPage/Announce.js":"46","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/MainPage/Category.js":"47","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/StoreHomeItem.js":"48","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Review/ReviewList.js":"49","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Coupon/Coupon.js":"50","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/OS/OS.js":"51"},{"size":4567,"mtime":1698124312758,"results":"52","hashOfConfig":"53"},{"size":3281,"mtime":1698124048719,"results":"54","hashOfConfig":"53"},{"size":6332,"mtime":1698124031925,"results":"55","hashOfConfig":"53"},{"size":635,"mtime":1697681174274,"results":"56","hashOfConfig":"53"},{"size":5524,"mtime":1698123979247,"results":"57","hashOfConfig":"53"},{"size":362,"mtime":1697078211568,"results":"58","hashOfConfig":"53"},{"size":1568,"mtime":1697681174264,"results":"59","hashOfConfig":"53"},{"size":6458,"mtime":1697699902193,"results":"60","hashOfConfig":"53"},{"size":5249,"mtime":1698123872926,"results":"61","hashOfConfig":"53"},{"size":1072,"mtime":1696936416356,"results":"62","hashOfConfig":"53"},{"size":1616,"mtime":1698123884027,"results":"63","hashOfConfig":"53"},{"size":272,"mtime":1697195947142,"results":"64","hashOfConfig":"53"},{"size":6283,"mtime":1698044621373,"results":"65","hashOfConfig":"53"},{"size":6914,"mtime":1697873427080,"results":"66","hashOfConfig":"53"},{"size":1031,"mtime":1697873427079,"results":"67","hashOfConfig":"53"},{"size":2944,"mtime":1698044621368,"results":"68","hashOfConfig":"53"},{"size":8402,"mtime":1698123884028,"results":"69","hashOfConfig":"53"},{"size":2250,"mtime":1697681174268,"results":"70","hashOfConfig":"53"},{"size":3833,"mtime":1697873427080,"results":"71","hashOfConfig":"53"},{"size":2757,"mtime":1697873427077,"results":"72","hashOfConfig":"53"},{"size":2548,"mtime":1698044621365,"results":"73","hashOfConfig":"53"},{"size":1850,"mtime":1698044621368,"results":"74","hashOfConfig":"53"},{"size":19672,"mtime":1697699902196,"results":"75","hashOfConfig":"53"},{"size":4608,"mtime":1697873427081,"results":"76","hashOfConfig":"53"},{"size":1038,"mtime":1697689786586,"results":"77","hashOfConfig":"53"},{"size":663,"mtime":1697690204899,"results":"78","hashOfConfig":"53"},{"size":9509,"mtime":1698123884029,"results":"79","hashOfConfig":"53"},{"size":2422,"mtime":1698124059286,"results":"80","hashOfConfig":"53"},{"size":2562,"mtime":1697873427076,"results":"81","hashOfConfig":"53"},{"size":449,"mtime":1696934757677,"results":"82","hashOfConfig":"53"},{"size":699,"mtime":1697873427075,"results":"83","hashOfConfig":"53"},{"size":2476,"mtime":1697873427075,"results":"84","hashOfConfig":"53"},{"size":4330,"mtime":1697700087957,"results":"85","hashOfConfig":"53"},{"size":362,"mtime":1698044621366,"results":"86","hashOfConfig":"53"},{"size":2250,"mtime":1698044621367,"results":"87","hashOfConfig":"53"},{"size":460,"mtime":1698123872929,"results":"88","hashOfConfig":"53"},{"size":3689,"mtime":1697873427078,"results":"89","hashOfConfig":"53"},{"size":726,"mtime":1697077823192,"results":"90","hashOfConfig":"53"},{"size":1332,"mtime":1697078216073,"results":"91","hashOfConfig":"53"},{"size":6502,"mtime":1697873427078,"results":"92","hashOfConfig":"53"},{"size":1609,"mtime":1698044621365,"results":"93","hashOfConfig":"53"},{"size":1390,"mtime":1697689786588,"results":"94","hashOfConfig":"53"},{"size":6287,"mtime":1697690255740,"results":"95","hashOfConfig":"53"},{"size":2470,"mtime":1697873427075,"results":"96","hashOfConfig":"53"},{"size":413,"mtime":1697077827734,"results":"97","hashOfConfig":"53"},{"size":1590,"mtime":1698129921561,"results":"98","hashOfConfig":"53"},{"size":617,"mtime":1697078199720,"results":"99","hashOfConfig":"53"},{"size":2350,"mtime":1697681174272,"results":"100","hashOfConfig":"53"},{"size":1270,"mtime":1697077822365,"results":"101","hashOfConfig":"53"},{"size":1403,"mtime":1697078200690,"results":"102","hashOfConfig":"53"},{"size":2161,"mtime":1698045683937,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"108"},"v9ekii",{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"108"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"108"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"108"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"108"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"108"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"108"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"108"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"108"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"108"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"108"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"108"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"108"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"108"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"108"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"108"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"108"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"108"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"108"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"108"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"108"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"108"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"108"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"108"},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"108"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"108"},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"108"},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"108"},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"108"},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"108"},{"filePath":"277","messages":"278","suppressedMessages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"108"},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"287","messages":"288","suppressedMessages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/MyPage/MyPage.js",["290","291","292","293","294","295"],[],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios, { formToJSON } from 'axios';\nimport { isOpenNow, sendAxiosRequest, isTokenExpired } from '../utility/common';\nimport jwtDecode from 'jwt-decode';\n\nfunction MyPage() {\n  const defaultImage = '/images/rose.png';\n\n  const accessToken = sessionStorage.getItem('accessToken');\n  const tokenMember = isTokenExpired(accessToken) ? null : jwtDecode(accessToken);\n\n\n  const outerContainerStyle = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    margin: '0',\n  };\n\n  const styles = {\n    container: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center', // 가운데 정렬 추가\n      padding: '20px',\n      width: '70%',\n      height: '30vh', // 화면 높이의 100%를 차지하도록 설정\n    },\n    profileSection: {\n      display: 'flex',\n      alignItems: 'center',\n      marginBottom: '20px',\n      width: '100%', //\n    },\n    profilePicture: {\n      width: '110px',\n      height: '110px',\n      borderRadius: '80px',\n      marginRight: '20px', // 사진과 텍스트 사이의 간격을 조정\n    },\n    userInfo: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-start', // 왼쪽 정렬\n    },\n    linkSection: {\n      display: 'flex',\n      flexDirection: 'column',\n      width: '100%',\n    },\n    linkContainer: {\n      margin: '20px 0',\n      padding: '20px',\n      borderRadius: '4px',\n      backgroundColor: '#ffffff',\n      textAlign: 'center',\n      boxShadow: '0px 0px 15px rgba(0, 0, 0, 0.2)',\n    },\n    link: {\n      textDecoration: 'none',\n      color: 'black',\n      fontWeight: 'bold',\n    },\n    button: {\n      display: 'inline-block',\n      padding: '10px 20px',\n      margin: '5px 0',\n      backgroundColor: '#4CAF50',\n      color: 'white',\n      textDecoration: 'none',\n      textAlign: 'center',\n      borderRadius: '8px',\n    },\n  };\n  const personalLinks = (\n    <>\n      <div style={styles.linkContainer}>\n        <Link to=\"/useredit\" style={styles.link}>회원정보 수정</Link>\n      </div>\n      <div style={styles.linkContainer}>\n        <Link to=\"/my-orders\" style={styles.link}>마이 오더</Link>\n      </div>\n      <div style={styles.linkContainer}>\n        <Link to=\"/\" style={styles.link}>찜하기</Link>\n      </div>\n    </>\n  );\n\n  // 비즈니스 사용자용 링크\n  const businessLinks = (\n    <>\n      <div style={styles.linkContainer}>\n        <Link to=\"/useredit\" style={styles.link}>회원정보 수정</Link>\n      </div>\n      <div style={styles.linkContainer}>\n        <Link to=\"/storeItemRegister\" style={styles.link}>등록상품관리</Link>\n      </div>\n      <div style={styles.linkContainer}>\n        <Link to=\"/order-confirmation\" style={styles.link}>주문확인</Link>\n      </div>\n      <div style={styles.linkContainer}>\n        <Link to=\"/storeRegister\" style={styles.link}>가게등록</Link>\n      </div>\n    </>\n  );\n\n  // 관리자 사용자용 링크\n  const adminLinks = (\n    <>\n      <div style={styles.linkContainer}>\n        <Link to=\"/admin/notice/list\" style={styles.link}>공지사항 관리</Link>\n      </div>\n\n    </>\n  );\n\n  if (tokenMember === null) {\n  return <div>권한없음...</div>; // 로딩 표시\n  } else {\n    return (\n      <div style={outerContainerStyle}>\n        <div style={styles.container}>\n          <div style={styles.profileSection}>\n            <img src={defaultImage} alt={tokenMember.memberName} style={styles.profilePicture} />\n            <div style={styles.userInfo}>\n              <h2>{tokenMember.memberName}</h2>\n              <p> {tokenMember.memberCategory === 'M' ? '개인' :\n                  tokenMember.memberCategory === 'S' ? '비즈니스' :\n                      tokenMember.memberCategory === 'A' ? '관리자' : '기타'}\n                계정</p>\n              <p>{tokenMember.memberEmail}</p>\n            </div>\n          </div>\n\n          <div style={styles.linkSection}>\n            {/* member.memberCategory 값에 따라 링크 섹션을 조건부로 렌더링합니다. */}\n            {/* member.memberCategory 값에 따라 링크 섹션을 조건부로 렌더링합니다. */}\n            {tokenMember.memberCategory === 'M' ? personalLinks :\n                tokenMember.memberCategory === 'S' ? businessLinks :\n                    tokenMember.memberCategory === 'A' ? adminLinks : undefined}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default MyPage;",["296"],"/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Common/Header.js",["297","298","299","300","301","302","303"],[],"import React, { useEffect, useState } from 'react';\nimport { axios, formToJSON } from 'axios';\nimport styles from './Header.module.css';\nimport { Link } from 'react-router-dom';\nimport { useUser } from '../Auth/UserContext';\nimport { refreshTokenInvalid, getAccessToken, getLoginUserInfo, logout, accessTokenRefresh, isNullUndefinedOrEmpty, mainUrl, isTokenExpired } from '../utility/common';\nimport jwtDecode from 'jwt-decode';\n\n\nfunction Header() {\n  const accessToken = sessionStorage.getItem('accessToken');\n  const refreshToken = localStorage.getItem('refreshToken');\n  const decodedAccToken = isTokenExpired(accessToken) ? null : jwtDecode(accessToken);\n  const decodedRefToken = isTokenExpired(refreshToken) ? null : jwtDecode(refreshToken);\n  const currentURL = window.location.href;\n  const [tokenMember, setTokenMember] = useState(null);\n\n  // console.log('Header.js => accessToken 디코딩값 : ', decodedAccToken);\n  // console.log('Header.js => refreshToken 디코딩값 : ', decodedRefToken);\n  // console.log('(currentURL.replace(mainUrl)', currentURL.replace(mainUrl, ''));\n\n  let loginInit\n\n\n  useEffect(() => {\n    if (isNullUndefinedOrEmpty(accessToken)) { // 로그인 중이면\n\n      if (!decodedAccToken && decodedRefToken) { // accessToken은 유효하지 않으면서 refreshToken이 유효한 경우\n        console.log('Header.js => 엑세스 토큰 만료에 따른 재발급!');\n        if (currentURL.replace(mainUrl, '') !== '/') {\n          console.log('accessTokenRefresh(): ', accessTokenRefresh()); // accessToken 재발급\n        }\n      } else if (!decodedAccToken && !decodedRefToken) { // 둘다 유효하지 않은 경우\n        console.log('Header.js => accessToken (X) && refreshToken (X)');\n        if (currentURL.replace(mainUrl, '') !== '/') {\n          refreshTokenInvalid();\n        }\n      } else { // 둘다 유효하거나 accessToken만 유효한 경우\n        console.log('Header.js => accessToken만 유효 OR accessToken과 refreshToken 모두 유효');\n        setTokenMember(decodedAccToken);\n      }\n    }\n  }, []);\n\n  return (\n    <>\n      <div className={styles.headerBox}>\n        <div className={styles.headerTop}>\n          <Link to=\"/\" id={styles.headerTitle}>BLEU AUCTION</Link>\n          <form className={styles.headerSearchForm}>\n            <input className={styles.headerSearchBox} type='text' placeholder='검색어를 입력하세요.'></input>\n            <button id={styles.searchBtn} type=\"submit\"></button>\n          </form>\n          {isNullUndefinedOrEmpty(tokenMember) ? (\n            <>\n              <Link to='/mypage'>{tokenMember.memberName}님 환영합니다!</Link>\n              <Link onClick={logout}>로그아웃</Link>\n            </>\n          ) : (\n            <>\n              <Link to='/login'>로그인</Link>\n              <Link to='/register'>회원가입</Link>\n            </>\n          )}\n        </div>\n\n\n        <div className={styles.headerBottom}>\n          <Link to='/'>추천</Link>\n          <Link to='/store/list'>시장</Link>\n          <Link to='/StoreItemDailyPrice'>시세</Link>\n          <Link to='/notice/list'>공지사항</Link>\n        </div>\n        <hr></hr>\n      </div>\n      <div className={styles.hidden_block}></div>\n    </>\n  )\n}\n\nexport default Header;","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/utility/common.js",[],[],"/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/index.js",[],[],"/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/App.js",["304","305","306","307","308","309","310","311"],[],"import React, { useEffect, useState } from 'react';\nimport axios, { formToJSON } from 'axios';\nimport './App.css';\nimport Header from './components/Common/Header';\nimport Footer from './components/Common/Footer';\nimport Home from './routes/Home';\nimport SideBar from './components/Common/SideBar';\nimport { BrowserRouter as Router, Route, Routes, useLocation } from 'react-router-dom';\nimport Test from './components/Test/Test';\nimport Test2 from './components/Test/test2';\nimport LoginPage from './components/Auth/LoginPage';\nimport RegisterPage from './components/Auth/RegisterPage';\nimport MenuList from './components/Menu/MenuList';\nimport MenuRegisterationForm from './components/Menu/MenuRegisterationForm';\nimport StoreList from './components/Market/StoreList';\nimport MarketDetailPage from './components/Market/MarketDetailPage';\nimport ReviewForm from './components/Review/ReviewForm';\nimport MyPage from './components/MyPage/MyPage';\nimport UserEditPage from './components/MyPage/UserEditPage';\nimport MyOrder from './components/MyPage/MyOrder';\nimport StoreItemDailyPrice from './components/StoreItemDailyPrice/StoreItemDailyPrice';\nimport UserProvider from './components/Auth/UserContext';\nimport StoreItemRegister from './components/MyPage/StoreItemRegister'\nimport Payment from './components/Pay/Pay';\nimport StoreRegisterPage from './components/MyPage/StoreRegisterPage';\nimport NoticeList from './components/Notice/NoticeList';\nimport NoticeDetail from './components/Notice/NoticeDetail';\nimport { useUser } from './components/Auth/UserContext';\nimport StoreMyPage from './components/MyPage/StoreItemRegister'; // StoreMyPage 컴포넌트 파일의 경로에 따라 수정\nimport { sendAxiosRequest } from './components/utility/common';\nimport StoreItemAdd from  './components/StoreItemDailyPrice/StoreItemAdd';\nimport NoticeRegisterationForm from  './components/Admin/NoticeRegisterationForm';\nimport AdminNoticeList from  './components/Admin/AdminNoticeList';\nimport AdminNoticeDetail from  './components/Admin/AdminNoticeDetail';\nimport OrderMenuList from './components/MyPage/OrderMenuList';\nimport StoreOrder from './components/MyPage/StoreOrder';\n\n\nfunction App() {\n\n  const { user, login } = useUser();\n\n\n  // useEffect(() => {\n  // if (localStorage.getItem('memberEmail') !== null) {\n  // const saveUser = {\n  //   'memberEmail': localStorage.getItem('memberEmail'),\n  //   'memberPwd': localStorage.getItem('memberPwd')\n  // };\n\n  //   if (saveUser !== null) {\n  //     sendAxiosRequest(\"/api/member/login\", 'POST', formToJSON(saveUser), response => {\n  //       //   //   console.log(response.data);\n  //       console.log(localStorage.getItem('memberEmail'));\n  //       console.log(localStorage.getItem('memberPwd'));\n  //       // if (response.data.loginUser !== null) {\n  //         login(response.data.loginUser)\n  //       // }\n  //       // login(saveUser);\n  //       //     login(localStorage.getItem('data'));\n  //       //     // console.log(user);\n  //       //   // }, error => {\n  //         //     // console.log(error);\n  //       });\n  //     }\n  //   }\n  //   }, []);\n\n\n\n  return (\n    <Router>\n      <div className='App'>\n        {/* <div>{hello}</div> */}\n        <RoutingComponent />\n      </div>\n    </Router>\n  );\n\n}\n\nfunction RoutingComponent() {\n  const location = useLocation();\n\n  return (\n    <>\n      {location.pathname !== \"/login\" && location.pathname !== \"/register\" && <Header />}\n      <Routes>\n        <Route path=\"/login\" element={<LoginPage />} />\n        <Route path=\"/register\" element={<RegisterPage />} />\n        <Route path=\"/\" exact={true} element={<Home />} />\n        <Route path=\"/store/list\" element={<StoreList />} />\n        <Route path=\"/api/test\" element={<Test />} />\n        <Route path=\"/api/test2\" element={<Test2 />} />\n        <Route path=\"/menulist\" element={<MenuList />} />\n        <Route path=\"/reviewregister\" element={<ReviewForm />} />\n        <Route path=\"/market/detail\" element={<MarketDetailPage />} />\n        <Route path=\"/mypage\" element={<MyPage />} />\n        <Route path=\"/storeRegister\" element={<StoreRegisterPage />} />\n        <Route path=\"/useredit\" element={<UserEditPage />} />\n        <Route path=\"/my-orders\" element={<MyOrder />} />\n        <Route path=\"/StoreItemDailyPrice\" element={<StoreItemDailyPrice />} />\n        <Route path=\"/MenuRegisterationForm\" element={<MenuRegisterationForm />} />\n        <Route path=\"/notice/list\" element={<NoticeList />} />\n        <Route path=\"/notice/detail/:noticeNo\" element={<NoticeDetail />} />\n        <Route path=\"/storemypage\" element={<StoreMyPage />} />\n        <Route path=\"/storeItemRegister\" element={<StoreItemRegister />} />\n        <Route path=\"/StoreItemAdd\" element={<StoreItemAdd />} />\n        <Route path=\"/pay\" element={<Payment />} />\n        <Route path=\"/admin/notice/register\" element={<NoticeRegisterationForm />} />\n        <Route path=\"/admin/notice/list\" element={<AdminNoticeList />} />\n        <Route path=\"/admin/notice/detail/:noticeNo\" element={<AdminNoticeDetail />} />\n        <Route path=\"/mypage/ordermenu/detail/:orderNo\" element={<OrderMenuList />} />\n        <Route path=\"/order/detail/:orderNo\" element={<OrderMenuList />} />\n        <Route path=\"/order-confirmation\" element={<StoreOrder />} />\n      </Routes>\n      {location.pathname !== \"/login\" && location.pathname !== \"/register\" && <SideBar />}\n      {location.pathname !== \"/login\" && location.pathname !== \"/register\" && <Footer />}\n    </>\n  );\n}\n\nexport default App;\n\n\n\n\n","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/reportWebVitals.js",[],[],"/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Auth/UserContext.js",[],[],"/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Auth/RegisterPage.js",["312","313","314"],[],"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios, { formToJSON } from 'axios';\nimport { isOpenNow, sendAxiosRequest } from '../utility/common';\n\n// import DaumPostcode from 'react-daum-postcode';\n\n\n\n\nfunction RegisterPage() {\n\n  // const [showPostcode, setShowPostcode] = useState(false);\n\n  //   const handleAddress = (data) => {\n  //     handleChange({\n  //         target: {\n  //             name: \"zip\",\n  //             value: data.zonecode\n  //         }\n  //     });\n  //     handleChange({\n  //         target: {\n  //             name: \"address\",\n  //             value: data.address\n  //         }\n  //     });\n  //     setShowPostcode(false); // 주소 선택 후, 우편번호 찾기 창을 닫습니다.\n  // };\n\n  const useForm = (initialValues) => {\n    const [values, setValues] = useState(initialValues);  // values는 폼 컨트롤의 상태를 나타냄, initialValues로 초기 설정\n    const handleChange = (e) => {   //폼 컨트롤의 onChange 이벤트 핸들러\n      const { name, value } = e.target;\n      setValues({\n        ...values,\n        [name]: value,\n      });\n    };\n    return [values, handleChange];\n  };\n\n\n\n  // const [values, handleChange] = useForm({ //useForm은 초기 값 initialValues를 인수로 받음,  그 상태와 상태를 변경하는 함수를 반환하는 useForm 훅을 호출\n  //   email: '',\n  //   password: '',\n  //   name: '',\n  //   phone: '',\n  //   zip: '',\n  //   address: '',\n  //   detailAddress: '',\n  //   bank: '',\n  //   accountNumber: '',\n  //   accountType: '',\n  // });\n\n  const navigate = useNavigate();\n\n  // const requestData = { //객체는 폼에서 사용자가 입력한 데이터를 서버로 전송하기 위해 준비되는 데이터 구조\n  //   memberCategory: values.accountType,\n  //   memberEmail: values.email,      //values 객체의 email 속성 값을 requestData 객체의 email 속성에 할당\n  //   memberPwd: values.password,\n  //   memberName: values.name,\n  //   memberPhone: values.phone,\n  //   memberZipcode: values.zip,\n  //   memberAddr: values.address,\n  //   memberDetailAddr: values.detailAddress,\n  //   memberBank: values.bank,\n  //   memberAccount: values.accountNumber,\n  // };\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    let formData = new FormData(e.target);\n    let formObj = formToJSON(formData);\n    sendAxiosRequest('/api/member/signup', 'POST', formObj, response => {\n      console.log('응답값:', response.data);\n      alert('회원가입에 성공하셨습니다!');\n      navigate('/');\n    },\n      error => {\n        console.error('API 호출 중 에러 발생: ', error);\n        alert('회원가입에 실패하셨습니다!');\n      }\n    )\n  };\n\n  return (\n    <div style={styles.background}>\n      <div style={styles.logoContainer}>\n        <img src=\"/images/logo.png\" alt=\"BLEU AUCTION\" style={styles.logo} />\n      </div>\n      <div style={styles.container}>\n        <form onSubmit={handleSubmit} style={styles.form}>\n          <input style={styles.input} type=\"text\" name=\"memberName\" placeholder=\"이름\" />\n          <input style={styles.input} type=\"email\" name=\"memberEmail\" placeholder=\"이메일\" />\n          <input style={styles.input} type=\"password\" name=\"memberPwd\" placeholder=\"비밀번호\" />\n          <input style={styles.input} type=\"text\" name=\"memberPhone\" placeholder=\"전화번호\" />\n          {/* {showPostcode && (\n                <DaumPostcode\n                    onComplete={handleAddress}\n                    autoClose={true}\n                />\n            )} */}\n          <input style={styles.input} type=\"text\" name=\"memberZipcode\" placeholder=\"우편번호\" />\n          {/* <button onClick={() => setShowPostcode(true)} style={{...styles.button, marginBottom: '10px'}}>우편번호 찾기</button> */}\n          <input style={styles.input} type=\"text\" name=\"memberAddr\" placeholder=\"기본주소\" />\n          <input style={styles.input} type=\"text\" name=\"memberDetailAddr\" placeholder=\"상세주소\" />\n          <input style={styles.input} type=\"text\" name=\"memberBacnk\" placeholder=\"은행\" />\n          <input style={styles.input} type=\"text\" name=\"memberAccount\" placeholder=\"계좌번호\" />\n          <div style={styles.accountTypeContainer}>\n            <label style={styles.accountTypeLabel}>\n              <input\n                type=\"radio\"\n                name=\"memberCategory\"\n                value=\"M\"\n                style={styles.accountTypeInput}\n              />\n              개인\n            </label>\n            <label style={styles.accountTypeLabel}>\n              <input\n                type=\"radio\"\n                name=\"memberCategory\"\n                value=\"S\"\n                style={styles.accountTypeInput}\n              />\n              기업\n            </label>\n          </div>\n          <button type=\"submit\" style={styles.submitButton}>회원 가입</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nconst styles = {\n  background: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    background: 'var(--Blue, linear-gradient(180deg, #0575E6 0%, #02298A 84.79%, #021B79 100%))',\n  },\n  logoContainer: {\n    marginBottom: '10px',\n  },\n  logo: {\n    width: '200px',\n  },\n  container: {\n    background: 'white',\n    padding: '20px',\n    borderRadius: '8px',\n    width: '400px',\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  toggleButtons: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginBottom: '20px',\n    borderRadius: '8px',\n  },\n  button: {\n    padding: '10px 20px',\n    cursor: 'pointer',\n    border: 'none',\n    backgroundColor: 'white',\n    borderRadius: '10px',\n  },\n  activeButton: {\n    padding: '10px 20px',\n    cursor: 'pointer',\n    border: 'none',\n    backgroundColor: 'lightgray',\n    borderRadius: '10px',\n  },\n  input: {\n    padding: '10px',\n    margin: '5px 0',\n    borderRadius: '8px',\n    border: '1px solid #ccc',\n    outline: 'none',\n  },\n  submitButton: {\n    padding: '10px 20px',\n    cursor: 'pointer',\n    backgroundColor: '#0575E6',\n    border: 'none',\n    borderRadius: '8px',\n    color: 'white',\n\n  },\n  accountTypeContainer: {\n    marginBottom: '10px',\n  },\n  accountTypeLabel: {\n    marginRight: '10px',\n    cursor: 'pointer',\n  },\n  accountTypeInput: {\n    marginRight: '5px',\n  },\n};\n\nexport default RegisterPage;\n","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Auth/LoginPage.js",["315","316","317","318","319","320"],[],"import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useNavigate } from 'react-router-dom';\nimport { formToJSON } from 'axios';\nimport { useState, useContext } from 'react';\nimport { useUser } from './UserContext';\nimport { isOpenNow, sendAxiosRequest, isTokenExpired } from '../utility/common';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\n\n\n\nconst defaultTheme = createTheme();\n\nfunction LoginPage() {\n  const navigate = useNavigate();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n\n    const loginRequest = {\n      memberEmail: data.get('memberEmail'),\n      memberPwd: data.get('memberPwd')\n    };\n\n    sendAxiosRequest('/api/member/login', 'POST', loginRequest, response => {\n      const tokenList = response.data;\n      if (tokenList) {\n        const accessToken = response.data.accessToken;\n        const refreshToken = response.data.refreshToken;\n\n        if (!isTokenExpired(accessToken) && !isTokenExpired(refreshToken)) {\n          sessionStorage.setItem('accessToken', accessToken);\n          localStorage.setItem('refreshToken', refreshToken);\n\n          const decodedAccessToken = jwtDecode(accessToken);\n          alert(\"'\" + decodedAccessToken.memberName + \"' 회원님 BLEU AUCTION에 오신 것을 환영합니다!\");\n          navigate('/');\n        }\n      }\n\n    }, error => console.log(error), 'application/json');\n  };\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Grid container component=\"main\" sx={{ height: '100vh' }}>\n        <CssBaseline />\n        <Grid\n          item\n          xs={false}\n          sm={4}\n          md={7}\n          sx={{\n            backgroundImage: 'url(/images/login.png)',\n            backgroundRepeat: 'no-repeat',\n            backgroundColor: (t) =>\n              t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n          }}\n        />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <Box\n            sx={{\n              my: 27,\n              mx: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n\n            <Typography component=\"h1\" variant=\"h5\">\n              안녕하세요 블루옥션입니다.\n            </Typography>\n            <Box component=\"form\" sx={{ mt: 1 }} noValidate onSubmit={handleSubmit}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"memberEmail\"\n\n                autoComplete=\"email\"\n                autoFocus\n                InputProps={{ style: { borderRadius: '30px' } }}\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"memberPwd\"\n\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                InputProps={{ style: { borderRadius: '30px' } }}\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2, borderRadius: '30px' }} // borderRadius 추가\n              >\n                Login\n              </Button>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{\n                  mt: 3,\n                  mb: 2,\n                  height: '40px', // 원하는 높이로 설정\n                  width: '100%', // LOGIN 버튼과 동일한 너비로 설정\n                  borderRadius: '30px',\n                  backgroundColor: '#FFEB00', // 카카오 노란색\n                  '&:hover': {\n                    backgroundColor: '#FFD600', // 노란색의 어두운 톤으로 hover 효과 추가\n                  },\n                }}\n              >\n                <img\n                  src=\"/images/kakao_login_medium_wide.png\" // 이미지 경로 수정\n                  alt=\"kakao-login\"\n                  style={{ height: '150%', width: '150%', objectFit: 'contain' }} // objectFit 속성 추가\n                />\n               </Button>\n                  <Grid container sx={{ mt: 2, justifyContent: 'flex-end' }}>\n                    <Grid item xs={6}>\n                      <Link href=\"/register\" variant=\"body2\">\n                        {\"회원가입\"}\n                      </Link>\n                    </Grid>\n                  </Grid>\n                </Box>\n              </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n}\n\nexport default LoginPage;\n","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Test/Test.js",[],[],"/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Common/SideBar.js",["321"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styles from './SideBar.module.css';\nimport { Link } from 'react-router-dom';\nimport Chat from '../Chat/Chat';\nimport OS from '../OS/OS';\n\nfunction SideBar() {\n\n    const [isRaysModalOpen, setIsRaysModalOpen] = useState(false);\n    const [isChatModalOpen, setIsChatModalOpen] = useState(false);\n    const [scrollPosition, setScrollPosition] = useState(window.pageYOffset);\n\n    const openRaysModal = () => {\n        setIsRaysModalOpen(true);\n    };\n\n    const closeRaysModal = () => {\n        setIsRaysModalOpen(false);\n    };\n\n    const toggleChatModal = () => {\n        setIsChatModalOpen(!isChatModalOpen);\n    };\n\n    useEffect(() => {\n        const handleScroll = () => {\n            setScrollPosition(window.pageYOffset);\n        };\n        window.addEventListener('scroll', handleScroll);\n        return () => {\n            window.removeEventListener('scroll', handleScroll);\n        };\n    }, []);\n\n    return (\n        <div\n            className={styles.sideBarBox}\n            style={{ top: `${200 + scrollPosition}px` }} // 여기서 움직임을 처리합니다.\n        >\n            <Link to=\"/StoreItemAdd\">등록</Link>\n            <Link to=\"#\" onClick={openRaysModal}>\n                오늘의 <br />방사능\n            </Link>\n            <Link to=\"#\" onClick={toggleChatModal}>\n                챗봇\n            </Link>\n            {isRaysModalOpen && <OS closeModal={closeRaysModal} />}\n            {isChatModalOpen && <Chat closeModal={toggleChatModal} />}\n        </div>\n    );\n}\n\nexport default SideBar;\n","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Common/Footer.js",["322","323","324","325"],[],"import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport styles from './Footer.module.css';\n\n\nfunction Footer() {\n  return (\n    <div className={styles.footerBox}>\n      <img src='/images/LogoPage.png' />\n    </div>\n  )\n}\n\nexport default Footer;","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/MyPage/UserEditPage.js",["326","327","328"],[],"import React, { useState, useEffect } from 'react';\nimport InputField from './InputField';\nimport { sendAxiosMultipartRequest, sendAxiosRequest } from '../utility/common';\nimport axios, { formToJSON } from 'axios';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nfunction UserEditPage() {\n  const [currentImage, setCurrentImage] = useState('http://fvhsczepiibf19983519.cdn.ntruss.com/member/defaultProfile.jpg?type=f&w=50&h=50&ttype=jpg');\n  const [member, setMember] = useState(null);\n\n\n  useEffect(() => {\n    sendAxiosRequest('api/member/loginCheck', 'GET', null, response => {\n      let loginUser = response.data.loginUser;\n      console.log(loginUser);\n      setMember(loginUser);\n      setCurrentImage('http://kr.object.ncloudstorage.com/bleuauction-bucket/' + loginUser.memberAttaches[0].filePath + loginUser.memberAttaches[0].saveFilename);\n    }, error => console.log(error))\n  }, []);\n\n\n  function memberUpdate() {\n    let memberForm = document.getElementById('memberForm');\n    const formData = new FormData(memberForm);\n    const updateMemberRequest = JSON.stringify(formData);\n\n    const updateMemberBlob = new Blob([updateMemberRequest], { type: 'application/json' });\n    formData.append('updateMemberRequest', updateMemberBlob);\n\n    const fileInput = document.getElementById('imageInput');\n\n    if (fileInput && fileInput.files[0]) {\n      console.log('조건만족하나?');\n      formData.append('profileImage', fileInput.files[0]);\n    }\n\n    console.log('formData: ', formData);\n    console.log('formData: ', formToJSON(formData));\n    axios.post('/api/member/update', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    })\n      .then(response => {\n        console.log('서버 응답:', response.data);\n      })\n      .catch(error => {\n        console.error('에러 발생:', error);\n      });\n  }\n\n\n  const handleImageChange = (event) => {\n    if (event.target.files && event.target.files[0]) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setCurrentImage(e.target.result);\n      };\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  };\n\n\n  const handleImageClick = () => {\n    document.getElementById('imageInput').click();\n  };\n\n\n  if (member === null) {\n    return <div>Loading...</div>; // 로딩 표시\n  } else {\n    return (\n      <div style={styles.container}>\n        <form id='memberForm' onClick={handleImageChange} style={styles.form}>\n          <img src={currentImage} alt={member.memberName} style={styles.profilePicture} onClick={handleImageClick} />\n          <br />\n          <button type=\"button\" style={styles.buttonStyle} onClick={() => { document.getElementById('imageInput').click() }}>사진 등록</button>\n          {/* <form onClick={handleImageChange} style={styles.form}> */}\n          <input type=\"file\" style={{ display: 'none' }} id=\"imageInput\" onChange={handleImageChange}\n          />\n          <div style={styles.formSection}>\n            <h1 style={styles.title}>일반 회원 정보 수정</h1>\n            <InputField type=\"text\" name=\"memberName\" value={member.memberName} onChange={e => setMember({ ...member, memberName: e.target.value })} placeholder=\"Name\" />\n            <InputField type=\"email\" name=\"memberEmail\" value={member.memberEmail} onChange={e => setMember({ ...member, memberEmail: e.target.value })} placeholder=\"Email\" />\n            <InputField type=\"password\" name=\"memberPwd\" value={member.memberPwd} onChange={e => setMember({ ...member, memberPwd: e.target.value })} placeholder=\"Password\" />\n            <InputField type=\"text\" name=\"memberPhone\" value={member.memberPhone} onChange={e => setMember({ ...member, memberPhone: e.target.value })} placeholder=\"Phone Number\" />\n            <InputField type=\"text\" name=\"memberZipcode\" value={member.memberZipcode} onChange={e => setMember({ ...member, memberZipcode: e.target.value })} placeholder=\"Postal Code\" />\n            <InputField type=\"text\" name=\"memberAddr\" value={member.memberAddr} onChange={e => setMember({ ...member, memberAddr: e.target.value })} placeholder=\"Primary Address\" />\n            <InputField type=\"text\" name=\"memberDetailAddr\" value={member.memberDetailAddr} onChange={e => setMember({ ...member, memberDetailAddr: e.target.value })} placeholder=\"Detail Address\" />\n            <InputField type=\"text\" name=\"memberBank\" value={member.memberBank} onChange={e => setMember({ ...member, memberBank: e.target.value })} placeholder=\"Bank\" />\n            <InputField type=\"text\" name=\"memberAccount\" value={member.memberAccount} onChange={e => setMember({ ...member, memberAccount: e.target.value })} placeholder=\"Account Number\" />\n            <button type='button' onClick={memberUpdate} style={styles.buttonStyle}>수정</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'row', // 행 방향으로 아이템들을 정렬합니다.\n    alignItems: 'flex-start', // 아이템들을 컨테이너의 시작 부분에 정렬합니다.\n    // margin: '0 auto', // 컨테이너를 화면 가운데 정렬합니다.\n    padding: '20px', // 컨테이너의 패딩을 추가합니다.\n    // width: '50%',\n    justifyContent: 'center'\n  },\n  profilePicture: {\n    width: '200px',\n    height: '200px',\n    borderRadius: '100px',\n    marginBottom: '20px',\n    alignSelf: 'flex-start', // 사진을 컨테이너의 시작 부분에 정렬합니다.\n  },\n  formSection: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    marginLeft: '20px', // 프로필 사진과 폼 섹션 사이에 마진을 추가합니다.\n  },\n  title: {\n    fontSize: '24px', // 원하는 폰트 크기로 설정합니다.\n    fontWeight: 'bold', // 제목의 폰트를 굵게 설정합니다.\n    marginBottom: '20px', // 제목 아래에 마진을 추가합니다.\n    textAlign: 'center',\n  },\n  buttonStyle: {\n    border: 'none',\n    margin: '10px 0',\n    padding: '10px',\n    borderRadius: '4px',\n    backgroundColor: '#C4C4C433',\n    textAlign: 'center', // 수정: 텍스트를 중앙에 배치합니다.\n    // boxShadow: '0px 0px 15px rgba(0, 0, 0, 0.2)',\n    width: '500px',\n    cursor: 'pointer',\n\n  }\n};\n\nexport default UserEditPage;\n\n","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/MyPage/StoreRegisterPage.js",["329","330"],[],"import React, { useState } from 'react';\n// import { Form, Card, Button } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport axios, { formToJSON } from 'axios';\n\n\n\nfunction StoreRegisterPage() {\n\n\n  const navigate = useNavigate();\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(e.target);\n    let formData = new FormData(e.target);\n\n    let jsonObj = formToJSON(formData);\n\n    console.log(jsonObj);\n\n    // POST 요청 생성\n    axios.post('/api/store/signup', jsonObj, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(response => {\n        // 성공적으로 서버에서 응답을 받은 경우의 처리\n        console.log('등록된 가게 정보:', response.data);\n        alert('가게 등록 성공!')\n        navigate('/mypage');\n\n      })\n      .catch(error => {\n        // 오류가 발생한 경우의 처리\n        console.error('에러 발생:', error);\n      });\n\n  };\n\n  return (\n    <div style={styles.container}>\n      <form onSubmit={handleSubmit} style={styles.form}>\n      <div>\n        <h2>가게 등록 </h2>\n        </div>\n        <div>\n        <label>시장명: </label>\n        <input style={styles.input} type=\"text\" name=\"marketName\" />\n        </div>\n        <div>\n        <label>가게명: </label>\n        <input style={styles.input} type=\"text\" name=\"storeName\" />\n        </div>\n        <div>\n        <label>사업자등록번호: </label>\n        <input style={styles.input} type=\"text\" name=\"licenseNo\" />\n        </div>\n        <div>\n        <label>우편번호: </label>\n        <input style={styles.input} type=\"text\" name=\"storeZipcode\" />\n        </div>\n        <div>\n        <label>기본주소: </label>\n        <input style={styles.input} type=\"text\" name=\"storeAddr\" />\n        </div>\n        <div>\n        <label>상세주소: </label>\n        <input style={styles.input} type=\"text\" name=\"storeDetailAddr\" />\n        </div>\n\n\n        <div>\n          <label>평일운영시작시간: </label>\n          <input style={styles.input} type=\"time\" name=\"weekdayStartTime\" />\n        </div>\n        <div>\n          <label>평일운영종료시간: </label>\n          <input style={styles.input} type=\"time\" name=\"weekdayEndTime\" />\n        </div>\n        <div>\n          <label>주말운영시작시간: </label>\n          <input style={styles.input} type=\"time\" name=\"weekendStartTime\" />\n        </div>\n        <div>\n          <label>주말운영종료시간: </label>\n          <input style={styles.input} type=\"time\" name=\"weekendEndTime\" />\n        </div>\n\n        <button type=\"submit\" style={styles.submitButton}> 가게 등록</button>\n\n      </form>\n    </div>\n\n  );\n}\n\nconst styles = {\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '60vh',\n  },\n  card: {\n    width: '50%', \n    boxShadow: '0 8px 30px rgba(0, 0, 0, 0.12)',\n    borderRadius: '20px', \n    padding: '20px', \n  },\n\n  title: {\n    fontSize: '1.8rem',\n    marginBottom: '30px',\n    textAlign: 'center',\n  },\n  button: {\n    background: 'linear-gradient(to right, #6a11cb, #2575fc)',\n    border: 'none',\n    padding: '10px 20px',\n    color: 'white',\n    borderRadius: '25px',\n    transition: 'all 0.2s',\n    cursor: 'pointer',\n    transition: 'all 0.3s', \n    '&:hover': {\n      transform: 'scale(1.1)', \n    },\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center', // 폼 내용을 중앙 정렬합니다.\n    padding: '20px',  // 내부 패딩을 추가합니다.\n    borderRadius: '12px',  // 모서리를 둥글게 합니다.\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2)', // 약간의 그림자 효과를 추가합니다.\n    background: 'white', // 배경색을 흰색으로 설정합니다.\n    width: '800px', \n  },\n  input: {\n    padding: '10px',\n    margin: '5px 0',\n    borderRadius: '6px',\n    border: '1px solid #ccc',\n    outline: 'none',\n    width: '300px', \n  },\n  submitButton: {\n    padding: '10px 20px',\n    cursor: 'pointer',\n    backgroundColor: '#0575E6',\n    border: 'none',\n    borderRadius: '8px',\n    color: 'white',\n  },\n};\n\n\n\nexport default StoreRegisterPage;\n\n\n\n// import * as React from 'react';\n// import { Button, TextField, Box, Typography, Container } from '@mui/material';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n\n// function StoreRegisterPage() {\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const formData = new FormData(e.currentTarget);\n//     // 폼 데이터를 JSON으로 변환하는 로직이 필요합니다.\n//     // formToJSON 함수를 정의하거나 다른 방법을 사용하세요.\n\n//     // JSON 객체 생성\n//     let jsonObj = {}; \n//     formData.forEach((value, key) => { jsonObj[key] = value });\n\n//     console.log(jsonObj);\n\n//     // POST 요청 생성\n//     axios.post('/api/store/signup', jsonObj, {\n//       headers: {\n//         'Content-Type': 'application/json'\n//       }\n//     })\n//       .then(response => {\n//         console.log('등록된 가게 정보:', response.data);\n//         // navigate('/path-after-success'); // 성공 후 리디렉션 경로\n//       })\n//       .catch(error => {\n//         console.error('에러 발생:', error);\n//       });\n//   };\n\n//   // Material-UI 컴포넌트를 사용한 레이아웃\n//   return (\n//     <Container component=\"main\" maxWidth=\"xs\">\n//       <Box\n//         sx={{\n//           marginTop: 8,\n//           display: 'flex',\n//           flexDirection: 'column',\n//           alignItems: 'center',\n//         }}\n//       >\n//         <Typography component=\"h1\" variant=\"h5\">\n//           가게 등록\n//         </Typography>\n//         <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n//           <TextField\n//             margin=\"normal\"\n//             required\n//             fullWidth\n//             id=\"marketName\"\n//             label=\"시장명\"\n//             name=\"marketName\"\n//             autoComplete=\"market-name\"\n//             autoFocus\n//           />\n//           {/* 다른 필드들도 이와 유사한 형태로 추가합니다. */}\n//           {/* 예시: */}\n//           <TextField\n//             margin=\"normal\"\n//             required\n//             fullWidth\n//             name=\"storeName\"\n//             label=\"가게명\"\n//             id=\"storeName\"\n//             autoComplete=\"store-name\"\n//           />\n//           {/* 나머지 필드를 여기에 추가 */}\n//           {/* ... */}\n//           <Button\n//             type=\"submit\"\n//             fullWidth\n//             variant=\"contained\"\n//             sx={{ mt: 3, mb: 2 }}\n//           >\n//             가게 등록\n//           </Button>\n//         </Box>\n//       </Box>\n//     </Container>\n//   );\n// }\n\n// export default StoreRegisterPage;\n","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Menu/MenuList.js",[],[],"/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/MyPage/OrderMenuList.js",[],[],"/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/MyPage/StoreItemRegister.js",["331","332","333","334","335","336","337","338","339","340","341"],[],"import '../utility/Common.css';\nimport React, { useState, useEffect } from 'react';\nimport { Form, Card, Button } from 'react-bootstrap';\nimport { json, useNavigate } from 'react-router-dom';\nimport axios, { formToJSON } from 'axios';\nimport {\n  sendAxiosRequest,\n  addEventToElements,\n  removeEventToElements,\n  isTokenExpired, getAccessToken, isNullUndefinedOrEmpty, isNotNullOrNonEmpty\n} from '../utility/common';\nimport { useUser } from '../Auth/UserContext';\nimport jwtDecode from \"jwt-decode\";\n\nfunction formatNumber(number) {\n  return number.toLocaleString();\n}\n\nfunction updateItemNames() {\n  const itemCodeSelect = document.getElementById(\"itemCode\");\n  const itemNameSelect = document.getElementById(\"itemName\");\n\n  const selectedValue = itemCodeSelect.value;\n  const itemNames = itemNameSelect;\n\n  const options = {\n    'N': ['품목구분 항목을 먼저 선택해주세요.'],\n    'S': ['광어', '우럭', '도미', '방어', '전복', '참치', '연어', '가리비', '전갱이'],\n    'F': ['광어', '우럭', '도미', '방어', '전복', '참치', '연어', '가리비', '전갱이'],\n    'C': ['새우'],\n    'M': ['가리비', '오징어'],\n    'E': ['기타']\n  };\n\n  itemNames.innerHTML = '';\n  options[selectedValue].forEach(fishName => {\n    const option = document.createElement('option');\n    option.value = fishName;\n    option.textContent = fishName;\n    itemNames.appendChild(option);\n  });\n}\n\nconst codeToTextMap = {\n  'ES': '동해',\n  'WS': '서해',\n  'SS': '남해',\n  'JJ': '제주',\n  'WD': '완도',\n  'JP': '일본',\n  'CN': '중국',\n  'RU': '러시아',\n  'NW': '노르웨이',\n  'ET': '기타'\n};\n\n\nfunction updateOriginStatus() {\n  const originStatusSelects = document.querySelectorAll(\"[name=originStatus]\");\n  const originPlaceStatusSelect = document.getElementById(\"originPlaceStatus\");\n\n  let selectedValue;\n  originStatusSelects.forEach(input => {\n    if (input.checked) {\n      selectedValue = input.value;\n    }\n  })\n\n  const originPlaceNames = originPlaceStatusSelect;\n\n  const options = {\n    'D': ['ES', 'WS', 'SS', 'JJ', 'WD', 'ET'],\n    'I': ['JP', 'CN', 'RU', 'NW', 'ET']\n  };\n\n  originPlaceNames.innerHTML = '';\n  options[selectedValue].forEach(regionCode => {\n    const option = document.createElement('option');\n    option.value = regionCode;\n    console.log(regionCode);\n    option.textContent = codeToTextMap[regionCode] || regionCode;\n    originPlaceNames.appendChild(option);\n  });\n}\n\n\nfunction insertSidp(tokenMember) {\n  let form = document.getElementById('sidpForm');\n  let formData = new FormData(form);\n  let jsonObj = formToJSON(formData);\n  jsonObj.dailyPrice = formatNumber(jsonObj.dailyPrice).replaceAll(',', '');\n  console.log('jsonObj: ', jsonObj);\n  sendAxiosRequest('api/sidp/add', 'POST', jsonObj, response => {\n    if (isNotNullOrNonEmpty(response.data)) {\n      console.log('response.data: ', response.data);\n      alert('품목 시세를 성공적으로 등록하였습니다.');\n      window.location.reload();\n    } else {\n      alert('품목 등록에 실패하였습니다. 잠시후 다시 시도해주세요!');\n    }\n\n\n  }, erorr => console.log(console.log(erorr)), null, tokenMember);\n}\n\n\n\n\nfunction StoreItemRegister() {\n  const [tokenMember] = useState(getAccessToken('a'));\n  const [dailyPrice, setDailyPrice] = useState(''); // 사용자 입력을 저장할 상태\n  const [minPrice] = useState(0); // 최소가격\n  const [maxPrice] = useState(1000000); // 최대가격\n  const [store] = useState(1);\n\n  console.log('tokenMember: ', tokenMember);\n\n  function handleDailyPriceChange(event) {\n    let inputNumber = parseInt(event.target.value.replace(/,/g, ''), 10);\n\n    // 최소 및 최대 값 적용\n    if (isNaN(inputNumber) || inputNumber < minPrice) {\n      inputNumber = minPrice;\n    } else if (inputNumber > maxPrice) {\n      alert('입력 가능한 최대 가격을 초과하였습니다!')\n      inputNumber = '';\n    }\n    setDailyPrice(formatNumber(inputNumber));\n  }\n  // useEffect 내에서 updateItemNames를 호출\n  useEffect(() => {\n    const itemCodeSelect = document.getElementById(\"itemCode\");\n    const originStatusSelects = document.querySelectorAll(\"[name=originStatus]\");\n\n    itemCodeSelect.addEventListener('change', updateItemNames);\n    addEventToElements('change', updateOriginStatus, originStatusSelects);\n\n    return () => {\n      itemCodeSelect.removeEventListener('change', updateItemNames);\n      removeEventToElements('change', updateOriginStatus, originStatusSelects);\n    };\n  }, []);\n\n\n\n  return (\n\n    <div className='ba-cursor-pointer-div'>\n      <form id='sidpForm' className='ba-form-container'>\n        <table>\n          <thead>\n            <tr>\n              <th colSpan=\"2\">품목 시세등록 </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th><label htmlFor=\"daliyPriceDate\">기준날짜</label></th>\n              <td>\n                <input name='storeNo' type='text' hidden value='1' />\n                <input type='date' name='daliyPriceDate' />\n              </td>\n            </tr>\n            <tr>\n              <th><label htmlFor=\"item_code\">품목구분</label></th>\n              <td>\n                <select name='itemCode' id=\"itemCode\">\n                  <option selected value=\"N\">선택안함</option>\n                  <option value=\"S\">생선(횟감)</option>\n                  <option value=\"F\">생선(비횟감)</option>\n                  <option value=\"C\">갑각류</option>\n                  <option value=\"M\">패류</option>\n                  <option value=\"E\">기타</option>\n                </select>\n              </td>\n            </tr>\n            <tr>\n              <th><label htmlFor=\"itemName\">품목</label></th>\n              <td>\n                <select name='itemName' id=\"itemName\">\n                  <option selected>품목구분 항목을 먼저 선택해주세요.</option>\n                </select>\n              </td>\n            </tr>\n            <tr>\n              <th><label>크기</label></th>\n              <td>\n                <label htmlFor=\"itemSizeS\">\n                  <input type=\"radio\" id=\"itemSizeS\" name=\"itemSize\" value=\"S\" /> 소\n                </label>\n                <label htmlFor=\"itemSizeM\">\n                  <input type=\"radio\" id=\"itemSizeM\" name=\"itemSize\" value=\"M\" /> 중\n                </label>\n                <label htmlFor=\"itemSizeL\">\n                  <input type=\"radio\" id=\"itemSizeL\" name=\"itemSize\" value=\"L\" /> 대\n                </label>\n              </td>\n            </tr>\n            <tr>\n              <th><label>원산지</label></th>\n              <td>\n                <label htmlFor=\"originD\">\n                  <input type=\"radio\" id=\"originD\" name=\"originStatus\" value=\"D\" /> 국내산\n                </label>\n                <label htmlFor=\"originI\">\n                  <input type=\"radio\" id=\"originI\" name=\"originStatus\" value=\"I\" /> 수입산\n                </label>\n              </td>\n            </tr>\n            <tr>\n              <th><label htmlFor=\"originPlaceStatus\">지역명</label></th>\n              <td>\n                <select name=\"originPlaceStatus\" id=\"originPlaceStatus\">\n                  <option selected>원산지 항목을 먼저 선택해주세요.</option>\n                </select>\n              </td>\n            </tr>\n            <tr>\n              <th><label>자연산/양식</label></th>\n              <td>\n                <label htmlFor=\"wildFarmStatusW\">\n                  <input type=\"radio\" id=\"wildFarmStatusW\" name=\"wildFarmStatus\" value=\"W\" /> 자연산\n                </label>\n                <label htmlFor=\"wildFarmStatusF\">\n                  <input type=\"radio\" id=\"wildFarmStatusF\" name=\"wildFarmStatus\" value=\"F\" /> 양식\n                </label>\n              </td>\n            </tr>\n            <tr>\n              <th><label>금일가격</label></th>\n              <td>\n                <label htmlFor=\"dailPrice\">\n                  <input type=\"text\" id=\"dailyPrice\" name=\"dailyPrice\" value={dailyPrice}\n                    onChange={handleDailyPriceChange} />(원)\n                </label>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <button type=\"button\" className='ba-btn ba-margin-tb50' onClick={() => insertSidp(tokenMember)}>품목시세 등록</button>\n      </form>\n    </div >\n\n  );\n}\n\n\n\n\nexport default StoreItemRegister;","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/MyPage/MyOrder.js",["342"],[],"import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport MyOrderContent from './MyOrderContent';\n\n\nfunction MyOrder() {\n\n  const order1 = {\n    orderPrice:'10000',\n    recipientPhone:'01011111111',\n    recipientName: '김성주',\n    recipientZipcode: '1111',\n    recipientAddr: '기본주소',\n    recipientDetailAddr: '상세주소',\n    regDatetime: '2023-09-01 15:00:00',\n    mdfDatetime: '2023-09-01 15:00:00',\n    orderStatus: 'Y'\n  }\n\n  const order2 = {\n    orderPrice:'20000',\n    recipientPhone:'01011111111',\n    recipientName: '김성주2',\n    recipientZipcode: '1111',\n    recipientAddr: '기본주소',\n    recipientDetailAddr: '상세주소',\n    regDatetime: '2023-09-01 15:00:00',\n    mdfDatetime: '2023-09-01 15:00:00',\n    orderStatus: 'N'\n  }\n\n  const order3 = {\n    orderPrice:'10000',\n    recipientPhone:'01011111111',\n    recipientName: '김성주',\n    recipientZipcode: '1111',\n    recipientAddr: '기본주소',\n    recipientDetailAddr: '상세주소',\n    regDatetime: '2023-09-01 15:00:00',\n    mdfDatetime: '2023-09-01 15:00:00',\n    orderStatus: 'Y'\n  }\n\n\n  const orderlist = [order1, order2, order3]\n\n  const [selected, setSelected] = useState([]);\n\n  const onClick = (e) => {\n    setSelected(e.target.value);\n  };\n\n  useEffect(()=>{\n    console.log(selected);\n  }, [selected])\n\n  // let content = (selected === 'Delivered') ? \n  // <MyOrderContent orderlist = {orderlist.filter((item)=>item.orderStatus === 'N')}/> : \n  // <MyOrderContent orderlist = {orderlist.filter((item)=>item.orderStatus === 'Y')} />;\n\n  let content = (\n    (selected === 'Delivered') ? <MyOrderContent orderlist = {orderlist.filter((item)=>item.orderStatus === 'Y')}/> : \n    (selected === 'Canceled') ? <MyOrderContent orderlist = {orderlist.filter((item)=>item.orderStatus === 'N')} />:\n    null\n  )\n\n  return (\n      <>\n        <h2>마이오더</h2>\n        <div>\n          <button value={'Delivered'} onClick = {onClick}>Delivered</button>\n          <button value={'Canceled'} onClick = {onClick}>Canceled</button>\n        </div>\n        <div>\n          {/* <MyOrderContent /> */}\n          {content}\n        </div>\n      \n      \n      </>\n  );\n};\n\nexport default MyOrder;\n","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Menu/MenuRegisterationForm.js",["343"],[],"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios, { formToJSON } from 'axios';\nimport { sendAxiosRequest } from '../utility/common';\n\nfunction MenuRegisterationForm() {\n  const [menu, setMenu] = useState({\n    menuImage: null,\n    menuName: '',\n    menuSize: '',\n    menuPrice: '',\n    menuContent: '',\n  });\n\n  const [previewImage, setPreviewImage] = useState(null); // 이미지 미리보기 URL\n\n  const handleImageChange = (e) => {\n    const file = e.target.files[0];\n    if (!file) {\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      // 이미지 파일 데이터를 상태에 저장하고 미리보기 설정\n      setMenu({ ...menu, menuImage: file });\n      setPreviewImage(reader.result);\n    };\n    reader.readAsDataURL(file);\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setMenu({ ...menu, [name]: value });\n  };\n\n\n  const navigate = useNavigate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    let formData = new FormData(e.target);\n    let formObj = formToJSON(formData);\n    sendAxiosRequest('/api/menu/new', 'POST', formObj, response => {\n      console.log('메뉴 응답값:', response.data);\n      alert('메뉴등록에 성공하셨습니다!');\n      navigate('/');\n    },\n      error => {\n        console.error('API 호출 중 에러 발생: ', error);\n        alert('메뉴등록에 실패하셨습니다!');\n      }\n    )\n  };\n\n  return (\n    <div style={styles.container}>\n      <form onSubmit={handleSubmit} style={styles.form}>\n      <h2>메뉴 등록</h2>\n        <div>\n          <label>메뉴 이미지:</label>\n          <input style={styles.input} type=\"file\" onChange={handleImageChange} />\n          {previewImage && (\n            <div>\n              <h3>이미지 미리보기:</h3>\n              <img src={previewImage} alt=\"미리보기\" style={{ height: '100px' }} /> {/* 미리보기 이미지 크기는 조절 가능 */}\n            </div>\n          )}\n        </div>\n        <div>\n          <label>메뉴 이름:</label>\n          <input style={styles.input} type=\"text\" name=\"menuName\" value={menu.menuName} onChange={handleChange} />\n        </div>\n        <div>\n          <label>메뉴 사이즈:</label>\n          <input style={styles.input} type=\"text\" name=\"menuSize\" value={menu.menuSize} onChange={handleChange} />\n        </div>\n        <div>\n          <label>메뉴 가격:</label>\n          <input style={styles.input} type=\"number\" name=\"menuPrice\" value={menu.menuPrice} onChange={handleChange} />\n        </div>\n        <div>\n          <label>메뉴 설명:</label>\n          <textarea name=\"menuContent\" value={menu.menuContent} onChange={handleChange} />\n        </div>\n        <button type=\"submit\" style={styles.submitButton}>메뉴 등록</button>\n      </form>\n    </div>\n  );\n}\n\nconst styles = {\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '30vh',\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center', // 폼 내용을 중앙 정렬합니다.\n    padding: '20px',  // 내부 패딩을 추가합니다.\n    borderRadius: '12px',  // 모서리를 둥글게 합니다.\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2)', // 약간의 그림자 효과를 추가합니다.\n    background: 'white', // 배경색을 흰색으로 설정합니다.\n    width: '800px', \n  },\n  input: {\n    padding: '10px',\n    margin: '5px 0',\n    borderRadius: '6px',\n    border: '1px solid #ccc',\n    outline: 'none',\n    width: '300px', \n  },\n  submitButton: {\n    padding: '10px 20px',\n    cursor: 'pointer',\n    backgroundColor: '#0575E6',\n    border: 'none',\n    borderRadius: '8px',\n    color: 'white',\n  },\n}\n\n\nexport default MenuRegisterationForm;\n","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Market/MarketDetailPage.js",["344","345","346"],[],"import React, { useState } from 'react';\nimport TabBar from './TabBar';\nimport MenuList from '../Menu/MenuList';\nimport Button from '../MainPage/Button';\nimport StoreInfo from './StoreInfo';\nimport ReviewSection from '../Review/ReviewSection';\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { sendAxiosRequest } from '../utility/common';\nimport { MenuItem } from '@mui/material';\nimport OrderModal from './OrderModal';\nimport { useUser } from '../Auth/UserContext';\n\n\nfunction MarketDetailPage() {\n\n  const [activeTab, setActiveTab] = useState('info');\n  const [modal, setModal] = useState(false);\n  const [menuData, setMenuData] = useState([]); // 메뉴 데이터를 저장할 상태\n\n  const location = useLocation(); // 추가된 부분\n  const store = location.state; // 추가된 부분\n\n\n  const storeInfo = {\n    image: '/images/storeimage.png',\n    name: '대원수산',\n    location: '서울특별시 동작구 노들로 674 노량진수산시장 , 2층 활어 2-15호 강변상회',\n    hours: '월요일 (오늘) 09:00 ~ 21:00',\n    phone: '02-1234-5678',\n  };\n\n  useEffect(() => {\n    if (store && store.storeNo) {\n      // 상점 번호가 있는 경우에만 요청을 실행합니다.\n      sendAxiosRequest(`/api/menu/${store.storeNo}`, 'GET', null, response => {\n        if (response.data && response.data.length > 0) {\n          console.log(response.data);\n          setMenuData(response.data); // 받아온 데이터로 상태를 업데이트합니다.\n          console.log(menuData);\n        }\n      }, error => {\n        console.error(\"An error occurred while fetching the menus:\", error);\n      });\n    }\n  }, [store])\n\n  const handleOrderClick = () => {\n    // alert('주문하기 버튼 클릭!');\n    setModal(true);\n    console.log(modal);\n  };\n\n  const closeModal = () => {\n    setModal(false);\n  };\n\n\n  return (\n    <div>\n      <div style={infoContainerStyle}>\n      <StoreInfo storeInfo={storeInfo} store={store} />\n      </div>\n      <div style={tabContainerStyle}>\n        <TabBar activeTab={activeTab} onTabClick={setActiveTab} />\n        {activeTab === 'menu' && <Button onClick={handleOrderClick} buttonText=\"주문하기\" />}\n        <OrderModal menus={menuData} isOpen={modal} onClose={closeModal}/>\n      </div>\n      {activeTab === 'info' && <p>여기에 가게정보를 표시합니다.</p>}\n      {activeTab === 'menu' && <MenuList menus={menuData}/>}\n      {activeTab === 'review' && <ReviewSection />}\n    </div>\n\n  );\n}\n\nconst infoContainerStyle = {\n  marginBottom: '0px', // 예시: 아래쪽 마진을 추가하여 공간 생성\n};\n\nconst tabContainerStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center'\n};\n\n\nexport default MarketDetailPage;","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Market/StoreList.js",["347","348","349","350","351","352","353","354","355","356","357","358"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Announce from '../MainPage/Announce';\nimport Coupon from '../MainPage/Announce';\nimport Category from '../MainPage/Category';\nimport StoreListItem from './StoreListItem';\nimport StoreHome from '../StoreHome';\nimport { Routes, Route } from 'react-router-dom';\nimport { isOpenNow, sendAxiosRequest, scrollMoveTop, getAccessToken, isTokenExpired } from '../utility/common';\nimport styles from './StoreList.module.css'\nimport jwtDecode from 'jwt-decode';\n\nfunction StoreList() {\n  const pageLowCount = 3;\n  let [startPageNo, setStartPageNo] = useState(0);\n  let [storeList, setStoreList] = useState([]);\n  let [newAddLength, setNewAddLength] = useState(pageLowCount);\n  const accessToken = sessionStorage.getItem('accessToken');\n\n  useEffect(() => {\n    sendAxiosRequest(`/api/store/list`, 'GET', null, response => {\n      console.log('/api/store/list의 응답값 => ', response.data);\n      setStoreList(response.data);\n      setNewAddLength(response.data.length);\n      setStartPageNo(Math.floor(newAddLength / pageLowCount));\n    }, error => console.log(error), null, accessToken);\n  }, []);\n\n\n  useEffect(() => {\n    const handleScroll = () => {\n      console.log(newAddLength);\n      if (newAddLength < pageLowCount) {\n        return;\n      }\n      if (\n        window.innerHeight + document.documentElement.scrollTop >=\n        document.documentElement.scrollHeight - 100\n      ) {\n\n        console.log(\"스크롤 이벤트 핸들러 작동\");\n        sendAxiosRequest(`/api/store/list?startPage=${startPageNo}`, 'GET', null, response => {\n          console.log(`/api/store/list?startPage=${startPageNo}의 응답값 => `, response.data);\n          let addReviewList = response.data;\n          setNewAddLength(addReviewList.length);\n          let newReviewList = [...storeList, ...addReviewList];\n          setStartPageNo(Math.floor(newReviewList.length / pageLowCount));\n          setStoreList(newReviewList);\n        }, error => console.log(error), null, accessToken)\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    }\n  }, [startPageNo, storeList]);\n\n\n\n\n  return (\n    <>\n      <Announce />\n      <div className={styles.storeListBox}>\n        {storeList.map((store, index) => (\n          <StoreListItem key={index} data={store} />\n        ))}\n      </div>\n      <div id=\"topBtnDiv\" onClick={scrollMoveTop}>↑</div>\n    </>\n  )\n}\n\nexport default StoreList;","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/MyPage/StoreOrder.js",["359","360","361"],[],"import React, { useEffect, useReducer, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport styles from './MyOrderContent.module.css';\n\n\n\nfunction StoreOrder() {\n\n  const [orders, setOrders] = useState([]);\n\n  useEffect(()=>{\n    axios.get('/api/store/order')\n    .then(response => setOrders(response.data))\n      .catch(error => console.log(error));\n    console.log(orders);\n  }, [])\n\n\n  return (\n    <>\n    <h1>주문확인</h1>\n    {orders.map(order=>(\n    <tr key={order.orderNo}>\n      \n    <div>\n    \n    {/* <button onClick={onClick} >버튼</button> */}\n    <div className={styles.order_box}>\n      <div className={styles.order_store_title}>\n      <td>주문 번호 : {order.orderNo}</td>\n      <br/>\n      <td>주문일: {new Date(order.regDatetime).toLocaleDateString()}</td>\n      </div>\n      \n      <div className={styles.order_item_box}>\n        <img src='/images/fresh.png'/>\n        <Link className=\"text-ellipsis\" to={`/order/detail/${order && order.orderNo}`} style={{ color: '#909090' }}>\n        주문 상세보기\n        </Link>\n\n      \n        </div>\n      \n      <div className={styles.order_result_box}>\n      <td>총액: {order.orderPrice}</td>\n      <br/>\n      <td>주문타입: {order.orderType === 'Q' ? '퀵배송' : order.orderType === 'T' ? '포장' : '기타'}</td>\n      <br/>\n      <td>요청사항: {order.orderRequest}</td>\n      <br/>\n      <td>핸드폰 번호: {order.recipientPhone}</td>\n      <br/>\n      <td>수령자: {order.recipientName}</td>\n      <br/>\n      <td>우편번호: {order.recipientZipcode}</td>\n      <br/>\n      <td>주소: {order.recipientAddr}</td>\n      <br/>\n      <td>상세주소: {order.recipientDetailAddr}</td>\n      \n      \n\n\n\n      </div>\n      </div>\n   \n    </div>\n    </tr>\n  ))}\n       </>\n  );\n}\n\nexport default StoreOrder;\n","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Review/ReviewForm.js",["362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384"],[],"import '../utility/Common.css';\nimport React, { useState, useEffect } from 'react';\nimport { formToJSON } from 'axios';\nimport { scrollMoveTop, sendAxiosMultipartRequest, sendAxiosRequest, dateFormatParse, handleInputChange } from '../utility/common';\n\n\nfunction ReviewForm() {\n  let [loginUser, setLoginUser] = useState(null);\n\n  useEffect(() => {\n    sendAxiosRequest(\"/api/member/loginCheck\", \"GET\", null,\n      response => {\n        let repLoginUser = response.data.loginUser;\n        console.log('loginUser#@#@#@#@', response.data);\n        if (repLoginUser === null) {\n          window.location.href = '/';\n        } else {\n          setLoginUser(repLoginUser);\n        }\n      }, error => console.log(error));\n  }, []);\n\n  // 로그인 확인\n  console.log(loginUser);\n\n  if (loginUser != null && loginUser != undefined) {\n    return (\n      <div id='maindDiv' className=\"review-main-div\">\n        <div id='mainContentDiv' className=\"ba-main-content-div\">\n          <ReviewWriteForm loginUser={loginUser}></ReviewWriteForm>\n          <ReviewListDiv></ReviewListDiv>\n        </div>\n        <div id=\"topBtnDiv\" onClick={scrollMoveTop}>↑</div>\n      </div >\n\n    );\n  }\n}\n\n\nfunction ReviewWriteForm(props) {\n  let [loginUser, setLoginUser] = useState(props.loginUser);\n  let [storeNo, setStoreNo] = useState(1);\n  let [memberNo, setMemberNo] = useState(1);\n  let [reviewFreshness, setReviewFreshness] = useState('M');\n\n  if (loginUser != null && loginUser != undefined) {\n\n    return (\n      <form id=\"reviewWriteForm\" encType='multipart/form-data' className='ba-form'>\n        <label htmlFor='storeNo'><input id='storeNo' name='storeNo' value={storeNo} hidden onChange={(e) => setStoreNo(e.target.value)}></input></label>\n        <label htmlFor='memberNo'><input id='memberNo' name='memberNo' value={loginUser.memberNo} hidden text onChange={(e) => setMemberNo(e.target.value)}></input></label>\n        <img className='ba-member-profile' src='http://fvhsczepiibf19983519.cdn.ntruss.com/member/defaultProfile.jpg?type=f&w=50&h=50&ttype=jpg' ></img>\n        <sapn className='ba-font-name'>{loginUser.memberName}</sapn>\n        <span className='ba-font-title'>신선도 :</span>\n        <label htmlFor='freshness-low' className='ba-freshness'><img src='/images/low.png' /><input type=\"radio\" id='freshness-low' name='reviewFreshness' value={'L'} checked={reviewFreshness === 'L'} onChange={() => setReviewFreshness('L')}></input></label>\n        <label htmlFor='freshness-medium' className='ba-freshness'><img src='/images/mid.png' /><input type=\"radio\" id='freshness-medium' name='reviewFreshness' value={'M'} checked={reviewFreshness === 'M'} onChange={() => setReviewFreshness('M')}></input></label>\n        <label htmlFor='freshness-high' className='ba-freshness'><img src='/images/high.png' /><input type=\"radio\" id='freshness-high' name='reviewFreshness' value={'H'} checked={reviewFreshness === 'H'} onChange={() => setReviewFreshness('H')}></input></label>\n        <div>\n          <textarea name=\"reviewContent\" className='ba-textarea' />\n        </div>\n        <div className='ba-text-left'>\n          <button type='button' className='ba-btn ba-margin-right10' onClick={() => {\n            let formData = new FormData(document.getElementById('reviewWriteForm'));\n            let reviewContentLength = formData.get('reviewContent').trim().length;\n            console.log(reviewContentLength);\n\n            if (reviewContentLength < 1) {\n              alert('작성하실 리뷰 내용을 입력해주세요!');\n              return;\n            }\n\n            let inputFile = document.querySelector('input[type=\"file\"]');\n            if (inputFile.files.length > 0) {\n              let files = inputFile.files;\n              for (let i = 0; i < files.length; i++) {\n                formData.append(\"multipartFiles\", files[i]);\n              }\n            }\n\n            console.log('여기다.');\n            sendAxiosMultipartRequest('/api/review/add', formData,\n              response => {\n                console.log('리뷰작성성공');\n                window.location.reload();\n                alert('리뷰를 성공적으로 작성하였습니다!');\n                console.log(response.data);\n              }, error => console.log(error));\n\n          }}>리뷰작성</button>\n          <label htmlFor='fileInput' className='ba-file-label'>파일 첨부</label><span id='fileInfoSpan'></span>\n          <input type='file' id='fileInput' multiple hidden className='ba-file-btn' onChange={(e) => {\n            let files = e.target.files;\n            console.log(files);\n            let fileInfoStr;\n            for (let i = 0; i < 2; i++) {\n              fileInfoStr = (i === 0) ? fileInfoStr + ' ' + files[i].name + ', ' : fileInfoStr + ' ' + files[i].name;\n            }\n            document.getElementById('fileInfoSpan').textContent = '파일명: ' + fileInfoStr + ' 등 ' + files.length + '개의 첨부파일';\n          }} />\n        </div>\n\n      </form >\n    );\n  }\n}\n\nfunction ReviewListDiv(props) {\n  const pageRowCnt = 4;\n  let [loginUser, setLoginUser] = useState(props.loginUser);\n  let [startPageNo, setStartPageNo] = useState(0);\n  let [reviewList, setReviewList] = useState([]);\n  let [selectedReviewNo, setSelectedReviewNo] = useState(null);\n  let [newAddLength, setNewAddLength] = useState(pageRowCnt);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      console.log(newAddLength);\n      if (newAddLength < pageRowCnt) {\n        return;\n      }\n      if (\n        window.innerHeight + document.documentElement.scrollTop >=\n        document.documentElement.scrollHeight - 100\n      ) {\n\n        console.log(\"스크롤 이벤트 핸들러 작동\");\n        sendAxiosRequest(`/api/review/list?startPage=${startPageNo}`, 'GET', null, response => {\n          console.log('response:', response);\n          console.log('response.data:',response.data);\n          let addReviewList = response.data.reviewList;\n          setNewAddLength(response.data.reviewList.length);\n          let newReviewList = [...reviewList, ...addReviewList];\n\n          setStartPageNo(Math.floor(newReviewList.length / pageRowCnt));\n          setReviewList(newReviewList);\n        }, error => console.log(error))\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    }\n  }, [startPageNo, reviewList]);\n\n  useEffect(() => {\n    sendAxiosRequest(\"/api/review/list\", \"GET\", null,\n      response => {\n        console.log('response.datasdsd:', response.data);\n        let data = response.data;\n        setLoginUser(data.loginUser);\n        setReviewList(data.reviewList);\n        setNewAddLength(data.reviewList.length);\n        setStartPageNo(Math.floor(newAddLength / pageRowCnt));\n      }, error => console.log(error));\n  }, []);\n\n\n\n  return (\n    <div id=\"reviewListDiv\" className='review-list-div'>\n      { reviewList.map((review, index) => (\n        <div key={index} className='review-div'>\n          <form id={'reviewUpdateForm' + index}>\n            <input id={'reviewNo' + index} name='reviewNo' hidden value={review.reviewNo} />\n\n            <div className='ba-title-container'>\n              <img className='ba-member-profile' src='http://fvhsczepiibf19983519.cdn.ntruss.com/member/defaultProfile.jpg?type=f&w=50&h=50&ttype=jpg' />\n              <div className='ba-title-info'>\n                <b>{review.member.memberName}</b>\n                <span><b>작성일:</b><input type='text' value={dateFormatParse(new Date(review.mdfDatetime))} className='ba-input-text' disabled /></span>\n              </div>\n              <div className='ba-title-freshness'>\n                <span className='ba-font-title'>신선도 :</span>\n                <label htmlFor='freshness-low'>\n                  <img src='/images/low.png' />\n                  <input type=\"radio\" name='reviewFreshness' value={'L'} checked={review.reviewFreshness === 'L'} onChange={(e) => handleInputChange(e, index, reviewList, setReviewList)} />\n                </label>\n                <label htmlFor='freshness-mid'>\n                  <img src='/images/mid.png' />\n                  <input type=\"radio\" name='reviewFreshness' value={'M'} checked={review.reviewFreshness === 'M'} onChange={(e) => handleInputChange(e, index, reviewList, setReviewList)} />\n                </label>\n                <label htmlFor='freshness-high'>\n                  <img src='/images/high.png' />\n                  <input type=\"radio\" name='reviewFreshness' value={'H'} checked={review.reviewFreshness === 'H'} onChange={(e) => handleInputChange(e, index, reviewList, setReviewList)} />\n                </label>\n              </div>\n            </div>\n\n            <hr />\n            <div>\n              {review.reviewAttaches.length > 0 && (\n                <div className='ba-img-list-div'>\n                  <img id={'defaultImg' + index} className='ba-img-first' src={`http://kr.object.ncloudstorage.com/bleuauction-bucket/review/${review.reviewAttaches.length > 0 ? review.reviewAttaches[0].saveFilename : ''}`} />\n\n                  <div className='ba-div-col-sort'>\n                    {\n                      review.reviewAttaches.map((attach) => (\n                        <div>\n                          <img className='ba-img-sub-list-div' src={`http://kr.object.ncloudstorage.com/bleuauction-bucket/review/${attach.saveFilename}`} onMouseEnter={(e) => {\n                            let targetImgSrc = e.target.src;\n                            let defaultImgId = 'defaultImg' + index;\n                            console.log(targetImgSrc);\n                            let defaultImg = document.getElementById(defaultImgId);\n                            console.log(defaultImg);\n                            defaultImg.src = targetImgSrc;\n                          }} />\n                        </div>\n                      )\n                      )\n                    }\n                  </div>\n                </div>\n              )}\n              {review.member.memberNo == loginUser.memberNo ?\n                (<textarea name='reviewContent' value={review.reviewContent} className='ba-textarea' onChange={(e) => handleInputChange(e, index, reviewList, setReviewList)} />)\n                : (<textarea name='reviewContent' value={review.reviewContent} className='ba-textarea-disabled' readOnly />\n                )}\n            </div>\n\n            {review.member.memberNo == loginUser.memberNo ?\n              (<div className='ba-btn-div'>\n                <div className='ba-file-list'>\n                  {review.reviewAttaches.map((attach) => (\n                    <div key={attach.fileNo} className=\"ba-file-item\">\n                      <li>{attach.originFilename}</li>\n                      <p className=\"ba-delete-text\" onClick={() => {\n                        sendAxiosRequest(`/api/review/deleteFile?fileNo=${attach.fileNo}`, 'GET', null,\n                          response => {\n                            console.log(response.data);\n                            window.location.reload();\n                            alert(response.data.originFilename + '(이)가 삭제되었습니다!');\n                          },\n                          error => {\n                            console.log(error);\n                          }\n                        );\n                      }}>[삭제]</p>\n                    </div>\n                  ))}\n                </div>\n\n                <button type='button' className='ba-btn ba-margin-right20' onClick={() => {\n                  let jsonObj = formToJSON(new FormData(document.getElementById('reviewUpdateForm' + index)));\n                  console.log(jsonObj);\n                  sendAxiosRequest('/api/review/update', 'POST', jsonObj, response => {\n                    console.log(response.data);\n                    console.log('리뷰변경 성공!');\n                    window.location.reload();\n                    alert('리뷰를 성공적으로 변경하였습니다!');\n                  }, error => console.log(error));\n                }}>리뷰수정</button>\n                <button type='button' className='ba-btn ba-margin-right10' onClick={\n                  () => {\n                    sendAxiosRequest(`/api/review/delete?reviewNo=${review.reviewNo}`, 'GET', null, response => {\n                      console.log(response.data);\n                      window.location.reload();\n                      alert('리뷰가 성공적으로 삭제되었습니다!');\n                    }, error => {\n                      console.log(error);\n                    });\n                  }}>리뷰삭제</button>\n              </div>) : (<div></div>)\n            }\n\n            <div className='ba-text-right'>\n              <button type='button' className='ba-small-btn' onClick={() => {\n                selectedReviewNo === review.reviewNo ? setSelectedReviewNo(null) : setSelectedReviewNo(review.reviewNo);\n              }}>답글</button>\n            </div>\n          </form>\n\n          {\n            selectedReviewNo == review.reviewNo && (\n              <AnswerForm reviewNo={review.reviewNo} loginUser={loginUser} />\n            )\n          }\n        </div >\n      ))\n      }\n    </div >\n  );\n}\n\nfunction AnswerForm(props) {\n  return (\n    <div>\n      <hr />\n      <div className='ba-text-right'>\n        <button type='button' className='ba-small-btn' onClick={() => {\n          document.getElementById('answerWriteFormDiv').style.display = 'block';\n        }}>답글작성✍️</button>\n      </div>\n      <div id=\"answerWriteFormDiv\">\n        <h4 className='ba-font-title'>답글작성</h4>\n        <form id=\"answerWriteForm\">\n          <input name='reviewNo' hidden value={props.reviewNo}></input>\n          <input name='memberNo' hidden value={1}></input>\n          <button type='button' className='ba-close-btn' onClick={\n            () => {\n              document.getElementById('answerWriteFormDiv').style.display = 'none';\n\n            }\n          }>x</button>\n          <div>\n            <textarea name='answerContent' className='ba-small-textarea'></textarea>\n          </div>\n          <div className='ba-btn-div'>\n            <button type='button' className='ba-btn ba-margin-right40' onClick={() => {\n              let jsonObj = formToJSON(document.getElementById('answerWriteForm'));\n              console.log(jsonObj);\n              if (jsonObj.answerContent.trim().length < 1) {\n                alert('작성하실 답급 내용을 입력해주세요!');\n                return;\n              }\n              sendAxiosRequest('/api/answer/add', 'POST', jsonObj,\n                response => {\n                  window.location.reload();\n                  alert('답글을 성공적으로 작성하였습니다!');\n                  console.log(response.data);\n                }, error => console.log(error));\n            }}>작성하기</button>\n          </div>\n        </form >\n      </div>\n      <AnswerListDiv reviewNo={props.reviewNo} loginUser={props.loginUser}></AnswerListDiv>\n    </div >\n  );\n}\n\nfunction AnswerListDiv(props) {\n  const pageRowCnt = 2;\n  let [answerList, setAnswerList] = useState([]);\n  let [startPageNo, setStartPageNo] = useState(0);\n\n\n  useEffect(() => {\n    sendAxiosRequest(`/api/answer/list?reviewNo=${props.reviewNo}`, \"GET\", null,\n      response => {\n        let asnwerList = response.data.answerList;\n        let totalRows = response.data.totalRows;\n        console.log('최초 렌더시 totalRow');\n        console.log(totalRows);\n        console.log('최초 렌더시 asnwerList.length');\n        console.log(asnwerList.length);\n\n        if (totalRows > asnwerList.length) {\n          console.log(document.querySelector('.ba-more-btn'));\n          document.querySelector('.ba-more-btn').hidden = false;\n        }\n        setAnswerList(response.data.answerList);\n        setStartPageNo(response.data.answerList.length / 2);\n      }, error => console.log(error));\n\n    return () => {\n    }\n  }, []);\n\n  return (\n    <div id=\"answerListDiv\" className='answer-list-div'>\n      {answerList.map((answer, index) => (\n\n        < div className='answer-div' key={index} >\n          <form id={'answerUpdateForm' + index}>\n            <div className='ba-title-container'>\n              <img className='ba-member-profile' src='http://fvhsczepiibf19983519.cdn.ntruss.com/member/defaultProfile.jpg?type=f&w=50&h=50&ttype=jpg' />\n              <div className='ba-title-info'>\n                <b>{answer.member.memberName}</b>\n                <span><b>작성일:</b><input type='text' value={dateFormatParse(new Date(answer.mdfDatetime))} className='ba-input-text' disabled /></span>\n              </div>\n            </div>\n            {answer.member.memberNo == props.loginUser.memberNo ?\n              (\n                <div>\n                  <input type='text' name='answerNo' hidden value={answer.answerNo} />\n                  <input type='text' name='reviewNo' hidden value={answer.reviewNo} />\n                  <input type='text' name='memberNo' hidden value={answer.member.memberNo} />\n\n                  <textarea name='answerContent' value={answer.answerContent} className='ba-textarea' onChange={(e) => {\n                    handleInputChange(e, index, answerList, setAnswerList);\n                  }} />\n                  <div className='ba-btn-div'>\n                    <button type='button' className='ba-btn ba-margin-right20' onClick={\n                      () => {\n                        let jsonObj = formToJSON(new FormData(document.getElementById('answerUpdateForm' + index)));\n                        console.log(jsonObj);\n                        sendAxiosRequest(`/api/answer/update?`, 'POST', jsonObj, response => {\n                          window.location.reload();\n                          alert('답글이 성공적으로 변경되었습니다!');\n                        }, error => {\n                          console.log(error);\n                        });\n                      }\n                    } >답글수정</button>\n                    <button type='button' className='ba-btn ba-margin-right80' onClick={\n                      () => {\n                        sendAxiosRequest(`/api/answer/delete?answerNo=${answer.answerNo}`, 'GET', null, response => {\n                          window.location.reload();\n                          alert('답글이 성공적으로 삭제되었습니다!');\n                        }, error => {\n                          console.log(error);\n                        });\n                      }\n                    }>답글삭제</button>\n                  </div>\n                </div>)\n              : (<textarea name='answerContent' value={answer.answerContent} className='ba-textarea-disabled' />)}\n          </form>\n        </div >\n      ))\n      }\n      <div className='ba-btn-div'>\n        <button type='button' className='ba-more-btn' hidden onClick={(e) => {\n          sendAxiosRequest(`/api/answer/list?reviewNo=${props.reviewNo}&startPage=${startPageNo}`, \"GET\", null,\n            response => {\n              console.log(response.data);\n              let totalRows = response.data.totalRows;\n              let appendAnswerList = response.data.answerList;\n              let newAnswerList = [...answerList, ...appendAnswerList];\n              setAnswerList(newAnswerList);\n              setStartPageNo(newAnswerList.length / 2);\n              if (totalRows <= newAnswerList.length) {\n                e.target.hidden = true;\n              }\n\n            }, error => {\n              console.log(error);\n            })\n        }}>더 보기</button>\n      </div>\n    </div >\n  );\n}\n\n\nexport default ReviewForm;\n","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/StoreItemDailyPrice/StoreItemAdd.js",["385","386","387","388"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { sendAxiosRequest } from '../utility/common';\nimport './StoreItemAdd.css';\nimport { useNavigate } from 'react-router-dom';\nimport { Hidden } from '@mui/material';\n\n\nfunction StroeItemAdd() {\n\n  const [fish, setFish] = useState('');\n  const [code, setCode] = useState('');\n  const [size, setSize] = useState('');\n  const [origin, setOrigin] = useState('');\n  const [place, setPlace] = useState('');\n  const [wild, setWild] = useState('');\n  const [price, setPrice] = useState('');\n\n  const handleCode = () => {\n    setCode(\n      (fish === '광어'||'우럭'||'도미'||'방어'||'참치') ? 'S' :\n      (fish === '연어') ? 'F' :\n      (fish === '오징어') ? 'E' :\n      (fish === '새우') ? 'C' :\n      (fish === '가리비'||'전복') ? 'M' : '')\n    }\n\n  const handleSize = (e) => {\n    setSize(e.target.value)\n  }\n\n  const handlePrice = (e) => {\n    setPrice(e.target.value)\n  }\n\n  const itemSize = \n  Number(size) >= 3 ? 'L' :\n  Number(size) >= 2 ? 'M' : 'S'\n  \n\n  const fishs = {\n    '광어': 1,\n    '우럭': 2,\n    '도미': 3,\n    '방어': 4,\n    '참치': 5,\n    '연어': 6,\n    '오징어': 7,\n    '새우': 8,\n    '가리비': 9,\n    '전복': 10\n  }\n\n  const codes = {\n    S: '생선/횟감',\n    F: '생선/비횟감',\n    C: '갑각류',\n    M: '패류',\n    E: '기타',\n  };\n\n  const DPlace = {\n    ES: '동해',\n    WS: '서해',\n    SS: '남해',\n    JJ: '제주',\n    WD: '완도'\n  }\n\n  const IPlace = {\n    JP: '일본',\n    CN: '중국',\n    RU: '러시아',\n    NW: '노르웨이'\n  }\n\n  const selectPlace = \n  (origin === \"D\") ? DPlace : \n  (origin === \"I\") ? IPlace : null;\n\n  const hiddenButtons = \n  (selectPlace !== null) ?\n    Object.keys(selectPlace).map((code) => (\n      <button\n        key={code}\n        className={place === code ? 'selected' : ''}\n        onClick={() => setPlace(code)}\n      >\n        {selectPlace[code]}\n      </button>\n    ))\n    : null;\n  \n  const navigate = useNavigate();\n  \n  const handleSubmit = () => {\n    console.log('dddd');\n    sendAxiosRequest ('/api/item/new', 'POST', item, response => {\n      console.log(response.data);\n      console.log(item);\n      navigate('/');\n    }, error => {\n      console.log(error);\n    });\n\n  };\n\n  const item = {\n    'itemName': fish,\n    'itemCode': code,\n    'itemSize': itemSize,\n    'originStatus': origin,\n    'originPlaceStatus': place,\n    'wildFarmStatus': wild\n  }\n\n\n\n\n  return (\n    <>\n      <p>품목 선택</p>\n      <div className=\"freezer_box\">\n      {\n        Object.keys(fishs).map((name) => (\n          <div key={name}\n            className={fish === name ? 'selected' : 'not_selected'} \n            onClick={() => {setFish(name); handleCode()}}>\n            <img src={`/images/fish${fishs[name]}.jpg`} alt={name} className='fish_image'/>\n            <p>{name}</p>\n          </div>\n        ))\n      }\n      </div>\n\n      <div className='fish_size'>\n        <p>무게 입력 (kg)</p>\n        <div>\n          <input\n              type=\"number\"\n              value={size}\n              onChange={handleSize}\n              placeholder=\"예) 2.5\"\n            />\n        </div>\n      </div>\n\n      <div className='fish_size'>\n        <p>금일 판매 가격 (원)</p>\n        <div>\n          <input\n              type=\"number\"\n              value={price}\n              onChange={handlePrice}\n              placeholder=\"예) 10000\"\n            />\n        </div>\n      </div>\n      \n      <div className=\"fish_origin\">\n        <p>원산지</p>\n        \n        <div className=\"origin_buttons\">\n          <button className={origin === 'D' ? 'selected' : ''}\n            onClick={() => setOrigin('D')}>국내산</button>\n          <button className={origin === 'I' ? 'selected' : ''}\n            onClick={() => setOrigin('I')}>수입산</button>\n        </div>\n\n      </div>\n\n      <div className='fish_place'>\n        \n\n        <div className=\"filter_buttons\">\n          {hiddenButtons}\n        </div>\n      </div>\n\n      <div className='fish_origin'>\n        <p>자연산 / 양식</p>\n\n        <div className=\"origin_buttons\">\n          <button className={wild === 'W' ? 'selected' : ''}\n            onClick={() => setWild('W')}>자연산</button>\n          <button className={wild === 'F' ? 'selected' : ''}\n            onClick={() => setWild('F')}>양식</button>\n        </div>\n\n      </div>\n\n      <div className='fish_origin'>\n        <div className=\"origin_buttons\">\n        <button onClick={handleSubmit}>제출하기</button>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default StroeItemAdd;","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Notice/NoticeDetail.js",["389"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useParams } from 'react-router-dom';\n\nfunction NoticeDetail() {\n  const [notice, setNotice] = useState({});\n  const { noticeNo } = useParams();\n\n  useEffect(() => {\n    axios.get(`/api/notice/detail/${noticeNo}`)\n      .then(response => setNotice(response.data))\n      .catch(error => console.log(error));\n  }, [noticeNo]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"top-controls\"></div>\n      <div style={{ padding: \"0 12px\" }}>\n        <table className=\"board_list text-center\">\n          <colgroup>\n            <col width=\"20%\" />\n            <col width=\"80%\" />\n          </colgroup>\n          <thead>\n          <tr>\n          <th>제목</th>\n          <td className=\"text-left\">{notice.noticeTitle}</td>\n          </tr>\n          <tr>\n          <th>내용</th>\n          <td>{notice.noticeContent}</td>\n          </tr>\n          </thead>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default NoticeDetail;\n","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Notice/NoticeList.js",["390","391"],[],"import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\n//import Announce from '/components/MainPage/Announce';\nimport NoticeListItem from './NoticeListItem';\nimport { Routes, Route } from 'react-router-dom';\nimport styles from './NoticeList.css'\n\n\nfunction NoticeList() {\n\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    axios.get('/api/notice')\n      .then(response => setData(response.data))\n      .catch(error => console.log(error));\n      // console.log(data);\n  }, []);\n\n  return (\n    <>\n    <div className={styles.storeListBox}>\n      <NoticeListItem data={data}/>\n    </div>\n    </>\n  )\n}\n\nexport default NoticeList;","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/StoreItemDailyPrice/StoreItemDailyPrice.js",["392","393","394","395","396","397","398","399","400","401"],[],"import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { Carousel } from 'react-responsive-carousel';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport './StoreItemDailyPrice.css';\nimport { sendAxiosRequest, accessTokenRefresh, refreshTokenInvalid, isTokenExpired, getAccessToken, isNullUndefinedOrEmpty } from '../utility/common';\n\n// handsontable라이브러리 관련 import\nimport 'handsontable/dist/handsontable.full.min.css';\nimport Handsontable from 'handsontable/base';\nimport { registerAllModules } from 'handsontable/registry';\nimport { HotTable } from '@handsontable/react';\nimport { registerRenderer, textRenderer } from 'handsontable/renderers';\n\nregisterAllModules();\n\nconst sizeOptions = {\n  S: '소 (0KG~1KG 이하)',\n  M: '중 (1KG~3KG 이하)',\n  L: '대 (3KG 초과)',\n};\n\nconst categoryOptions = {\n  S: '생선(횟감)',\n  F: '생선(비횟감)',\n  C: '갑각류',\n  M: '패류',\n  E: '기타',\n};\n\nconst originOptions = {\n  D: '국내산',\n  I: '수입산',\n};\n\nconst originPlaceOptions = {\n  ES: '동해',\n  WS: '서해',\n  SS: '남해',\n  JJ: '제주',\n  WD: '완도',\n  JP: '일본',\n  CN: '중국',\n  RU: '러시아',\n  NW: '노르웨이',\n};\n\nconst wildFarmOptions = {\n  W: '자연산',\n  F: '양식',\n};\n\nconst recommendationItems = [\n  {\n    id: 1,\n    image: 'item1.jpg',\n    name: '추천 상품 1',\n  },\n  {\n    id: 2,\n    image: 'item2.jpg',\n    name: '추천 상품 2',\n  },\n];\n\n\nfunction firstRowRenderer(instance, td, row, col, prop, value, cellProperties) {\n  textRenderer.apply(this, arguments);\n  td.style.fontSize = '20px';\n  td.style.padding = '20px';\n  td.style.color = 'black';\n  td.style.border = 'solid 2px white';\n  td.style.background = '#f2f2f2';\n}\n\n\nfunction StoreItemDailyPrice() {\n  const [totalDailyPrice, setTotalDailyPrice] = useState(0);\n  const [averageDailyPrice, setAverageDailyPrice] = useState(0);\n  const [items, setItems] = useState([]);\n  const accessToken = sessionStorage.getItem('accessToken');\n\n\n  useEffect(() => {\n    if (!isTokenExpired(accessToken)) {   // AccessToken이 있을 때만 요청 \n      sendAxiosRequest('/api/sidp/list', 'GET', null, response => {\n        if (response.data) {\n          let sidpList = response.data;\n          const columnData = sidpList.map((sidp) => sidp.dailyPrice);\n          const total = columnData.reduce((acc, current) => acc + current, 0);\n          const avg = total / (sidpList.length || 1); // 0으로 나누는 것을 방지\n\n          // 상태 업데이트\n          setTotalDailyPrice(total);\n          setAverageDailyPrice(avg);\n          setItems(sidpList);\n        }\n      }, error => {\n        if (error.response.data) {\n          const errorData = error.response.data;\n          console.log('errorData: ', errorData);\n          if (errorData === 'E') { // 토큰이 있으나 만료\n            accessTokenRefresh();\n          } else if (errorData === 'I') { // 토큰이 아예없거나 유효하지 않은 토큰\n            refreshTokenInvalid();\n          }\n        }\n      }, null, accessToken);\n    }\n  }, [accessToken]); // accessToken이 변경될 때만 실행\n\n  const transformedData = items.map((item) => {\n    return {\n      'daliyPriceDate': item.daliyPriceDate,\n      'itemCode': categoryOptions[item.itemCode],\n      'itemName': item.itemName,\n      'itemSize': sizeOptions[item.itemSize],\n      'wildFarmStatus': wildFarmOptions[item.wildFarmStatus],\n      'originStatus': originOptions[item.originStatus],\n      'originPlaceStatus': originPlaceOptions[item.originPlaceStatus],\n      'dailyPrice': item.dailyPrice,\n    };\n  });\n\n  // items 배열이 비어있을 때, 빈 행 추가\n  if (items.length === 0) {\n    transformedData.push({\n      'daliyPriceDate': '품목에 대한 시세 데이터가 존재하지 않습니다!',\n      'itemCode': '',\n      'itemName': '',\n      'itemSize': '',\n      'wildFarmStatus': '',\n      'originStatus': '',\n      'originPlaceStatus': '',\n      'dailyPrice': '',\n    });\n  }\n\n  console.log(items.length);\n  const mergeCells = items.length === 0 ? [\n    {\n      row: 0,\n      col: 0,\n      rowspan: 1,\n      colspan: 8,\n    }\n  ] : [];\n  console.log('transformedData: ', transformedData);\n\n  return (\n    <div className=\"daily-box\">\n      <h1>오늘의 시세</h1>\n      <br />\n      <div className=\"ba-price-list-div\">\n        <div>\n          <HotTable\n            mergeCells={mergeCells}\n            licenseKey=\"non-commercial-and-evaluation\"\n            colHeaders={['기준날짜', '품목구분', '품목명', '품목크기', '자연/양식', '국산/수입', '원산지', '품목가격(원)',]}\n            data={transformedData}\n            formattedAvg={'0,0,0'}\n            rowHeaders={true}\n            colWidths={[250, 200, 200, 300, 200, 250, 200, 250]}\n            columnHeaderHeight={50}\n            filters={true}\n            dropdownMenu={true}\n            customBorders={true}\n            settings={{\n              columnSorting: {\n                headerAction: true,\n                multiColumnSorting: true,\n                sortEmptyCells: false, // 빈 셀 정렬제외\n                indicator: true, // 정렬순서 표시\n                initialConfig: {\n                  column: 1,\n                  sortOrder: 'desc',\n                },\n              },\n              className: 'customFilterButtonExample1',\n              width: 'auto',\n              height: 'auto',\n              rowHeights: 60,\n              readOnly: true,\n              afterGetColHeader: function (col, th) {\n                var cellWidth = this.getColWidth(col); // 각 열 헤더의 배경색을 셀 넓이만큼 설정\n                th.style.backgroundColor = '#0056b3'; // 배경색을 변경하려면 원하는 색상으로 수정\n                th.style.color = 'white';\n                th.style.fontWeight = 'bold';\n                th.className = 'htMiddle';\n              },\n              afterGetRowHeader: function (row, th) {\n                th.style.backgroundColor = '#0056b3';\n                th.style.color = 'white';\n                th.style.fontWeight = 'bold';\n                th.style.fontSize = '20px';\n                th.className = 'htMiddle';\n              },\n              columns: [\n                {\n                  title: '기준날짜',\n                  type: 'date',\n                  className: 'htMiddle',\n                  dateFormat: 'YYYY-MM-DD',\n                  data: 'daliyPriceDate',\n                },\n                {\n                  title: '품목구분',\n                  type: 'text',\n                  className: 'htLeft htMiddle',\n                  data: 'itemCode',\n                },\n                {\n                  title: '품목명',\n                  type: 'text',\n                  className: 'htLeft htMiddle',\n                  data: 'itemName',\n                },\n                {\n                  title: '품목크기',\n                  type: 'text',\n                  className: 'htLeft htMiddle',\n                  data: 'itemSize',\n                },\n                {\n                  title: '자연/양식',\n                  type: 'text',\n                  className: 'htLeft htMiddle',\n                  data: 'wildFarmStatus',\n                },\n                {\n                  title: '국내산/수입산',\n                  type: 'text',\n                  className: 'htLeft htMiddle',\n                  data: 'originStatus',\n                },\n                {\n                  title: '원산지',\n                  type: 'text',\n                  data: 'originPlaceStatus',\n                  className: 'htLeft htMiddle',\n                },\n                {\n                  title: '품목가격(원)',\n                  type: 'numeric',\n                  data: 'dailyPrice',\n                  className: 'htRight htMiddle',\n                  numericFormat: {\n                    pattern: '0,0'\n                  }\n                },\n              ],\n              afterFilter() {\n                const handsontableInstance = this;\n                const filters = handsontableInstance.getPlugin('Filters');\n                console.log('filters: ', filters.filtersRowsMap.indexedValues);\n\n                let filteredList = filters.filtersRowsMap.indexedValues;\n\n\n                let total = 0;\n                let avg = 0;\n                let totalCnt = 0;\n                for (let i = 0; i < filteredList.length - 1; i++) {\n                  if (!filteredList[i]) {\n                    total += transformedData[i].dailyPrice;\n                    totalCnt++;\n                  }\n                }\n\n                avg = total / (totalCnt == 0 ? 1 : totalCnt);\n                console.log('total(합계): ', total);\n                console.log('avg(평균): ', avg);\n\n                setTotalDailyPrice(total);\n                setAverageDailyPrice(avg);\n              },\n            }}\n\n            cells={(row, col) => {\n              const cellProperties = {};\n              cellProperties.renderer = firstRowRenderer; // 사용자 정의 렌더러 함수를 셀에 적용\n              return cellProperties;\n            }}\n\n          />\n          <div className=\"ba-span-div\">\n            <span><strong>합계:</strong> {totalDailyPrice.toLocaleString()} (원)</span>\n            <span><strong>평균:</strong> {Math.floor(averageDailyPrice).toLocaleString()} (원)</span>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default StoreItemDailyPrice;","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/routes/Home.js",["402","403","404","405","406","407","408","409","410","411"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Announce from '../components/MainPage/Announce';\nimport StoreListItem from '../components/Market/StoreListItem';\nimport StoreHome from '../components/StoreHome';\nimport { Routes, Route } from 'react-router-dom';\nimport { accessTokenRefresh, refreshTokenInvalid, isNullUndefinedOrEmpty, sendAxiosRequest } from '../components/utility/common';\nimport { accordionSummaryClasses } from '@mui/material';\n\nfunction Home() {\n\n  const [stores, setStores] = useState([]);\n  const [pageRowCount, setPageRowCount] = useState([6]);\n  const accessToken = sessionStorage.getItem('accessToken');\n\n  /* 토큰 들고 요청 예시 */\n  // useEffect(() => {\n  //   if (isNullUndefinedOrEmpty(accessToken)) {   // AccessToken이 있을 때만 요청 \n\n  //     // 요청 헤더에 엑세스 토큰 추가\n  //     const config = {\n  //       headers: {\n  //         'Authorization': `Bearer ${accessToken}`\n  //       }\n  //     };\n\n  //     console.log('Home.js headers: ', config);\n\n  //     axios.get(`/api/store/list?pageLowCount=${pageRowCount}`, config)\n  //       .then(response => {\n  //         console.log('response.data: ', response.data);\n  //         setStores(response.data);\n  //       })\n  //       .catch(error => {\n  //         const errorData = error.response.data;\n  //         console.log('errorData: ', errorData);\n  //         if (errorData === 'E') { // 토큰이 있으나 만료\n  //           console.log('여기야');\n  //           accessTokenRefresh();\n  //         } else if (errorData === 'I') { // 토큰이 아예없거나 유효하지 않은 토큰\n  //           refreshTokenInvalid();\n  //         }\n  //       });\n  //   }\n  // }, [accessToken]); // accessToken이 변경될 때만 실행\n\n  useEffect(() => {\n    sendAxiosRequest(`/api/store/list?pageLowCount=${pageRowCount}`, 'GET', null, response => {\n      console.log('/api/store/list => response.data: ' + response.data);\n      if (isNullUndefinedOrEmpty(response.data)) {\n        setStores(response.data);\n      }\n    }, error => console.log(error), null, 'UA');\n\n  }, []);\n\n\n  return (\n    <>\n      <Announce />\n      {stores && (\n        <>\n          <StoreHome stores={stores} />\n          <button onClick={() => { console.log(stores); window.sessionStorage.getItem(\"memberNo\") }}>Click Me</button>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default Home;","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Admin/NoticeRegisterationForm.js",["412"],[],"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios, { formToJSON } from 'axios';\nimport { sendAxiosRequest } from '../utility/common';\n\nfunction NoticeRegisterationForm() {\n  const [notice, setNotice] = useState({\n    noticeTitle: 'title',\n    noticeContent: 'content',\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setNotice({ ...notice, [name]: value });\n  };\n\n\n  const navigate = useNavigate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    let formData = new FormData(e.target);\n    let formObj = formToJSON(formData);\n    sendAxiosRequest('/api/notice/new', 'POST', formObj, response => {\n      console.log('응답값:', response.data);\n      alert('공지사항이 등록 되었습니다.');\n      navigate('/main');\n    },\n      error => {\n        console.error('API 호출 중 에러 발생: ', error);\n        alert('공지사항 등록에 실패하셨습니다!');\n      }\n    )\n  };\n\n  return (\n    <div style={styles.container}>\n      <form onSubmit={handleSubmit} style={styles.form}>\n      <h2>공지사항 등록</h2>\n        <div>\n          <label>제목 </label>\n          <input style={styles.input} type=\"text\" name=\"noticeTitle\" value={notice.noticeTitle} onChange={handleChange} />\n        </div>\n        <div>\n          <label>내용 </label>\n          <input style={styles.input} type=\"text\" name=\"noticeContent\" value={notice.noticeContent} onChange={handleChange} />\n        </div>\n        <button type=\"submit\" style={styles.submitButton}>등록</button>\n      </form>\n    </div>\n  );\n}\n\nconst styles = {\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '30vh',\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center', // 폼 내용을 중앙 정렬합니다.\n    padding: '20px',  // 내부 패딩을 추가합니다.\n    borderRadius: '12px',  // 모서리를 둥글게 합니다.\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2)', // 약간의 그림자 효과를 추가합니다.\n    background: 'white', // 배경색을 흰색으로 설정합니다.\n    width: '800px',\n  },\n  input: {\n    padding: '10px',\n    margin: '5px 0',\n    borderRadius: '6px',\n    border: '1px solid #ccc',\n    outline: 'none',\n    width: '300px',\n  },\n  submitButton: {\n    padding: '10px 20px',\n    cursor: 'pointer',\n    backgroundColor: '#0575E6',\n    border: 'none',\n    borderRadius: '8px',\n    color: 'white',\n  },\n}\n\n\nexport default NoticeRegisterationForm;\n","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Test/test2.jsx",["413","414","415"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Test.css';\n\nconst Test = () => {\n  const [testStatus, setState] = useState({\n    loading: false,\n    response: '값을 가져오니라'\n  });\n\n  console.log(\"testStatus : \",testStatus)\n  return (\n    <>\n      <h1>Test API</h1>\n      <div className=\"response-container\">\n          <p>{testStatus.response}</p>\n        </div>\n    </>\n  );\n}\nexport default Test;\n","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Admin/AdminNoticeList.js",["416","417"],[],"import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\n//import Announce from '/components/MainPage/Announce';\nimport AdminNoticeListItem from './AdminNoticeListItem';\nimport { Routes, Route } from 'react-router-dom';\nimport styles from '../Notice/NoticeList.css'\n\n\nfunction AdminNoticeList() {\n\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    axios.get('/api/notice')\n      .then(response => setData(response.data))\n      .catch(error => console.log(error));\n      // console.log(data);\n  }, []);\n  \n\n  return (\n    <>\n    <div className={styles.storeListBox}>\n      <AdminNoticeListItem data={data}/>\n    </div>\n    </>\n  )\n}\n\nexport default AdminNoticeList;","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Admin/AdminNoticeDetail.js",[],[],"/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Pay/Pay.js",["418","419","420","421"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n// import swal from 'sweetalert';\n// import { response } from 'express';\n// import { error } from 'console';\n\nconst Payment = () => {\n  useEffect(() => {\n    const jquery = document.createElement(\"script\");\n    jquery.src = \"http://code.jquery.com/jquery-1.12.4.min.js\";\n    const iamport = document.createElement(\"script\");\n    iamport.src = \"https://cdn.iamport.kr/v1/iamport.js\";\n    document.head.appendChild(jquery);\n    document.head.appendChild(iamport);\n    return () => {\n      document.head.removeChild(jquery);\n      document.head.removeChild(iamport);\n    };\n  }, []);\n\n  function sendAxiosRequest(url, method, params, successCallback, errorCallback) {\n    console.log(url);\n    const axiosConfig = {\n      timeout: 5000,\n      url: url,\n      method: method,\n    };\n    if (params != null)\n      axiosConfig.params = params;\n    axios(axiosConfig).then(successCallback).catch(errorCallback);\n  }\n\n  const memberNo = 1;\n  const payNo = 1;\n  const orderNo = 1;\n  const [member, setMember] = useState(null);\n  const [pay, setPay] = useState(null);\n  const [order, setOrder] = useState(null);\n\n  useEffect(() => {\n    // Fetch member data\n    sendAxiosRequest(`/api/member/${memberNo}`, 'GET', null,\n      response => {\n\n        console.log('Member data:', response.data);\n        setMember(response.data); // Update member state\n      },\n      error => {\n        console.error('Error fetching member data:', error);\n      }\n    );\n\n    // Fetch order data\n    sendAxiosRequest(`/api/order/detail/${orderNo}`, 'GET', null,\n      response => {\n        console.log('Order data:', response.data);\n        setOrder(response.data); // Update order state\n      },\n      error => {\n        console.error('Error fetching order data:', error);\n      }\n    );\n  }, []); // Empty dependency array to ensure this effect runs only once\n\n  const requestPay = () => {\n    console.log('memberState', member);\n    console.log('orderState', order);\n\n    const { IMP } = window;\n    const buyerEmail = member ? member.memberEmail : '';\n    const buyerName = member ? member.memberName : '';\n    const buyerTel = member ? member.memberPhone : '';\n    const name = order ? order.orderNo : '';\n    const buyerAddr = order ? order.resipientAddr : '';\n    const buyerPostcode = order ? order.resipientZipcode : '';\n    const amount = order.orderPrice;\n\n    IMP.init('imp11340204');\n\n    IMP.request_pay({\n      pg: 'kakaopay.TC0ONETIME',\n      pay_method: 'card',\n      merchant_uid: new Date().getTime(),\n      name: name,\n      amount: amount,\n      buyer_email: buyerEmail,\n      buyer_name: buyerName,\n      buyer_tel: buyerTel,\n      buyer_addr: buyerAddr,\n      buyer_postcode: buyerPostcode,\n    }, async (rsp) => {\n      console.log('rsp: ', rsp);\n      try {\n        const { data } = await axios.post('/api/pay/verifyIamport/' + rsp.imp_uid);\n        if (rsp.paid_amount === amount) {\n          alert('결제 성공!');\n          const testPay = {\n            // \"payType\": \"C\",\n            // \"orderStatus\": \"Y\",\n            // \"payNo\": 123,\n            orderNo: order.orderNo,\n            payPrice: amount,\n            payStatus: rsp.success ? 'Y' : 'N'\n            // \"payDatetime\": \"2023-10-18T12:34:56\",  // 예: ISO 8601 형식의 날짜 및 시간\n            // \"payCancelDatetime\": \"2023-10-18T14:45:00\"  // 예: ISO 8601 형식의 날짜 및 시간\n          }\n\n          console.log('testPay.payStatus: ', testPay.payStatus);\n\n          axios.post('/api/pay/createPayment', testPay, {\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          })\n            .then(response => {\n              console.log('Pay data:', response.data);\n              setPay(response.data);\n            })\n            .catch(error => {\n              console.error('Error fetching pay data:', error);\n            });\n\n        } else if (rsp.paid_amount == amount) {\n          alert('결제 성공?');\n        } else {\n          alert('결제 실패?');\n        }\n      } catch (error) {\n        console.error('Error while verifying payment:', error);\n        alert('결제 실패');\n      }\n    });\n  };\n\n  return (\n    <div>\n      <button onClick={requestPay}>결제하기</button>\n    </div>\n  );\n};\n\nexport default Payment;\n\n","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/MyPage/InputField.js",[],[],"/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/MyPage/MyOrderContent.js",["422","423","424","425"],[],"import React, { useEffect, useReducer, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport styles from './MyOrderContent.module.css';\nimport OrderMenuList from './OrderMenuList';\n\n\nfunction MyOrderContent() {\n\n  const [orders, setOrders] = useState([]);\n\n  useEffect(()=>{\n    axios.get('/api/order')\n    .then(response => setOrders(response.data))\n      .catch(error => console.log(error));\n    console.log(orders);\n  }, [])\n\n  // function onClick() {\n  //   console.log(orders);\n  // }\n\n  // const orders = orderlist;\n\n  return (\n    <>\n    {orders.map(order=>(\n    <tr key={order.orderNo}>\n    <div>\n  \n    {/* <button onClick={onClick} >버튼</button> */}\n    <div className={styles.order_box}>\n      <div className={styles.order_store_title}>\n      <td>주문 번호 : {order.orderNo}</td>\n      <br/>\n      <td>주문일: {new Date(order.regDatetime).toLocaleDateString()}</td>\n      </div>\n      \n      <div className={styles.order_item_box}>\n        <img src='/images/fresh.png'/>\n        <Link className=\"text-ellipsis\" to={`/mypage/ordermenu/detail/${order && order.orderNo}`} style={{ color: '#909090' }}>\n        주문 상세보기\n        </Link>\n        {/* {order.OrderMenus.map(orderMenu => (\n          <div key={orderMenu.orderMenuNo}>\n            <td>주문메뉴번호{orderMenu.orderMenuNo}</td>\n            <td>메뉴번호{orderMenu.menuNo}</td>\n            <td>주문수량{orderMenu.menuNo}</td>\n          </div>\n        ))}  */}       \n        \n      </div>\n      \n      <div className={styles.order_result_box}>\n      <td>총액: {order.orderPrice}</td>\n      <br/>\n      <td>주문타입: {order.orderType === 'Q' ? '퀵배송' : order.orderType === 'T' ? '포장' : '기타'}</td>\n      <br/>\n      <td>요청사항: {order.orderRequest}</td>\n      <br/>\n      <td>핸드폰 번호: {order.recipientPhone}</td>\n      <br/>\n      <td>수령자: {order.recipientName}</td>\n      <br/>\n      <td>우편번호: {order.recipientZipcode}</td>\n      <br/>\n      <td>주소: {order.recipientAddr}</td>\n      <br/>\n      <td>상세주소: {order.recipientDetailAddr}</td>\n\n\n      </div>\n      </div>\n   \n    </div>\n    </tr>\n  ))}\n       </>\n  );\n}\n\nexport default MyOrderContent;\n","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/StoreHome.js",[],[],"/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Market/StoreInfo.js",["426"],[],"// import React from 'react';\n// import Coupon from '../Coupon/Coupon'; \n\n// function StoreIntro({storeInfo, store, coupons }) {\n//   console.log(store);\n//   // console.log(storeInfo);\n\n//   return (\n//     <div style={outerContainer}>\n//     <div style={introContainer}>\n//       <img src={storeInfo.image} alt={storeInfo.name} style={imageStyle} />\n//      <div style={storeInfoContainer}>\n//       <h2>{store.storeName}</h2>\n//       <ul style={infoList}>\n//         <li>{store.storeDetailAddr}</li>\n//         <li>{store.weekdayStartTime} ~ {store.weekdayEndTime}</li>\n//         <li>{store.store}</li>\n//       </ul>\n//       </div>\n//       {/* <div style={couponContainer}>\n//         {coupons.map(coupon => (\n//           <Coupon key={coupon.id} coupon={coupon} />\n//         ))}\n//       </div> */}\n//     </div>\n//     </div>\n//   );\n// }\n\n// const outerContainer = {\n//   display: 'flex',\n//   justifyContent: 'center',\n//   alignItems: 'center',\n//   height: '50vh', // 화면 높이를 100%로 설정 (필요한 경우 조절)\n//   };\n\n// const introContainer = {\n//     display: 'flex',\n//     flexDirection: 'column', // children들을 열 방향으로 배열\n//     alignItems: 'center', // children들을 가운데 정렬\n//     backgroundColor: '#f0f0f0', // 연한 회색 배경\n//     padding: '0px',\n//     borderRadius: '8px', // 소프트한 테두리를 위한 둥근 모서리 추가\n//     textAlign: 'center',\n//     width : '70%',\n//     height: '100%'\n// };\n\n// const storeInfoContainer = {\n//     textAlign: 'left', \n//     padding: '20px',\n//     marginBottom: '50px', // 쿠폰 컨테이너와의 간격을 조절\n//     width : '100%',\n//   };\n\n// const imageStyle = {\n//   width: '100%',\n//   height: 'auto',\n//   objectFit: 'cover',\n// };\n\n// const infoList = {\n//   listStyleType: 'none',\n//   padding: '0',\n//   margin: '10px 0',\n// };\n\n\n// export default StoreIntro;\n\nimport React from 'react';\nimport Coupon from '../Coupon/Coupon'; \n\nfunction StoreIntro({storeInfo, store, coupons }) {\n\n  console.log('storeInfo,',storeInfo);\n  console.log('store,',store);\n  // console.log(storeInfo);\n\n  return (\n    <div style={outerContainer}>\n    <div style={introContainer}>\n      <img src={storeInfo.image} alt={storeInfo.name} style={imageStyle} />\n     <div style={storeInfoContainer}>\n      <h2>{store.storeName}</h2>\n      <ul style={infoList}>\n        <li>{store.storeDetailAddr}</li>\n        <li>{store.weekdayStartTime} ~ {store.weekdayEndTime}</li>\n        <li>{store.store}</li>\n      </ul>\n      </div>\n      {/* <div style={couponContainer}>\n        {coupons.map(coupon => (\n          <Coupon key={coupon.id} coupon={coupon} />\n        ))}\n      </div> */}\n    </div>\n    </div>\n  );\n}\n\nconst outerContainer = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '50vh', // 화면 높이를 100%로 설정 (필요한 경우 조절)\n  };\n\nconst introContainer = {\n    display: 'flex',\n    flexDirection: 'column', // children들을 열 방향으로 배열\n    alignItems: 'center', // children들을 가운데 정렬\n    backgroundColor: '#f0f0f0', // 연한 회색 배경\n    padding: '0px',\n    borderRadius: '8px', // 소프트한 테두리를 위한 둥근 모서리 추가\n    textAlign: 'center',\n    width : '70%',\n    height: '100%'\n};\n\nconst storeInfoContainer = {\n    textAlign: 'left', \n    padding: '20px',\n    marginBottom: '10px', // 쿠폰 컨테이너와의 간격을 조절\n    width : '100%',\n  };\n\nconst imageStyle = {\n  width: '100%',\n  height: 'auto',\n  objectFit: 'cover',\n};\n\nconst infoList = {\n  listStyleType: 'none',\n  padding: '0',\n  margin: '10px 0',\n};\n\n\nexport default StoreIntro;","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Review/ReviewSection.js",[],[],"/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Market/TabBar.js",[],[],"/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Market/OrderModal.js",["427","428"],[],"import React, { useState, useEffect } from 'react';\nimport './OrderModal.css';\n\nconst OrderModal = ({ menus, isOpen, onClose }) => {\n\nconst [order, setOrder] = useState({\n  orderType:'Q',\n  orderPrice:0,\n  orderRequest:'',\n  recipientPhone:'',\n  recipientName:'',\n  recipientZipcode:'',\n  recipientAddr:'',\n  recipientDetailAddr:'',\n  orderStatus:'',\n})\n\nconst [count, setCount] = useState(0)\n\n\n  // const handleItem = (order) => {\n  //   // 자식 컴포넌트의 스테이트 값을 받아서 처리\n  //   console.log('자식 컴포넌트의 스테이트:', order);\n  // };\n\n\n\n  // 폼 제출 핸들러: 여기에서 API 호출 등을 할 수 있습니다.\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // 여기에서 주문 정보를 처리합니다 (예: API 호출)\n    console.log('주문 정보:', order, '배송 방식:', order.orderType);\n    onClose(); \n  };\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setOrder(prevDetails => ({\n      ...prevDetails,\n      [name]: value,\n    }));\n  };\n\n\n  const [activeSection, setActiveSection] = useState('orderInfo'); // 현재 활성화된 섹션을 추적\n\n  const switchSection = (section) => {\n    setActiveSection(section);\n  };\n\n  if (!isOpen) return null;\n\n\n  return (\n    <div className=\"orderModalBackground\">\n      <div className=\"orderModalContainer\">\n        <div className=\"orderModalHeader\">\n          <button className=\"closeButton\" onClick={onClose}>X</button>\n        </div>\n\n        <div className=\"sectionButtons\">\n          <button onClick={() => switchSection('orderInfo')}>주문 정보</button>\n          <button onClick={() => switchSection('deliveryMethod')}>수령 방식</button>\n        </div>\n\n        {activeSection === 'orderInfo' && (\n          <form onSubmit={handleSubmit}>\n            <h2>주문 정보</h2>\n\n            <div>\n              {menus.map((menu) => \n                // <OrderItem menu={menu} handleItem={handleItem} key={menu.menuNo} />\n\n                <div className='order-item-box'>\n      \n                  <div style={{overflow:'hidden'}}>\n                    <img src='/images/fish1.jpg'/>\n                  </div>\n            \n                  <div>\n                    <p>{menu.menuName}</p>\n                  </div>\n            \n                  <div>\n                    <p>{menu.menuSize}</p>\n                  </div>\n            \n                  <div>\n                  <p>{menu.menuPrice}</p>\n                  </div>\n          \n                <div>\n                  <input\n                        type=\"number\"\n                        value={count}\n                        onChange={(e) => (setCount(e.target.value))}\n                      />\n                </div>\n                \n              </div>\n              )}\n            </div>\n\n            <button type=\"submit\">주문 정보 제출</button>\n          </form>\n        )}\n\n\n\n        {activeSection === 'deliveryMethod' && (\n          <div>\n            {/* 수령 방식 선택 부분 */}\n            <h2>수령 방식</h2>\n\n            <div>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"orderType\"\n                  value='Q'\n                  checked={order.orderType === 'Q'}\n                  onChange={handleInputChange}\n                />\n                퀵배송\n              </label>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"orderType\"\n                  value='P'\n                  checked={order.orderType === 'P'}\n                  onChange={handleInputChange}\n                />\n                포장\n              </label>\n            </div>\n\n            <h2>수령 정보</h2>\n            <input\n            type=\"text\"\n            name=\"recipientName\"\n            placeholder=\"이름\"\n            value={order.recipientName}\n            onChange={handleInputChange}\n            required\n          />\n          <input\n            type=\"text\"\n            name=\"recipientPhone\"\n            placeholder=\"전화번호\"\n            value={order.recipientPhone}\n            onChange={handleInputChange}\n            required\n          />\n          <input\n            type=\"text\"\n            name=\"recipientZipcode\"\n            placeholder=\"우편번호\"\n            value={order.recipientZipcode}\n            onChange={handleInputChange}\n            required\n          />\n          <input\n            type=\"text\"\n            name=\"recipientAddr\"\n            placeholder=\"기본주소\"\n            value={order.recipientAddr}\n            onChange={handleInputChange}\n            required\n          />\n          <input\n            type=\"text\"\n            name=\"recipientDetailAddr\"\n            placeholder=\"상세주소\"\n            value={order.recipientDetailAddr}\n            onChange={handleInputChange}\n            required\n          />\n          <input\n            type=\"text\"\n            name=\"orderRequest\"\n            placeholder=\"요청사항\"\n            value={order.orderRequest}\n            onChange={handleInputChange}\n            required\n          />\n            <button onClick={() => {console.log(order)}}>배송 방식 제출</button>\n          </div>\n        )}\n\n      </div>\n    </div>\n  );\n};\n\n\n\n// function OrderItem({ menu, handleItem }) {\n\n//   const [count, setCount] = useState(0)\n\n//   useEffect(() => {\n//     // 자식 컴포넌트의 스테이트가 변경될 때 콜백 함수 호출\n//     handleItem(count);\n//     console.log(\"handleItem 호출\", count)\n//   }, [count]);\n\n//   const handleCount = (e)=> {\n//     if (e.target.value >= 0) {\n//       setCount(e.target.value)\n//     } else {\n//       setCount(0)\n//     }\n//   };\n\n\n//   return (\n//     <>\n//     <div className='order-item-box'>\n      \n//       <div style={{overflow:'hidden'}}>\n//         <img src='/images/fish1.jpg'/>\n//       </div>\n\n//       <div>\n//         <p>{menu.menuName}</p>\n//       </div>\n\n//       <div>\n//         <p>{menu.menuSize}</p>\n//       </div>\n\n//       <div>\n//        <p>{menu.menuPrice}</p>\n//       </div>\n\n//       <div>\n//         {/* <button onClick={()=>setCount(count + 1)}>+</button> */}\n//         <input\n//               type=\"number\"\n//               value={count}\n//               onChange={handleCount}\n//             />\n//         {/* <button onClick={()=>setCount(count + 1)}>-</button> */}\n//       </div>\n      \n//     </div>\n//     </>\n//   );\n// }\n\n          \n\nexport default OrderModal;\n","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Market/StoreListItem.js",["429","430","431","432","433","434","435","436"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport styles from './StoreListItem.module.css';\nimport { Link } from 'react-router-dom';\nimport { isOpenNow, sendAxiosRequest, startEndTimeInfo } from '../utility/common';\n\nfunction StoreListItem(props) {\n  let [store, setStore] = useState(props.data);\n  let [open, setOpen] = useState('O');\n\n  useEffect(() => {\n    let startEndTime = startEndTimeInfo(store);\n    let openStatus = isOpenNow(startEndTime[0], startEndTime[1]);\n    setOpen(openStatus);\n  }, []);\n\n  return (\n    <div className={styles.storeListItemBox}>\n      <img src='/images/boss.png' className={styles.storeListItemBoss} />\n      <div className={styles.storeListItemDetailTop}>\n        <div className={styles.storeListItemHeader}>\n          <strong className={styles.storeListItemDetailName}>{store.storeName}</strong>\n          <span className={styles.storeListItemDetailMarket}>{store.marketName}</span>\n        </div>\n        <p className={styles.storeListItemDetailIntroduce}>{store.storeAddr}</p>\n\n        <p className={styles.storeListItemBoxReview}>\n          <img className={styles.storeListItemFresh} src='/images/fresh.png' />5.0 (1024)\n        </p>\n        <p className={styles.storeListItemBoxState}>\n          <img className={styles.storeListItemStateIcon} src='/images/heart.png' />\n          {open == 'O' ? '영업중' : '영업종료'}\n        </p>\n        <div className={styles.storeListItemDetailBoxMore}>\n          <Link to=\"/market/detail\">더보기&gt;</Link>\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default StoreListItem;","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Notice/NoticeListItem.js",[],[],"/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Chat/Chat.js",["437","438"],[],"import React, { useState, useRef, useEffect } from 'react';\nimport { MessageBox, ChatList } from 'react-chat-elements';\nimport 'react-chat-elements/dist/main.css';\nimport axios from 'axios';\n\nconst Chat = ({ closeModal }) => {\n    const [chatMessage, setChatMessage] = useState('');\n    const [response, setResponse] = useState('');\n    const [messages, setMessages] = useState([]);\n    const chatContainerRef = useRef(null);\n\n    const handleMessage = async () => {\n        try {\n            const response = await axios.post('/api/chat/message', chatMessage, {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n\n            setMessages((prevMessages) => [\n                ...prevMessages,\n                {\n                    position: 'right',\n                    type: 'text',\n                    text: chatMessage,\n                    date: new Date(),\n                },\n                {\n                    position: 'left',\n                    type: 'text',\n                    text: response.data,\n                    date: new Date(),\n                },\n            ]);\n\n            setResponse(response.data);\n            setChatMessage('');\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    };\n\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            handleMessage();\n        }\n    };\n\n    useEffect(() => {\n        chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }, [messages]);\n\n    const handleOutsideClick = (e) => {\n        if (e.target.classList.contains('chat-modal-container')) {\n            closeModal();\n        }\n    };\n\n    return (\n        <div\n            className=\"chat-modal-container\"\n            style={{\n                position: 'fixed',\n                top: 0,\n                left: 0,\n                width: '100%',\n                height: '100%',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                zIndex: 9999,\n            }}\n            onClick={handleOutsideClick}\n        >\n            <div\n                style={{\n                    backgroundColor: '#2F80ED',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    padding: '20px',\n                    maxWidth: '600px',\n                    width: '70%',\n                    borderRadius: '20px',\n                    position: 'relative',\n                    maxHeight: '100%',\n                    overflow: 'auto',\n                }}\n            >\n                <ChatList\n                    className=\"chat-list\"\n                    dataSource={[\n                        {\n                            avatar: 'https://www.pngfind.com/pngs/m/676-6764066_fish-cartoon-images-fish-logo-png-transparent-png.png',\n                            alt: 'Fish',\n                            title: 'BA_ChatBot',\n                            subtitle: '무엇이든 물어보세요',\n                            date: new Date(),\n                            unread: 0,\n                        },\n                    ]}\n                    style={{ marginBottom: '20px' }}\n                />\n                <div\n                    ref={chatContainerRef}\n                    style={{ flex: '1', overflowY: 'auto', marginTop: '10px' }}\n                >\n                    {messages.map((message, index) => (\n                        <MessageBox\n                            key={index}\n                            position={message.position}\n                            type={message.type}\n                            text={message.text}\n                            date={message.date}\n                            avatar={\n                                message.position === 'left'\n                                    ? 'https://www.pngfind.com/pngs/m/676-6764066_fish-cartoon-images-fish-logo-png-transparent-png.png'\n                                    : null\n                            }\n                            text={message.text}\n                            title={message.position === 'left' ? 'BA_ChatBot' : 'You'}\n                            titleColor={message.position === 'left' ? '#FFFFFF' : '#4CAF50'}\n                            textFontSize={16}\n                            textFontColor=\"#333\"\n                            style={{\n                                backgroundColor: message.position === 'left' ? '#FFFFFF' : '#DCF8C6',\n                                borderRadius: message.position === 'left' ? '0px 10px 10px 10px' : '10px 0px 10px 10px',\n                                padding: '10px 15px',\n                                maxWidth: '70%',\n                                alignSelf: message.position === 'left' ? 'flex-start' : 'flex-end',\n                                marginBottom: 10,\n                            }}\n                        />\n                    ))}\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center', marginTop: '20px' }}>\n                    <input\n                        type=\"text\"\n                        value={chatMessage}\n                        onChange={(e) => setChatMessage(e.target.value)}\n                        onKeyPress={handleKeyPress}\n                        style={{ flex: '1', padding: '15px', borderRadius: '30px', border: 'none', fontSize: '16px' }}\n                        placeholder=\"메시지를 입력하세요...\"\n                    />\n                    <button\n                        onClick={handleMessage}\n                        style={{\n                            marginLeft: '10px',\n                            padding: '15px 25px',\n                            borderRadius: '30px',\n                            border: 'none',\n                            backgroundColor: '#4CAF50',\n                            color: '#fff',\n                            cursor: 'pointer',\n                            fontSize: '16px',\n                        }}\n                    >\n                        보내기\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Chat;\n","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Admin/AdminNoticeListItem.js",[],[],"/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/MainPage/Button.js",[],[],"/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/MainPage/Announce.js",["439","440","441"],[],"/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/MainPage/Category.js",["442","443","444"],[],"import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport styles from './Category.module.css';\n\n\nfunction Category() {\n\n  const [selectedOption, setSelectedOption] = useState('');\n\n  const handleOptionChange = (event) => {\n    setSelectedOption(event.target.value);}\n\n  return (\n    <>\n      <select value={selectedOption} onChange={handleOptionChange}>\n        <option value=\"option1\">옵션 1</option>\n        <option value=\"option2\">옵션 2</option>\n        <option value=\"option3\">옵션 3</option>\n      </select>\n\n      <p>{selectedOption}</p>\n    </>\n  );\n}\n\nexport default Category;","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/StoreHomeItem.js",["445","446","447","448","449","450","451","452","453","454","455","456"],[],"import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport styles from './StoreHomeItem.module.css';\nimport { Link, NavLink } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Placeholder from 'react-bootstrap/Placeholder';\nimport { useNavigate } from \"react-router-dom\";\n\n\n\nfunction StoreHomeItem({store}) {\n\n  function isCurrentTimeInRange(startTime, endTime) {\n    // 현재 날짜와 시간을 생성\n    const currentDate = new Date();\n    // 시작 시간과 종료 시간을 파싱 (예: \"08:00\" 형식)\n    \n    // 현재 시간이 시작 시간과 종료 시간 사이에 있는지 확인\n    return currentDate >= startTime && currentDate <= endTime;\n  }\n\n  const startTime = new Date();\n  const [startHours, startMinutes, startSecond] = store.weekdayStartTime.split(':');\n  startTime.setHours(parseInt(startHours, 10));\n  startTime.setMinutes(parseInt(startMinutes, 10));\n  // startTime.setSecond(parseInt(startSecond, 10));\n\n  const endTime = new Date();\n  const [endHours, endMinutes, endSecond] = store.weekdayEndTime.split(':');\n  endTime.setHours(parseInt(endHours, 10));\n  endTime.setMinutes(parseInt(endMinutes, 10));\n  // endTime.setSecond(parseInt(endSecond, 10));\n\n  \n  const isWorking = isCurrentTimeInRange(startTime, endTime) ? '영업중' : '영업 종료';\n\n  // console.log(store);\n\n\n\n  return (\n    <>\n    <Link to={'/market/detail'}\n      state= {store}\n      className={styles.storeHomeItemDetailBoxMore}>\n      <Card style={{ width: '18rem' }}>\n        <img className={styles.storeHomeItemBoss} variant=\"top\" src=\"/images/boss.png\" />\n        <div className={styles.storeHomeItemHeader}>\n          <p className={styles.storeHomeItemTitle}>{store.storeName}</p>\n          <p className={styles.storeHomeItemBoxReview}>\n            <img className={styles.storeHomeItemFresh}src=\"/images/fresh.png\"/>5.0\n          </p>\n        </div>\n        <div>\n        <p className={styles.storeHomeItemBoxReview}>\n        <img className={styles.storeHomeItemStateIcon} src=\"/images/heart.png\"/>{isWorking}</p>\n        </div>\n        {/* <Button className={styles.storeHomeItemDetailBoxMore}>\n          <Link to=\"/\" variant=\"primary\">더보기</Link>\n        </Button> */}\n      </Card>\n    </Link>\n    </>\n  )\n}\n\nexport default StoreHomeItem;","/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Review/ReviewList.js",[],[],"/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/Coupon/Coupon.js",[],[],"/Users/shinhyunwoo/bleuauction/bleuauction_fe/src/components/OS/OS.js",[],[],{"ruleId":"457","severity":1,"message":"458","line":1,"column":17,"nodeType":"459","messageId":"460","endLine":1,"endColumn":26},{"ruleId":"457","severity":1,"message":"461","line":1,"column":28,"nodeType":"459","messageId":"460","endLine":1,"endColumn":36},{"ruleId":"457","severity":1,"message":"462","line":3,"column":8,"nodeType":"459","messageId":"460","endLine":3,"endColumn":13},{"ruleId":"457","severity":1,"message":"463","line":3,"column":17,"nodeType":"459","messageId":"460","endLine":3,"endColumn":27},{"ruleId":"457","severity":1,"message":"464","line":4,"column":10,"nodeType":"459","messageId":"460","endLine":4,"endColumn":19},{"ruleId":"457","severity":1,"message":"465","line":4,"column":21,"nodeType":"459","messageId":"460","endLine":4,"endColumn":37},{"ruleId":"466","replacedBy":"467"},{"ruleId":"457","severity":1,"message":"462","line":2,"column":10,"nodeType":"459","messageId":"460","endLine":2,"endColumn":15},{"ruleId":"457","severity":1,"message":"463","line":2,"column":17,"nodeType":"459","messageId":"460","endLine":2,"endColumn":27},{"ruleId":"457","severity":1,"message":"468","line":5,"column":10,"nodeType":"459","messageId":"460","endLine":5,"endColumn":17},{"ruleId":"457","severity":1,"message":"469","line":6,"column":31,"nodeType":"459","messageId":"460","endLine":6,"endColumn":45},{"ruleId":"457","severity":1,"message":"470","line":6,"column":47,"nodeType":"459","messageId":"460","endLine":6,"endColumn":63},{"ruleId":"457","severity":1,"message":"471","line":22,"column":7,"nodeType":"459","messageId":"460","endLine":22,"endColumn":16},{"ruleId":"472","severity":1,"message":"473","line":43,"column":6,"nodeType":"474","endLine":43,"endColumn":8,"suggestions":"475"},{"ruleId":"457","severity":1,"message":"458","line":1,"column":17,"nodeType":"459","messageId":"460","endLine":1,"endColumn":26},{"ruleId":"457","severity":1,"message":"461","line":1,"column":28,"nodeType":"459","messageId":"460","endLine":1,"endColumn":36},{"ruleId":"457","severity":1,"message":"462","line":2,"column":8,"nodeType":"459","messageId":"460","endLine":2,"endColumn":13},{"ruleId":"457","severity":1,"message":"463","line":2,"column":17,"nodeType":"459","messageId":"460","endLine":2,"endColumn":27},{"ruleId":"457","severity":1,"message":"476","line":22,"column":8,"nodeType":"459","messageId":"460","endLine":22,"endColumn":20},{"ruleId":"457","severity":1,"message":"465","line":30,"column":10,"nodeType":"459","messageId":"460","endLine":30,"endColumn":26},{"ruleId":"457","severity":1,"message":"477","line":41,"column":11,"nodeType":"459","messageId":"460","endLine":41,"endColumn":15},{"ruleId":"457","severity":1,"message":"478","line":41,"column":17,"nodeType":"459","messageId":"460","endLine":41,"endColumn":22},{"ruleId":"457","severity":1,"message":"462","line":3,"column":8,"nodeType":"459","messageId":"460","endLine":3,"endColumn":13},{"ruleId":"457","severity":1,"message":"464","line":4,"column":10,"nodeType":"459","messageId":"460","endLine":4,"endColumn":19},{"ruleId":"457","severity":1,"message":"479","line":31,"column":9,"nodeType":"459","messageId":"460","endLine":31,"endColumn":16},{"ruleId":"457","severity":1,"message":"463","line":12,"column":10,"nodeType":"459","messageId":"460","endLine":12,"endColumn":20},{"ruleId":"457","severity":1,"message":"461","line":13,"column":10,"nodeType":"459","messageId":"460","endLine":13,"endColumn":18},{"ruleId":"457","severity":1,"message":"480","line":13,"column":20,"nodeType":"459","messageId":"460","endLine":13,"endColumn":30},{"ruleId":"457","severity":1,"message":"468","line":14,"column":10,"nodeType":"459","messageId":"460","endLine":14,"endColumn":17},{"ruleId":"457","severity":1,"message":"464","line":15,"column":10,"nodeType":"459","messageId":"460","endLine":15,"endColumn":19},{"ruleId":"457","severity":1,"message":"462","line":16,"column":8,"nodeType":"459","messageId":"460","endLine":16,"endColumn":13},{"ruleId":"457","severity":1,"message":"462","line":2,"column":8,"nodeType":"459","messageId":"460","endLine":2,"endColumn":13},{"ruleId":"457","severity":1,"message":"458","line":1,"column":16,"nodeType":"459","messageId":"460","endLine":1,"endColumn":25},{"ruleId":"457","severity":1,"message":"461","line":1,"column":27,"nodeType":"459","messageId":"460","endLine":1,"endColumn":35},{"ruleId":"457","severity":1,"message":"462","line":2,"column":8,"nodeType":"459","messageId":"460","endLine":2,"endColumn":13},{"ruleId":"481","severity":1,"message":"482","line":9,"column":7,"nodeType":"483","endLine":9,"endColumn":41},{"ruleId":"457","severity":1,"message":"484","line":3,"column":10,"nodeType":"459","messageId":"460","endLine":3,"endColumn":35},{"ruleId":"457","severity":1,"message":"485","line":5,"column":10,"nodeType":"459","messageId":"460","endLine":5,"endColumn":21},{"ruleId":"457","severity":1,"message":"486","line":5,"column":23,"nodeType":"459","messageId":"460","endLine":5,"endColumn":32},{"ruleId":"457","severity":1,"message":"461","line":1,"column":17,"nodeType":"459","messageId":"460","endLine":1,"endColumn":25},{"ruleId":"487","severity":1,"message":"488","line":125,"column":5,"nodeType":"489","messageId":"490","endLine":125,"endColumn":15},{"ruleId":"457","severity":1,"message":"491","line":3,"column":10,"nodeType":"459","messageId":"460","endLine":3,"endColumn":14},{"ruleId":"457","severity":1,"message":"492","line":3,"column":16,"nodeType":"459","messageId":"460","endLine":3,"endColumn":20},{"ruleId":"457","severity":1,"message":"493","line":3,"column":22,"nodeType":"459","messageId":"460","endLine":3,"endColumn":28},{"ruleId":"457","severity":1,"message":"494","line":4,"column":10,"nodeType":"459","messageId":"460","endLine":4,"endColumn":14},{"ruleId":"457","severity":1,"message":"485","line":4,"column":16,"nodeType":"459","messageId":"460","endLine":4,"endColumn":27},{"ruleId":"457","severity":1,"message":"462","line":5,"column":8,"nodeType":"459","messageId":"460","endLine":5,"endColumn":13},{"ruleId":"457","severity":1,"message":"495","line":10,"column":3,"nodeType":"459","messageId":"460","endLine":10,"endColumn":17},{"ruleId":"457","severity":1,"message":"496","line":10,"column":35,"nodeType":"459","messageId":"460","endLine":10,"endColumn":57},{"ruleId":"457","severity":1,"message":"468","line":12,"column":10,"nodeType":"459","messageId":"460","endLine":12,"endColumn":17},{"ruleId":"457","severity":1,"message":"497","line":13,"column":8,"nodeType":"459","messageId":"460","endLine":13,"endColumn":17},{"ruleId":"457","severity":1,"message":"498","line":114,"column":10,"nodeType":"459","messageId":"460","endLine":114,"endColumn":15},{"ruleId":"457","severity":1,"message":"499","line":2,"column":10,"nodeType":"459","messageId":"460","endLine":2,"endColumn":14},{"ruleId":"457","severity":1,"message":"462","line":3,"column":8,"nodeType":"459","messageId":"460","endLine":3,"endColumn":13},{"ruleId":"457","severity":1,"message":"500","line":10,"column":10,"nodeType":"459","messageId":"460","endLine":10,"endColumn":18},{"ruleId":"457","severity":1,"message":"468","line":12,"column":10,"nodeType":"459","messageId":"460","endLine":12,"endColumn":17},{"ruleId":"472","severity":1,"message":"501","line":46,"column":6,"nodeType":"474","endLine":46,"endColumn":13,"suggestions":"502"},{"ruleId":"457","severity":1,"message":"462","line":2,"column":8,"nodeType":"459","messageId":"460","endLine":2,"endColumn":13},{"ruleId":"457","severity":1,"message":"503","line":4,"column":8,"nodeType":"459","messageId":"460","endLine":4,"endColumn":14},{"ruleId":"457","severity":1,"message":"504","line":5,"column":8,"nodeType":"459","messageId":"460","endLine":5,"endColumn":16},{"ruleId":"457","severity":1,"message":"505","line":7,"column":8,"nodeType":"459","messageId":"460","endLine":7,"endColumn":17},{"ruleId":"457","severity":1,"message":"506","line":8,"column":10,"nodeType":"459","messageId":"460","endLine":8,"endColumn":16},{"ruleId":"457","severity":1,"message":"507","line":8,"column":18,"nodeType":"459","messageId":"460","endLine":8,"endColumn":23},{"ruleId":"457","severity":1,"message":"464","line":9,"column":10,"nodeType":"459","messageId":"460","endLine":9,"endColumn":19},{"ruleId":"457","severity":1,"message":"469","line":9,"column":54,"nodeType":"459","messageId":"460","endLine":9,"endColumn":68},{"ruleId":"457","severity":1,"message":"495","line":9,"column":70,"nodeType":"459","messageId":"460","endLine":9,"endColumn":84},{"ruleId":"457","severity":1,"message":"497","line":11,"column":8,"nodeType":"459","messageId":"460","endLine":11,"endColumn":17},{"ruleId":"472","severity":1,"message":"508","line":27,"column":6,"nodeType":"474","endLine":27,"endColumn":8,"suggestions":"509"},{"ruleId":"472","severity":1,"message":"510","line":56,"column":6,"nodeType":"474","endLine":56,"endColumn":30,"suggestions":"511"},{"ruleId":"457","severity":1,"message":"512","line":1,"column":28,"nodeType":"459","messageId":"460","endLine":1,"endColumn":38},{"ruleId":"472","severity":1,"message":"513","line":17,"column":6,"nodeType":"474","endLine":17,"endColumn":8,"suggestions":"514"},{"ruleId":"481","severity":1,"message":"482","line":37,"column":9,"nodeType":"483","endLine":37,"endColumn":39},{"ruleId":"515","severity":1,"message":"516","line":26,"column":38,"nodeType":"517","messageId":"490","endLine":26,"endColumn":40},{"ruleId":"457","severity":1,"message":"518","line":42,"column":19,"nodeType":"459","messageId":"460","endLine":42,"endColumn":31},{"ruleId":"457","severity":1,"message":"519","line":44,"column":8,"nodeType":"459","messageId":"460","endLine":44,"endColumn":16},{"ruleId":"515","severity":1,"message":"516","line":47,"column":38,"nodeType":"517","messageId":"490","endLine":47,"endColumn":40},{"ruleId":"481","severity":1,"message":"482","line":53,"column":9,"nodeType":"483","endLine":53,"endColumn":147},{"ruleId":"481","severity":1,"message":"482","line":56,"column":65,"nodeType":"483","endLine":56,"endColumn":94},{"ruleId":"481","severity":1,"message":"482","line":57,"column":68,"nodeType":"483","endLine":57,"endColumn":97},{"ruleId":"481","severity":1,"message":"482","line":58,"column":66,"nodeType":"483","endLine":58,"endColumn":96},{"ruleId":"472","severity":1,"message":"520","line":146,"column":6,"nodeType":"474","endLine":146,"endColumn":31,"suggestions":"521"},{"ruleId":"472","severity":1,"message":"522","line":158,"column":6,"nodeType":"474","endLine":158,"endColumn":8,"suggestions":"523"},{"ruleId":"481","severity":1,"message":"482","line":170,"column":15,"nodeType":"483","endLine":170,"endColumn":154},{"ruleId":"481","severity":1,"message":"482","line":178,"column":19,"nodeType":"483","endLine":178,"endColumn":48},{"ruleId":"481","severity":1,"message":"482","line":182,"column":19,"nodeType":"483","endLine":182,"endColumn":48},{"ruleId":"481","severity":1,"message":"482","line":186,"column":19,"nodeType":"483","endLine":186,"endColumn":49},{"ruleId":"481","severity":1,"message":"482","line":196,"column":19,"nodeType":"483","endLine":196,"endColumn":227},{"ruleId":"481","severity":1,"message":"482","line":202,"column":27,"nodeType":"483","endLine":209,"endColumn":32},{"ruleId":"515","severity":1,"message":"524","line":217,"column":39,"nodeType":"517","messageId":"490","endLine":217,"endColumn":41},{"ruleId":"515","severity":1,"message":"524","line":223,"column":37,"nodeType":"517","messageId":"490","endLine":223,"endColumn":39},{"ruleId":"515","severity":1,"message":"524","line":276,"column":30,"nodeType":"517","messageId":"490","endLine":276,"endColumn":32},{"ruleId":"457","severity":1,"message":"525","line":334,"column":9,"nodeType":"459","messageId":"460","endLine":334,"endColumn":19},{"ruleId":"472","severity":1,"message":"526","line":359,"column":6,"nodeType":"474","endLine":359,"endColumn":8,"suggestions":"527"},{"ruleId":"481","severity":1,"message":"482","line":368,"column":15,"nodeType":"483","endLine":368,"endColumn":154},{"ruleId":"515","severity":1,"message":"524","line":374,"column":37,"nodeType":"517","messageId":"490","endLine":374,"endColumn":39},{"ruleId":"457","severity":1,"message":"458","line":1,"column":27,"nodeType":"459","messageId":"460","endLine":1,"endColumn":36},{"ruleId":"457","severity":1,"message":"462","line":2,"column":8,"nodeType":"459","messageId":"460","endLine":2,"endColumn":13},{"ruleId":"457","severity":1,"message":"528","line":6,"column":10,"nodeType":"459","messageId":"460","endLine":6,"endColumn":16},{"ruleId":"457","severity":1,"message":"529","line":54,"column":9,"nodeType":"459","messageId":"460","endLine":54,"endColumn":14},{"ruleId":"457","severity":1,"message":"499","line":3,"column":10,"nodeType":"459","messageId":"460","endLine":3,"endColumn":14},{"ruleId":"457","severity":1,"message":"506","line":5,"column":10,"nodeType":"459","messageId":"460","endLine":5,"endColumn":16},{"ruleId":"457","severity":1,"message":"507","line":5,"column":18,"nodeType":"459","messageId":"460","endLine":5,"endColumn":23},{"ruleId":"457","severity":1,"message":"530","line":1,"column":38,"nodeType":"459","messageId":"460","endLine":1,"endColumn":44},{"ruleId":"457","severity":1,"message":"462","line":2,"column":8,"nodeType":"459","messageId":"460","endLine":2,"endColumn":13},{"ruleId":"457","severity":1,"message":"531","line":3,"column":10,"nodeType":"459","messageId":"460","endLine":3,"endColumn":18},{"ruleId":"457","severity":1,"message":"469","line":6,"column":85,"nodeType":"459","messageId":"460","endLine":6,"endColumn":99},{"ruleId":"457","severity":1,"message":"496","line":6,"column":101,"nodeType":"459","messageId":"460","endLine":6,"endColumn":123},{"ruleId":"457","severity":1,"message":"532","line":10,"column":8,"nodeType":"459","messageId":"460","endLine":10,"endColumn":20},{"ruleId":"457","severity":1,"message":"533","line":13,"column":10,"nodeType":"459","messageId":"460","endLine":13,"endColumn":26},{"ruleId":"457","severity":1,"message":"534","line":53,"column":7,"nodeType":"459","messageId":"460","endLine":53,"endColumn":26},{"ruleId":"457","severity":1,"message":"535","line":185,"column":21,"nodeType":"459","messageId":"460","endLine":185,"endColumn":30},{"ruleId":"515","severity":1,"message":"524","line":270,"column":41,"nodeType":"517","messageId":"490","endLine":270,"endColumn":43},{"ruleId":"457","severity":1,"message":"462","line":2,"column":8,"nodeType":"459","messageId":"460","endLine":2,"endColumn":13},{"ruleId":"457","severity":1,"message":"536","line":4,"column":8,"nodeType":"459","messageId":"460","endLine":4,"endColumn":21},{"ruleId":"457","severity":1,"message":"506","line":6,"column":10,"nodeType":"459","messageId":"460","endLine":6,"endColumn":16},{"ruleId":"457","severity":1,"message":"507","line":6,"column":18,"nodeType":"459","messageId":"460","endLine":6,"endColumn":23},{"ruleId":"457","severity":1,"message":"537","line":7,"column":10,"nodeType":"459","messageId":"460","endLine":7,"endColumn":28},{"ruleId":"457","severity":1,"message":"538","line":7,"column":30,"nodeType":"459","messageId":"460","endLine":7,"endColumn":49},{"ruleId":"457","severity":1,"message":"539","line":8,"column":10,"nodeType":"459","messageId":"460","endLine":8,"endColumn":33},{"ruleId":"457","severity":1,"message":"540","line":13,"column":24,"nodeType":"459","messageId":"460","endLine":13,"endColumn":39},{"ruleId":"457","severity":1,"message":"541","line":14,"column":9,"nodeType":"459","messageId":"460","endLine":14,"endColumn":20},{"ruleId":"472","severity":1,"message":"542","line":55,"column":6,"nodeType":"474","endLine":55,"endColumn":8,"suggestions":"543"},{"ruleId":"457","severity":1,"message":"462","line":3,"column":8,"nodeType":"459","messageId":"460","endLine":3,"endColumn":13},{"ruleId":"457","severity":1,"message":"458","line":1,"column":17,"nodeType":"459","messageId":"460","endLine":1,"endColumn":26},{"ruleId":"457","severity":1,"message":"462","line":2,"column":8,"nodeType":"459","messageId":"460","endLine":2,"endColumn":13},{"ruleId":"457","severity":1,"message":"544","line":6,"column":22,"nodeType":"459","messageId":"460","endLine":6,"endColumn":30},{"ruleId":"457","severity":1,"message":"506","line":5,"column":10,"nodeType":"459","messageId":"460","endLine":5,"endColumn":16},{"ruleId":"457","severity":1,"message":"507","line":5,"column":18,"nodeType":"459","messageId":"460","endLine":5,"endColumn":23},{"ruleId":"457","severity":1,"message":"545","line":34,"column":9,"nodeType":"459","messageId":"460","endLine":34,"endColumn":14},{"ruleId":"457","severity":1,"message":"546","line":37,"column":10,"nodeType":"459","messageId":"460","endLine":37,"endColumn":13},{"ruleId":"457","severity":1,"message":"547","line":94,"column":17,"nodeType":"459","messageId":"460","endLine":94,"endColumn":21},{"ruleId":"515","severity":1,"message":"524","line":123,"column":36,"nodeType":"517","messageId":"490","endLine":123,"endColumn":38},{"ruleId":"457","severity":1,"message":"512","line":1,"column":28,"nodeType":"459","messageId":"460","endLine":1,"endColumn":38},{"ruleId":"457","severity":1,"message":"548","line":5,"column":8,"nodeType":"459","messageId":"460","endLine":5,"endColumn":21},{"ruleId":"472","severity":1,"message":"513","line":17,"column":6,"nodeType":"474","endLine":17,"endColumn":8,"suggestions":"549"},{"ruleId":"481","severity":1,"message":"482","line":40,"column":9,"nodeType":"483","endLine":40,"endColumn":39},{"ruleId":"457","severity":1,"message":"503","line":72,"column":8,"nodeType":"459","messageId":"460","endLine":72,"endColumn":14},{"ruleId":"457","severity":1,"message":"458","line":1,"column":27,"nodeType":"459","messageId":"460","endLine":1,"endColumn":36},{"ruleId":"481","severity":1,"message":"482","line":77,"column":21,"nodeType":"483","endLine":77,"endColumn":51},{"ruleId":"457","severity":1,"message":"462","line":2,"column":8,"nodeType":"459","messageId":"460","endLine":2,"endColumn":13},{"ruleId":"457","severity":1,"message":"465","line":5,"column":21,"nodeType":"459","messageId":"460","endLine":5,"endColumn":37},{"ruleId":"457","severity":1,"message":"550","line":8,"column":15,"nodeType":"459","messageId":"460","endLine":8,"endColumn":23},{"ruleId":"472","severity":1,"message":"551","line":15,"column":6,"nodeType":"474","endLine":15,"endColumn":8,"suggestions":"552"},{"ruleId":"481","severity":1,"message":"482","line":19,"column":7,"nodeType":"483","endLine":19,"endColumn":74},{"ruleId":"481","severity":1,"message":"482","line":28,"column":11,"nodeType":"483","endLine":28,"endColumn":80},{"ruleId":"481","severity":1,"message":"482","line":31,"column":11,"nodeType":"483","endLine":31,"endColumn":84},{"ruleId":"515","severity":1,"message":"524","line":32,"column":17,"nodeType":"517","messageId":"490","endLine":32,"endColumn":19},{"ruleId":"457","severity":1,"message":"553","line":8,"column":12,"nodeType":"459","messageId":"460","endLine":8,"endColumn":20},{"ruleId":"554","severity":1,"message":"555","line":120,"column":29,"nodeType":"556","messageId":"557","endLine":120,"endColumn":48},{"ruleId":"457","severity":1,"message":"458","line":1,"column":17,"nodeType":"459","messageId":"460","endLine":1,"endColumn":26},{"ruleId":"457","severity":1,"message":"461","line":1,"column":28,"nodeType":"459","messageId":"460","endLine":1,"endColumn":36},{"ruleId":"457","severity":1,"message":"462","line":2,"column":8,"nodeType":"459","messageId":"460","endLine":2,"endColumn":13},{"ruleId":"457","severity":1,"message":"458","line":1,"column":16,"nodeType":"459","messageId":"460","endLine":1,"endColumn":25},{"ruleId":"457","severity":1,"message":"462","line":2,"column":8,"nodeType":"459","messageId":"460","endLine":2,"endColumn":13},{"ruleId":"457","severity":1,"message":"558","line":3,"column":8,"nodeType":"459","messageId":"460","endLine":3,"endColumn":14},{"ruleId":"457","severity":1,"message":"458","line":1,"column":16,"nodeType":"459","messageId":"460","endLine":1,"endColumn":25},{"ruleId":"457","severity":1,"message":"461","line":1,"column":27,"nodeType":"459","messageId":"460","endLine":1,"endColumn":35},{"ruleId":"457","severity":1,"message":"462","line":2,"column":8,"nodeType":"459","messageId":"460","endLine":2,"endColumn":13},{"ruleId":"457","severity":1,"message":"559","line":4,"column":16,"nodeType":"459","messageId":"460","endLine":4,"endColumn":23},{"ruleId":"457","severity":1,"message":"493","line":5,"column":8,"nodeType":"459","messageId":"460","endLine":5,"endColumn":14},{"ruleId":"457","severity":1,"message":"560","line":7,"column":8,"nodeType":"459","messageId":"460","endLine":7,"endColumn":19},{"ruleId":"457","severity":1,"message":"485","line":8,"column":10,"nodeType":"459","messageId":"460","endLine":8,"endColumn":21},{"ruleId":"457","severity":1,"message":"561","line":24,"column":36,"nodeType":"459","messageId":"460","endLine":24,"endColumn":47},{"ruleId":"457","severity":1,"message":"562","line":30,"column":32,"nodeType":"459","messageId":"460","endLine":30,"endColumn":41},{"ruleId":"481","severity":1,"message":"482","line":48,"column":9,"nodeType":"483","endLine":48,"endColumn":90},{"ruleId":"481","severity":1,"message":"482","line":52,"column":13,"nodeType":"483","endLine":52,"endColumn":80},{"ruleId":"481","severity":1,"message":"482","line":57,"column":9,"nodeType":"483","endLine":57,"endColumn":81},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'axios' is defined but never used.","'formToJSON' is defined but never used.","'isOpenNow' is defined but never used.","'sendAxiosRequest' is defined but never used.","no-new-object",["563"],"'useUser' is defined but never used.","'getAccessToken' is defined but never used.","'getLoginUserInfo' is defined but never used.","'loginInit' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'accessToken', 'currentURL', 'decodedAccToken', and 'decodedRefToken'. Either include them or remove the dependency array.","ArrayExpression",["564"],"'UserProvider' is defined but never used.","'user' is assigned a value but never used.","'login' is assigned a value but never used.","'useForm' is assigned a value but never used.","'useContext' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'sendAxiosMultipartRequest' is defined but never used.","'useNavigate' is defined but never used.","'useParams' is defined but never used.","no-dupe-keys","Duplicate key 'transition'.","ObjectExpression","unexpected","'Form' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","'json' is defined but never used.","'isTokenExpired' is defined but never used.","'isNullUndefinedOrEmpty' is defined but never used.","'jwtDecode' is defined but never used.","'store' is assigned a value but never used.","'Link' is defined but never used.","'MenuItem' is defined but never used.","React Hook useEffect has a missing dependency: 'menuData'. Either include it or remove the dependency array.",["565"],"'Coupon' is defined but never used.","'Category' is defined but never used.","'StoreHome' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","React Hook useEffect has missing dependencies: 'accessToken' and 'newAddLength'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setStartPageNo' needs the current value of 'newAddLength'.",["566"],"React Hook useEffect has missing dependencies: 'accessToken' and 'newAddLength'. Either include them or remove the dependency array.",["567"],"'useReducer' is defined but never used.","React Hook useEffect has a missing dependency: 'orders'. Either include it or remove the dependency array.",["568"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'setLoginUser' is assigned a value but never used.","'memberNo' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'newAddLength'. Either include it or remove the dependency array.",["569"],"React Hook useEffect has a missing dependency: 'newAddLength'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setStartPageNo' needs the current value of 'newAddLength'.",["570"],"Expected '===' and instead saw '=='.","'pageRowCnt' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.reviewNo'. Either include it or remove the dependency array.",["571"],"'Hidden' is defined but never used.","'codes' is assigned a value but never used.","'useRef' is defined but never used.","'Carousel' is defined but never used.","'Handsontable' is defined but never used.","'registerRenderer' is defined but never used.","'recommendationItems' is assigned a value but never used.","'cellWidth' is assigned a value but never used.","'StoreListItem' is defined but never used.","'accessTokenRefresh' is defined but never used.","'refreshTokenInvalid' is defined but never used.","'accordionSummaryClasses' is defined but never used.","'setPageRowCount' is assigned a value but never used.","'accessToken' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'pageRowCount'. Either include it or remove the dependency array.",["572"],"'setState' is assigned a value but never used.","'payNo' is assigned a value but never used.","'pay' is assigned a value but never used.","'data' is assigned a value but never used.","'OrderMenuList' is defined but never used.",["573"],"'setStore' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'store'. Either include it or remove the dependency array.",["574"],"'response' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'styles' is defined but never used.","'NavLink' is defined but never used.","'Placeholder' is defined but never used.","'startSecond' is assigned a value but never used.","'endSecond' is assigned a value but never used.","no-object-constructor",{"desc":"575","fix":"576"},{"desc":"577","fix":"578"},{"desc":"579","fix":"580"},{"desc":"581","fix":"582"},{"desc":"583","fix":"584"},{"desc":"585","fix":"586"},{"desc":"587","fix":"588"},{"desc":"589","fix":"590"},{"desc":"591","fix":"592"},{"desc":"583","fix":"593"},{"desc":"594","fix":"595"},"Update the dependencies array to be: [accessToken, currentURL, decodedAccToken, decodedRefToken]",{"range":"596","text":"597"},"Update the dependencies array to be: [menuData, store]",{"range":"598","text":"599"},"Update the dependencies array to be: [accessToken, newAddLength]",{"range":"600","text":"601"},"Update the dependencies array to be: [accessToken, newAddLength, startPageNo, storeList]",{"range":"602","text":"603"},"Update the dependencies array to be: [orders]",{"range":"604","text":"605"},"Update the dependencies array to be: [startPageNo, reviewList, newAddLength]",{"range":"606","text":"607"},"Update the dependencies array to be: [newAddLength]",{"range":"608","text":"609"},"Update the dependencies array to be: [props.reviewNo]",{"range":"610","text":"611"},"Update the dependencies array to be: [pageRowCount]",{"range":"612","text":"613"},{"range":"614","text":"605"},"Update the dependencies array to be: [store]",{"range":"615","text":"616"},[1920,1922],"[accessToken, currentURL, decodedAccToken, decodedRefToken]",[1493,1500],"[menuData, store]",[1165,1167],"[accessToken, newAddLength]",[2177,2201],"[accessToken, newAddLength, startPageNo, storeList]",[428,430],"[orders]",[6231,6256],"[startPageNo, reviewList, newAddLength]",[6680,6682],"[newAddLength]",[15602,15604],"[props.reviewNo]",[2009,2011],"[pageRowCount]",[470,472],[537,539],"[store]"]