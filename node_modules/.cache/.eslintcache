[{"C:\\Users\\think\\git\\bleuauction_fe\\src\\index.js":"1","C:\\Users\\think\\git\\bleuauction_fe\\src\\App.js":"2","C:\\Users\\think\\git\\bleuauction_fe\\src\\reportWebVitals.js":"3","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Auth\\UserContext.js":"4","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Auth\\LoginPage.js":"5","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Auth\\RegisterPage.js":"6","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Menu\\MenuList.js":"7","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Common\\SideBar.js":"8","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Common\\Header.js":"9","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Test\\Test.js":"10","C:\\Users\\think\\git\\bleuauction_fe\\src\\routes\\Home.js":"11","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Common\\Footer.js":"12","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Menu\\MenuRegisterationForm.js":"13","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\TabBar.js":"14","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\StoreList.js":"15","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\MarketDetailPage.js":"16","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\StoreMyPage.js":"17","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\StoreItemRegister.js":"18","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\UserEditPage.js":"19","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\StoreRegisterPage.js":"20","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\MyPage.js":"21","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\MyOrder.js":"22","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\StoreItemDailyPrice\\StoreItemDailyPrice.js":"23","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\utility\\common.js":"24","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Pay\\Pay.js":"25","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Test\\test2.jsx":"26","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Review\\ReviewForm.js":"27","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\StoreHome.js":"28","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\StoreListItem.js":"29","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Menu\\MenuItem.js":"30","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\InputField.js":"31","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\StoreInfo.js":"32","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MainPage\\Category.js":"33","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\MyOrderContent.js":"34","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MainPage\\Announce.js":"35","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MainPage\\Button.js":"36","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\StoreHomeItem.js":"37","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Review\\ReviewList.js":"38","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Coupon\\Coupon.js":"39","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\StoreItemDailyPrice\\StoreItemAdd.js":"40","C:\\Users\\think\\git\\bleuauction_fe\\src\\routes\\StoreList.js":"41","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Chat\\Chat.js":"42","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Notice\\NoticeDetail.js":"43","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Notice\\NoticeList.js":"44","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Notice\\NoticeListItem.js":"45","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\OrderModal.js":"46","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Admin\\AdminNoticeList.js":"47","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Admin\\AdminNoticeDetail.js":"48","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Admin\\NoticeRegisterationForm.js":"49","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Admin\\AdminNoticeListItem.js":"50","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\OrderItem.js":"51","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\OrderMenuList.js":"52","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\StoreOrder.js":"53","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\StoreEdit.js":"54","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\OS\\OS.js":"55","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\StoreInfoDetail.js":"56","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\MenuDetail.js":"57","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\MenuEdit.js":"58"},{"size":661,"mtime":1697978277777,"results":"59","hashOfConfig":"60"},{"size":6292,"mtime":1698178966512,"results":"61","hashOfConfig":"60"},{"size":375,"mtime":1696236038543,"results":"62","hashOfConfig":"60"},{"size":1736,"mtime":1698143852517,"results":"63","hashOfConfig":"60"},{"size":5571,"mtime":1698144517012,"results":"64","hashOfConfig":"60"},{"size":6672,"mtime":1697693754234,"results":"65","hashOfConfig":"60"},{"size":1074,"mtime":1698143316555,"results":"66","hashOfConfig":"60"},{"size":1670,"mtime":1698144517014,"results":"67","hashOfConfig":"60"},{"size":3321,"mtime":1698143316537,"results":"68","hashOfConfig":"60"},{"size":1115,"mtime":1696943521784,"results":"69","hashOfConfig":"60"},{"size":2483,"mtime":1698144517029,"results":"70","hashOfConfig":"60"},{"size":285,"mtime":1697521231622,"results":"71","hashOfConfig":"60"},{"size":4185,"mtime":1698178966520,"results":"72","hashOfConfig":"60"},{"size":1388,"mtime":1697097424814,"results":"73","hashOfConfig":"60"},{"size":2621,"mtime":1698038999200,"results":"74","hashOfConfig":"60"},{"size":4046,"mtime":1698147117088,"results":"75","hashOfConfig":"60"},{"size":0,"mtime":1697691593162,"results":"76","hashOfConfig":"77"},{"size":8651,"mtime":1698143316569,"results":"78","hashOfConfig":"60"},{"size":7772,"mtime":1698186653102,"results":"79","hashOfConfig":"60"},{"size":7742,"mtime":1698178966527,"results":"80","hashOfConfig":"60"},{"size":4984,"mtime":1698178966525,"results":"81","hashOfConfig":"60"},{"size":2335,"mtime":1697521308636,"results":"82","hashOfConfig":"60"},{"size":9792,"mtime":1698143316581,"results":"83","hashOfConfig":"60"},{"size":7522,"mtime":1698176259059,"results":"84","hashOfConfig":"60"},{"size":4473,"mtime":1697713109592,"results":"85","hashOfConfig":"60"},{"size":470,"mtime":1696943521785,"results":"86","hashOfConfig":"60"},{"size":28674,"mtime":1698143316577,"results":"87","hashOfConfig":"60"},{"size":479,"mtime":1698144517019,"results":"88","hashOfConfig":"60"},{"size":1713,"mtime":1698143735814,"results":"89","hashOfConfig":"60"},{"size":2090,"mtime":1697691593156,"results":"90","hashOfConfig":"91"},{"size":381,"mtime":1698038999204,"results":"92","hashOfConfig":"60"},{"size":3782,"mtime":1698143316547,"results":"93","hashOfConfig":"60"},{"size":642,"mtime":1697097424806,"results":"94","hashOfConfig":"60"},{"size":2724,"mtime":1698178966524,"results":"95","hashOfConfig":"60"},{"size":1607,"mtime":1698178966519,"results":"96","hashOfConfig":"60"},{"size":436,"mtime":1697097424804,"results":"97","hashOfConfig":"60"},{"size":2417,"mtime":1697624654909,"results":"98","hashOfConfig":"60"},{"size":1326,"mtime":1697097424829,"results":"99","hashOfConfig":"60"},{"size":1441,"mtime":1697097424799,"results":"100","hashOfConfig":"60"},{"size":5903,"mtime":1698144517024,"results":"101","hashOfConfig":"60"},{"size":1055,"mtime":1697691593170,"results":"102","hashOfConfig":"77"},{"size":6453,"mtime":1697691593146,"results":"103","hashOfConfig":"60"},{"size":1491,"mtime":1698178966528,"results":"104","hashOfConfig":"60"},{"size":691,"mtime":1697691593167,"results":"105","hashOfConfig":"60"},{"size":1597,"mtime":1698178966529,"results":"106","hashOfConfig":"60"},{"size":7292,"mtime":1698178411278,"results":"107","hashOfConfig":"60"},{"size":730,"mtime":1698178966515,"results":"108","hashOfConfig":"60"},{"size":3084,"mtime":1698178966514,"results":"109","hashOfConfig":"60"},{"size":2772,"mtime":1698178966518,"results":"110","hashOfConfig":"60"},{"size":3034,"mtime":1698178966517,"results":"111","hashOfConfig":"60"},{"size":1703,"mtime":1698158898208,"results":"112","hashOfConfig":"60"},{"size":3032,"mtime":1698038717405,"results":"113","hashOfConfig":"60"},{"size":2523,"mtime":1698178966526,"results":"114","hashOfConfig":"60"},{"size":8706,"mtime":1698181355967,"results":"115","hashOfConfig":"60"},{"size":2236,"mtime":1698143316573,"results":"116","hashOfConfig":"60"},{"size":2455,"mtime":1698143316549,"results":"117","hashOfConfig":"60"},{"size":4087,"mtime":1698178966521,"results":"118","hashOfConfig":"60"},{"size":5391,"mtime":1698178966523,"results":"119","hashOfConfig":"60"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1okf9q7",{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"131ovsd",{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206"},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1u8wuzz",{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248"},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","suppressedMessages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258"},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"262","messages":"263","suppressedMessages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265"},{"filePath":"266","messages":"267","suppressedMessages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","suppressedMessages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272"},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"294","messages":"295","suppressedMessages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","suppressedMessages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"300","messages":"301","suppressedMessages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","suppressedMessages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","suppressedMessages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309"},{"filePath":"310","messages":"311","suppressedMessages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","suppressedMessages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\think\\git\\bleuauction_fe\\src\\index.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\App.js",["316","317","318","319","320","321","322","323","324"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\reportWebVitals.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Auth\\UserContext.js",["325","326"],[],"import { createContext, useContext, useState } from \"react\";\r\nimport { getAccessToken } from \"../utility/common\";\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport const useUser = () => {\r\n  return useContext(UserContext);\r\n};\r\n\r\nexport default function UserProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n\r\n  const login = (userData) => {\r\n    // 로그인 로직을 구현\r\n    setUser(userData);\r\n  };\r\n\r\n  const logout = () => {\r\n    // 로그아웃 로직을 구현\r\n    setUser(null);\r\n  };\r\n\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n\r\n\r\n// const Context = createContext({\r\n//     loggedUser: {\r\n//         username: '',\r\n//         email: '',\r\n//         first_name: '',\r\n//     },\r\n//     loggedIn: false,\r\n//     setLoggedUser: () => {},\r\n//     setLoggedIn: () => {}\r\n// });\r\n\r\n// export default Context;\r\n\r\n// const ContextProvider = ({children}) => {\r\n\r\n//   const setLoggedUser = (data) => {\r\n//       setState(prevState => (\r\n//           {\r\n//               ...prevState,\r\n//               loggedUser: data\r\n//           }\r\n//       ))\r\n//   }\r\n\r\n//   const setLoggedIn = () => {\r\n//       setState(prevState => (\r\n//           {\r\n//               ...prevState, \r\n//               loggedIn: !prevState.loggedIn\r\n//           }\r\n//       ))\r\n//   }\r\n\r\n//   const initialState = {\r\n//       loggedUser: {},\r\n//       loggedIn: false,\r\n//       setLoggedUser,\r\n//       setLoggedIn\r\n//   }\r\n\r\n//   const [state, setState] = useState(initialState);\r\n\r\n//   return (\r\n//       <Context.Provider value={state}>\r\n//           {children}\r\n//       </Context.Provider>\r\n//   )\r\n// }","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Auth\\LoginPage.js",["327","328","329","330","331","332"],[],"import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Link from '@mui/material/Link';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { formToJSON } from 'axios';\r\nimport { useState, useContext } from 'react';\r\nimport { useUser } from './UserContext';\r\nimport { isOpenNow, sendAxiosRequest, isTokenExpired } from '../utility/common';\r\nimport axios from 'axios';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\n\r\n\r\nconst defaultTheme = createTheme();\r\n\r\nfunction LoginPage() {\r\n  const navigate = useNavigate();\r\n  const {user, login} = useUser();\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.currentTarget);\r\n\r\n    const loginRequest = {\r\n      memberEmail: data.get('memberEmail'),\r\n      memberPwd: data.get('memberPwd')\r\n    };\r\n\r\n    sendAxiosRequest('/api/member/login', 'POST', loginRequest, response => {\r\n      const repDataList = response.data;\r\n      console.log('repDataList',repDataList);\r\n\r\n      if (repDataList) {\r\n        const accessToken = response.data.accessToken;\r\n        const refreshToken = response.data.refreshToken;\r\n        const loginUser = response.data.loginUser;\r\n        login(loginUser);\r\n        if (!isTokenExpired(accessToken) && !isTokenExpired(refreshToken)) {\r\n          sessionStorage.setItem('accessToken', accessToken);\r\n          localStorage.setItem('refreshToken', refreshToken);\r\n\r\n          const decodedAccessToken = jwtDecode(accessToken);\r\n          alert(\"'\" + decodedAccessToken.memberName + \"' 회원님 BLEU AUCTION에 오신 것을 환영합니다!\");\r\n          navigate('/');\r\n        }\r\n      }\r\n\r\n    }, error => console.log(error), 'application/json');\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={defaultTheme}>\r\n      <Grid container component=\"main\" sx={{ height: '100vh' }}>\r\n        <CssBaseline />\r\n        <Grid\r\n          item\r\n          xs={false}\r\n          sm={4}\r\n          md={7}\r\n          sx={{\r\n            backgroundImage: 'url(/images/login.png)',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundColor: (t) =>\r\n              t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n          }}\r\n        />\r\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <Box\r\n            sx={{\r\n              my: 27,\r\n              mx: 4,\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              안녕하세요 블루옥션입니다.\r\n            </Typography>\r\n            <Box component=\"form\" sx={{ mt: 1 }} noValidate onSubmit={handleSubmit}>\r\n              <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"memberEmail\"\r\n\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                InputProps={{ style: { borderRadius: '30px' } }}\r\n              />\r\n              <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"memberPwd\"\r\n\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                InputProps={{ style: { borderRadius: '30px' } }}\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{ mt: 3, mb: 2, borderRadius: '30px' }} // borderRadius 추가\r\n              >\r\n                Login\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{\r\n                  mt: 3,\r\n                  mb: 2,\r\n                  height: '40px', // 원하는 높이로 설정\r\n                  width: '100%', // LOGIN 버튼과 동일한 너비로 설정\r\n                  borderRadius: '30px',\r\n                  backgroundColor: '#FFEB00', // 카카오 노란색\r\n                  '&:hover': {\r\n                    backgroundColor: '#FFD600', // 노란색의 어두운 톤으로 hover 효과 추가\r\n                  },\r\n                }}\r\n              >\r\n                <img\r\n                  src=\"/images/kakao_login_medium_wide.png\" // 이미지 경로 수정\r\n                  alt=\"kakao-login\"\r\n                  style={{ height: '150%', width: '150%', objectFit: 'contain' }} // objectFit 속성 추가\r\n                />\r\n               </Button>\r\n                  <Grid container sx={{ mt: 2, justifyContent: 'flex-end' }}>\r\n                    <Grid item xs={6}>\r\n                      <Link href=\"/register\" variant=\"body2\">\r\n                        {\"회원가입\"}\r\n                      </Link>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n              </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Auth\\RegisterPage.js",["333","334","335"],[],"import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios, { formToJSON } from 'axios';\r\nimport { isOpenNow, sendAxiosRequest } from '../utility/common';\r\n\r\n// import DaumPostcode from 'react-daum-postcode';\r\n\r\n\r\n\r\n\r\nfunction RegisterPage() {\r\n\r\n  // const [showPostcode, setShowPostcode] = useState(false);\r\n\r\n  //   const handleAddress = (data) => {\r\n  //     handleChange({\r\n  //         target: {\r\n  //             name: \"zip\",\r\n  //             value: data.zonecode\r\n  //         }\r\n  //     });\r\n  //     handleChange({\r\n  //         target: {\r\n  //             name: \"address\",\r\n  //             value: data.address\r\n  //         }\r\n  //     });\r\n  //     setShowPostcode(false); // 주소 선택 후, 우편번호 찾기 창을 닫습니다.\r\n  // };\r\n\r\n  const useForm = (initialValues) => {\r\n    const [values, setValues] = useState(initialValues);  // values는 폼 컨트롤의 상태를 나타냄, initialValues로 초기 설정\r\n    const handleChange = (e) => {   //폼 컨트롤의 onChange 이벤트 핸들러\r\n      const { name, value } = e.target;\r\n      setValues({\r\n        ...values,\r\n        [name]: value,\r\n      });\r\n    };\r\n    return [values, handleChange];\r\n  };\r\n\r\n\r\n\r\n  // const [values, handleChange] = useForm({ //useForm은 초기 값 initialValues를 인수로 받음,  그 상태와 상태를 변경하는 함수를 반환하는 useForm 훅을 호출\r\n  //   email: '',\r\n  //   password: '',\r\n  //   name: '',\r\n  //   phone: '',\r\n  //   zip: '',\r\n  //   address: '',\r\n  //   detailAddress: '',\r\n  //   bank: '',\r\n  //   accountNumber: '',\r\n  //   accountType: '',\r\n  // });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // const requestData = { //객체는 폼에서 사용자가 입력한 데이터를 서버로 전송하기 위해 준비되는 데이터 구조\r\n  //   memberCategory: values.accountType,\r\n  //   memberEmail: values.email,      //values 객체의 email 속성 값을 requestData 객체의 email 속성에 할당\r\n  //   memberPwd: values.password,\r\n  //   memberName: values.name,\r\n  //   memberPhone: values.phone,\r\n  //   memberZipcode: values.zip,\r\n  //   memberAddr: values.address,\r\n  //   memberDetailAddr: values.detailAddress,\r\n  //   memberBank: values.bank,\r\n  //   memberAccount: values.accountNumber,\r\n  // };\r\n\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    let formData = new FormData(e.target);\r\n    let formObj = formToJSON(formData);\r\n    sendAxiosRequest('/api/member/signup', 'POST', formObj, response => {\r\n      console.log('응답값:', response.data);\r\n      alert('회원가입에 성공하셨습니다!');\r\n      navigate('/');\r\n    },\r\n      error => {\r\n        console.error('API 호출 중 에러 발생: ', error);\r\n        alert('회원가입에 실패하셨습니다!');\r\n      }\r\n    )\r\n  };\r\n\r\n  return (\r\n    <div style={styles.background}>\r\n      <div style={styles.logoContainer}>\r\n        <img src=\"/images/logo.png\" alt=\"BLEU AUCTION\" style={styles.logo} />\r\n      </div>\r\n      <div style={styles.container}>\r\n        <form onSubmit={handleSubmit} style={styles.form}>\r\n          <input style={styles.input} type=\"text\" name=\"memberName\" placeholder=\"이름\" />\r\n          <input style={styles.input} type=\"email\" name=\"memberEmail\" placeholder=\"이메일\" />\r\n          <input style={styles.input} type=\"password\" name=\"memberPwd\" placeholder=\"비밀번호\" />\r\n          <input style={styles.input} type=\"text\" name=\"memberPhone\" placeholder=\"전화번호\" />\r\n          {/* {showPostcode && (\r\n                <DaumPostcode\r\n                    onComplete={handleAddress}\r\n                    autoClose={true}\r\n                />\r\n            )} */}\r\n          <input style={styles.input} type=\"text\" name=\"memberZipcode\" placeholder=\"우편번호\" />\r\n          {/* <button onClick={() => setShowPostcode(true)} style={{...styles.button, marginBottom: '10px'}}>우편번호 찾기</button> */}\r\n          <input style={styles.input} type=\"text\" name=\"memberAddr\" placeholder=\"기본주소\" />\r\n          <input style={styles.input} type=\"text\" name=\"memberDetailAddr\" placeholder=\"상세주소\" />\r\n          <input style={styles.input} type=\"text\" name=\"memberBacnk\" placeholder=\"은행\" />\r\n          <input style={styles.input} type=\"text\" name=\"memberAccount\" placeholder=\"계좌번호\" />\r\n          <div style={styles.accountTypeContainer}>\r\n            <label style={styles.accountTypeLabel}>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"memberCategory\"\r\n                value=\"M\"\r\n                style={styles.accountTypeInput}\r\n              />\r\n              개인\r\n            </label>\r\n            <label style={styles.accountTypeLabel}>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"memberCategory\"\r\n                value=\"S\"\r\n                style={styles.accountTypeInput}\r\n              />\r\n              기업\r\n            </label>\r\n          </div>\r\n          <button type=\"submit\" style={styles.submitButton}>회원 가입</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  background: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100vh',\r\n    background: 'var(--Blue, linear-gradient(180deg, #0575E6 0%, #02298A 84.79%, #021B79 100%))',\r\n  },\r\n  logoContainer: {\r\n    marginBottom: '10px',\r\n  },\r\n  logo: {\r\n    width: '200px',\r\n  },\r\n  container: {\r\n    background: 'white',\r\n    padding: '20px',\r\n    borderRadius: '8px',\r\n    width: '400px',\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  toggleButtons: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginBottom: '20px',\r\n    borderRadius: '8px',\r\n  },\r\n  button: {\r\n    padding: '10px 20px',\r\n    cursor: 'pointer',\r\n    border: 'none',\r\n    backgroundColor: 'white',\r\n    borderRadius: '10px',\r\n  },\r\n  activeButton: {\r\n    padding: '10px 20px',\r\n    cursor: 'pointer',\r\n    border: 'none',\r\n    backgroundColor: 'lightgray',\r\n    borderRadius: '10px',\r\n  },\r\n  input: {\r\n    padding: '10px',\r\n    margin: '5px 0',\r\n    borderRadius: '8px',\r\n    border: '1px solid #ccc',\r\n    outline: 'none',\r\n  },\r\n  submitButton: {\r\n    padding: '10px 20px',\r\n    cursor: 'pointer',\r\n    backgroundColor: '#0575E6',\r\n    border: 'none',\r\n    borderRadius: '8px',\r\n    color: 'white',\r\n\r\n  },\r\n  accountTypeContainer: {\r\n    marginBottom: '10px',\r\n  },\r\n  accountTypeLabel: {\r\n    marginRight: '10px',\r\n    cursor: 'pointer',\r\n  },\r\n  accountTypeInput: {\r\n    marginRight: '5px',\r\n  },\r\n};\r\n\r\nexport default RegisterPage;\r\n","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Menu\\MenuList.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Common\\SideBar.js",["336"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport styles from './SideBar.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Chat from '../Chat/Chat';\r\nimport OS from '../OS/OS';\r\n\r\nfunction SideBar() {\r\n\r\n    const [isRaysModalOpen, setIsRaysModalOpen] = useState(false);\r\n    const [isChatModalOpen, setIsChatModalOpen] = useState(false);\r\n    const [scrollPosition, setScrollPosition] = useState(window.pageYOffset);\r\n\r\n    const openRaysModal = () => {\r\n        setIsRaysModalOpen(true);\r\n    };\r\n\r\n    const closeRaysModal = () => {\r\n        setIsRaysModalOpen(false);\r\n    };\r\n\r\n    const toggleChatModal = () => {\r\n        setIsChatModalOpen(!isChatModalOpen);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n            setScrollPosition(window.pageYOffset);\r\n        };\r\n        window.addEventListener('scroll', handleScroll);\r\n        return () => {\r\n            window.removeEventListener('scroll', handleScroll);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div\r\n            className={styles.sideBarBox}\r\n            style={{ top: `${200 + scrollPosition}px` }} // 여기서 움직임을 처리합니다.\r\n        >\r\n            <Link to=\"/StoreItemAdd\">등록</Link>\r\n            <Link to=\"#\" onClick={openRaysModal}>\r\n                오늘의 <br />방사능\r\n            </Link>\r\n            <Link to=\"#\" onClick={toggleChatModal}>\r\n                챗봇\r\n            </Link>\r\n            {isRaysModalOpen && <OS closeModal={closeRaysModal} />}\r\n            {isChatModalOpen && <Chat closeModal={toggleChatModal} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideBar;\r\n","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Common\\Header.js",["337","338","339","340","341","342","343"],[],"import React, { useEffect, useState } from 'react';\r\nimport { axios, formToJSON } from 'axios';\r\nimport styles from './Header.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { useUser } from '../Auth/UserContext';\r\nimport {\r\n  redirectLogin,\r\n  getAccessToken,\r\n  getLoginUserInfo,\r\n  logout,\r\n  accessTokenRefresh,\r\n  isNullUndefinedOrEmpty,\r\n  mainUrl,\r\n  isTokenExpired\r\n} from '../utility/common';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\n\r\nfunction Header() {\r\n  const accessToken = sessionStorage.getItem('accessToken');\r\n  const refreshToken = localStorage.getItem('refreshToken');\r\n  const decodedAccToken = isTokenExpired(accessToken) ? null : jwtDecode(accessToken);\r\n  const decodedRefToken = isTokenExpired(refreshToken) ? null : jwtDecode(refreshToken);\r\n  const currentURL = window.location.href;\r\n  const [tokenMember, setTokenMember] = useState(accessToken);\r\n\r\n  console.log('Header.js => accessToken 디코딩값 : ', decodedAccToken);\r\n  console.log('Header.js => refreshToken 디코딩값 : ', decodedRefToken);\r\n  // console.log('(currentURL.replace(mainUrl)', currentURL.replace(mainUrl, ''));\r\n\r\n  useEffect(() => {\r\n    if (isTokenExpired(accessToken)) { // accessToken이 유효하지 않은경우\r\n      console.log('Header.js => 엑세스 토큰 만료에 따른 재발급!');\r\n      console.log('accessTokenRefresh(): ', accessTokenRefresh()); // refreshsToken으로 accessToken 재발급\r\n\r\n    } else if (isTokenExpired(accessToken) && isTokenExpired(refreshToken)) { // accessToken 과 refreshsToken이 모두 유효하지 않은경우\r\n      console.log('Header.js => accessToken (X) && refreshToken (X)');\r\n      redirectLogin(); // 로그인 필요 => 로그인 시 refreshsToken으로 accessToken 재발급\r\n    } else { // 둘다 유효하거나 accessToken만 유효한 경우\r\n      console.log('Header.js => accessToken만 유효 OR accessToken과 refreshToken 모두 유효');\r\n      setTokenMember(getAccessToken('d')); //엑세스토큰 디코딩 한 값 으로 tokenMember 객체 초기화\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.headerBox}>\r\n        <div className={styles.headerTop}>\r\n          <Link to=\"/\" id={styles.headerTitle}>BLEU AUCTION</Link>\r\n          <form className={styles.headerSearchForm}>\r\n            <input className={styles.headerSearchBox} type='text'\r\n              placeholder='검색어를 입력하세요.'></input>\r\n            <button id={styles.searchBtn} type=\"submit\"></button>\r\n          </form>\r\n          {isNullUndefinedOrEmpty(tokenMember) ? (\r\n            <>\r\n              <Link to='/mypage'>{tokenMember.memberName}님 환영합니다!</Link>\r\n              <Link onClick={logout}>로그아웃</Link>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Link to='/login'>로그인</Link>\r\n              <Link to='/register'>회원가입</Link>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n\r\n        <div className={styles.headerBottom}>\r\n          <Link to='/'>추천</Link>\r\n          <Link to='/store/list'>시장</Link>\r\n          <Link to='/StoreItemDailyPrice'>시세</Link>\r\n          <Link to='/notice/list'>공지사항</Link>\r\n        </div>\r\n        <hr></hr>\r\n      </div>\r\n      <div className={styles.hidden_block}></div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header;","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Test\\Test.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\routes\\Home.js",["344","345","346","347","348","349","350","351","352","353"],[],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Announce from '../components/MainPage/Announce';\r\nimport StoreListItem from '../components/Market/StoreListItem';\r\nimport StoreHome from '../components/StoreHome';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport { accessTokenRefresh, redirectLogin, isNullUndefinedOrEmpty, sendAxiosRequest } from '../components/utility/common';\r\nimport { accordionSummaryClasses } from '@mui/material';\r\n\r\nfunction Home() {\r\n\r\n  const [stores, setStores] = useState([]);\r\n  const [pageRowCount, setPageRowCount] = useState([6]);\r\n  const accessToken = sessionStorage.getItem('accessToken');\r\n\r\n  /* 토큰 들고 요청 예시 */\r\n  // useEffect(() => {\r\n  //   if (isNullUndefinedOrEmpty(accessToken)) {   // AccessToken이 있을 때만 요청 \r\n\r\n  //     // 요청 헤더에 엑세스 토큰 추가\r\n  //     const config = {\r\n  //       headers: {\r\n  //         'Authorization': `Bearer ${accessToken}`\r\n  //       }\r\n  //     };\r\n\r\n  //     console.log('Home.js headers: ', config);\r\n\r\n  //     axios.get(`/api/store/list?pageLowCount=${pageRowCount}`, config)\r\n  //       .then(response => {\r\n  //         console.log('response.data: ', response.data);\r\n  //         setStores(response.data);\r\n  //       })\r\n  //       .catch(error => {\r\n  //         const errorData = error.response.data;\r\n  //         console.log('errorData: ', errorData);\r\n  //         if (errorData === 'E') { // 토큰이 있으나 만료\r\n  //           console.log('여기야');\r\n  //           accessTokenRefresh();\r\n  //         } else if (errorData === 'I') { // 토큰이 아예없거나 유효하지 않은 토큰\r\n  //           redirectLogin();\r\n  //         }\r\n  //       });\r\n  //   }\r\n  // }, [accessToken]); // accessToken이 변경될 때만 실행\r\n\r\n  useEffect(() => {\r\n    sendAxiosRequest(`/api/store/list?pageLowCount=${pageRowCount}`, 'GET', null, response => {\r\n      console.log('/api/store/list => response.data: ' + response.data);\r\n      if (isNullUndefinedOrEmpty(response.data)) {\r\n        setStores(response.data);\r\n      }\r\n    }, error => console.log(error), null, 'UA');\r\n\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <>\r\n      <Announce />\r\n      {stores && (\r\n        <>\r\n          <StoreHome stores={stores} />\r\n          <button onClick={() => { console.log(stores); window.sessionStorage.getItem(\"memberNo\") }}>더보기-></button>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home;","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Common\\Footer.js",["354","355","356","357"],[],"import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport styles from './Footer.module.css';\r\n\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className={styles.footerBox}>\r\n      <img src='/images/LogoPage.png' />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer;","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Menu\\MenuRegisterationForm.js",["358","359","360","361","362"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\TabBar.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\StoreList.js",["363","364","365","366","367","368","369","370","371","372","373","374"],[],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Announce from '../MainPage/Announce';\r\nimport Coupon from '../MainPage/Announce';\r\nimport Category from '../MainPage/Category';\r\nimport StoreListItem from './StoreListItem';\r\nimport StoreHome from '../StoreHome';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport { isOpenNow, sendAxiosRequest, scrollMoveTop, getAccessToken, isTokenExpired } from '../utility/common';\r\nimport styles from './StoreList.module.css'\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nfunction StoreList() {\r\n  const pageLowCount = 3;\r\n  let [startPageNo, setStartPageNo] = useState(0);\r\n  let [storeList, setStoreList] = useState([]);\r\n  let [newAddLength, setNewAddLength] = useState(pageLowCount);\r\n  const accessToken = sessionStorage.getItem('accessToken');\r\n\r\n  useEffect(() => {\r\n    sendAxiosRequest(`/api/store/list`, 'GET', null, response => {\r\n      console.log('/api/store/list의 응답값 => ', response.data);\r\n      setStoreList(response.data);\r\n      setNewAddLength(response.data.length);\r\n      setStartPageNo(Math.floor(newAddLength / pageLowCount));\r\n    }, error => console.log(error), null, accessToken);\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      console.log(newAddLength);\r\n      if (newAddLength < pageLowCount) {\r\n        return;\r\n      }\r\n      if (\r\n        window.innerHeight + document.documentElement.scrollTop >=\r\n        document.documentElement.scrollHeight - 100\r\n      ) {\r\n\r\n        console.log(\"스크롤 이벤트 핸들러 작동\");\r\n        sendAxiosRequest(`/api/store/list?startPage=${startPageNo}`, 'GET', null, response => {\r\n          console.log(`/api/store/list?startPage=${startPageNo}의 응답값 => `, response.data);\r\n          let addReviewList = response.data;\r\n          setNewAddLength(addReviewList.length);\r\n          let newReviewList = [...storeList, ...addReviewList];\r\n          setStartPageNo(Math.floor(newReviewList.length / pageLowCount));\r\n          setStoreList(newReviewList);\r\n        }, error => console.log(error), null, accessToken)\r\n      }\r\n    };\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    }\r\n  }, [startPageNo, storeList]);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Announce />\r\n      <div className={styles.storeListBox}>\r\n        {storeList.map((store, index) => (\r\n          <StoreListItem key={index} data={store} />\r\n        ))}\r\n      </div>\r\n      <div id=\"topBtnDiv\" onClick={scrollMoveTop}>↑</div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default StoreList;","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\MarketDetailPage.js",["375","376","377","378"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\StoreMyPage.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\StoreItemRegister.js",["379","380","381","382","383","384","385","386","387","388","389"],[],"import '../utility/Common.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Form, Card, Button } from 'react-bootstrap';\r\nimport { json, useNavigate } from 'react-router-dom';\r\nimport axios, { formToJSON } from 'axios';\r\nimport {\r\n  sendAxiosRequest,\r\n  addEventToElements,\r\n  removeEventToElements,\r\n  isTokenExpired, getAccessToken, isNullUndefinedOrEmpty, isNotNullOrNonEmpty\r\n} from '../utility/common';\r\nimport { useUser } from '../Auth/UserContext';\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nfunction formatNumber(number) {\r\n  return number.toLocaleString();\r\n}\r\n\r\nfunction updateItemNames() {\r\n  const itemCodeSelect = document.getElementById(\"itemCode\");\r\n  const itemNameSelect = document.getElementById(\"itemName\");\r\n\r\n  const selectedValue = itemCodeSelect.value;\r\n  const itemNames = itemNameSelect;\r\n\r\n  const options = {\r\n    'N': ['품목구분 항목을 먼저 선택해주세요.'],\r\n    'S': ['광어', '우럭', '도미', '방어', '전복', '참치', '연어', '가리비', '전갱이'],\r\n    'F': ['광어', '우럭', '도미', '방어', '전복', '참치', '연어', '가리비', '전갱이'],\r\n    'C': ['새우'],\r\n    'M': ['가리비', '오징어'],\r\n    'E': ['기타']\r\n  };\r\n\r\n  itemNames.innerHTML = '';\r\n  options[selectedValue].forEach(fishName => {\r\n    const option = document.createElement('option');\r\n    option.value = fishName;\r\n    option.textContent = fishName;\r\n    itemNames.appendChild(option);\r\n  });\r\n}\r\n\r\nconst codeToTextMap = {\r\n  'ES': '동해',\r\n  'WS': '서해',\r\n  'SS': '남해',\r\n  'JJ': '제주',\r\n  'WD': '완도',\r\n  'JP': '일본',\r\n  'CN': '중국',\r\n  'RU': '러시아',\r\n  'NW': '노르웨이',\r\n  'ET': '기타'\r\n};\r\n\r\n\r\nfunction updateOriginStatus() {\r\n  const originStatusSelects = document.querySelectorAll(\"[name=originStatus]\");\r\n  const originPlaceStatusSelect = document.getElementById(\"originPlaceStatus\");\r\n\r\n  let selectedValue;\r\n  originStatusSelects.forEach(input => {\r\n    if (input.checked) {\r\n      selectedValue = input.value;\r\n    }\r\n  })\r\n\r\n  const originPlaceNames = originPlaceStatusSelect;\r\n\r\n  const options = {\r\n    'D': ['ES', 'WS', 'SS', 'JJ', 'WD', 'ET'],\r\n    'I': ['JP', 'CN', 'RU', 'NW', 'ET']\r\n  };\r\n\r\n  originPlaceNames.innerHTML = '';\r\n  options[selectedValue].forEach(regionCode => {\r\n    const option = document.createElement('option');\r\n    option.value = regionCode;\r\n    console.log(regionCode);\r\n    option.textContent = codeToTextMap[regionCode] || regionCode;\r\n    originPlaceNames.appendChild(option);\r\n  });\r\n}\r\n\r\n\r\nfunction insertSidp(tokenMember) {\r\n  let form = document.getElementById('sidpForm');\r\n  let formData = new FormData(form);\r\n  let jsonObj = formToJSON(formData);\r\n  jsonObj.dailyPrice = formatNumber(jsonObj.dailyPrice).replaceAll(',', '');\r\n  console.log('jsonObj: ', jsonObj);\r\n  sendAxiosRequest('api/sidp/add', 'POST', jsonObj, response => {\r\n    if (isNotNullOrNonEmpty(response.data)) {\r\n      console.log('response.data: ', response.data);\r\n      alert('품목 시세를 성공적으로 등록하였습니다.');\r\n      window.location.reload();\r\n    } else {\r\n      alert('품목 등록에 실패하였습니다. 잠시후 다시 시도해주세요!');\r\n    }\r\n\r\n\r\n  }, erorr => console.log(console.log(erorr)), null, tokenMember);\r\n}\r\n\r\n\r\n\r\n\r\nfunction StoreItemRegister() {\r\n  const [tokenMember] = useState(getAccessToken('a'));\r\n  const [dailyPrice, setDailyPrice] = useState(''); // 사용자 입력을 저장할 상태\r\n  const [minPrice] = useState(0); // 최소가격\r\n  const [maxPrice] = useState(1000000); // 최대가격\r\n  const [store] = useState(1);\r\n\r\n  console.log('tokenMember: ', tokenMember);\r\n\r\n  function handleDailyPriceChange(event) {\r\n    let inputNumber = parseInt(event.target.value.replace(/,/g, ''), 10);\r\n\r\n    // 최소 및 최대 값 적용\r\n    if (isNaN(inputNumber) || inputNumber < minPrice) {\r\n      inputNumber = minPrice;\r\n    } else if (inputNumber > maxPrice) {\r\n      alert('입력 가능한 최대 가격을 초과하였습니다!')\r\n      inputNumber = '';\r\n    }\r\n    setDailyPrice(formatNumber(inputNumber));\r\n  }\r\n  // useEffect 내에서 updateItemNames를 호출\r\n  useEffect(() => {\r\n    const itemCodeSelect = document.getElementById(\"itemCode\");\r\n    const originStatusSelects = document.querySelectorAll(\"[name=originStatus]\");\r\n\r\n    itemCodeSelect.addEventListener('change', updateItemNames);\r\n    addEventToElements('change', updateOriginStatus, originStatusSelects);\r\n\r\n    return () => {\r\n      itemCodeSelect.removeEventListener('change', updateItemNames);\r\n      removeEventToElements('change', updateOriginStatus, originStatusSelects);\r\n    };\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n\r\n    <div className='ba-cursor-pointer-div'>\r\n      <form id='sidpForm' className='ba-form-container'>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan=\"2\">품목 시세등록 </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <th><label htmlFor=\"daliyPriceDate\">기준날짜</label></th>\r\n              <td>\r\n                <input name='storeNo' type='text' hidden value='1' />\r\n                <input type='date' name='daliyPriceDate' />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th><label htmlFor=\"item_code\">품목구분</label></th>\r\n              <td>\r\n                <select name='itemCode' id=\"itemCode\">\r\n                  <option selected value=\"N\">선택안함</option>\r\n                  <option value=\"S\">생선(횟감)</option>\r\n                  <option value=\"F\">생선(비횟감)</option>\r\n                  <option value=\"C\">갑각류</option>\r\n                  <option value=\"M\">패류</option>\r\n                  <option value=\"E\">기타</option>\r\n                </select>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th><label htmlFor=\"itemName\">품목</label></th>\r\n              <td>\r\n                <select name='itemName' id=\"itemName\">\r\n                  <option selected>품목구분 항목을 먼저 선택해주세요.</option>\r\n                </select>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th><label>크기</label></th>\r\n              <td>\r\n                <label htmlFor=\"itemSizeS\">\r\n                  <input type=\"radio\" id=\"itemSizeS\" name=\"itemSize\" value=\"S\" /> 소\r\n                </label>\r\n                <label htmlFor=\"itemSizeM\">\r\n                  <input type=\"radio\" id=\"itemSizeM\" name=\"itemSize\" value=\"M\" /> 중\r\n                </label>\r\n                <label htmlFor=\"itemSizeL\">\r\n                  <input type=\"radio\" id=\"itemSizeL\" name=\"itemSize\" value=\"L\" /> 대\r\n                </label>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th><label>원산지</label></th>\r\n              <td>\r\n                <label htmlFor=\"originD\">\r\n                  <input type=\"radio\" id=\"originD\" name=\"originStatus\" value=\"D\" /> 국내산\r\n                </label>\r\n                <label htmlFor=\"originI\">\r\n                  <input type=\"radio\" id=\"originI\" name=\"originStatus\" value=\"I\" /> 수입산\r\n                </label>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th><label htmlFor=\"originPlaceStatus\">지역명</label></th>\r\n              <td>\r\n                <select name=\"originPlaceStatus\" id=\"originPlaceStatus\">\r\n                  <option selected>원산지 항목을 먼저 선택해주세요.</option>\r\n                </select>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th><label>자연산/양식</label></th>\r\n              <td>\r\n                <label htmlFor=\"wildFarmStatusW\">\r\n                  <input type=\"radio\" id=\"wildFarmStatusW\" name=\"wildFarmStatus\" value=\"W\" /> 자연산\r\n                </label>\r\n                <label htmlFor=\"wildFarmStatusF\">\r\n                  <input type=\"radio\" id=\"wildFarmStatusF\" name=\"wildFarmStatus\" value=\"F\" /> 양식\r\n                </label>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th><label>금일가격</label></th>\r\n              <td>\r\n                <label htmlFor=\"dailPrice\">\r\n                  <input type=\"text\" id=\"dailyPrice\" name=\"dailyPrice\" value={dailyPrice}\r\n                    onChange={handleDailyPriceChange} />(원)\r\n                </label>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <button type=\"button\" className='ba-btn ba-margin-tb50' onClick={() => insertSidp(tokenMember)}>품목시세 등록</button>\r\n      </form>\r\n    </div >\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default StoreItemRegister;","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\UserEditPage.js",["390","391","392","393","394","395","396"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\StoreRegisterPage.js",["397","398","399","400"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\MyPage.js",["401","402","403","404","405","406"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\MyOrder.js",["407"],[],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport MyOrderContent from './MyOrderContent';\r\n\r\n\r\nfunction MyOrder() {\r\n\r\n  const order1 = {\r\n    orderPrice:'10000',\r\n    recipientPhone:'01011111111',\r\n    recipientName: '김성주',\r\n    recipientZipcode: '1111',\r\n    recipientAddr: '기본주소',\r\n    recipientDetailAddr: '상세주소',\r\n    regDatetime: '2023-09-01 15:00:00',\r\n    mdfDatetime: '2023-09-01 15:00:00',\r\n    orderStatus: 'Y'\r\n  }\r\n\r\n  const order2 = {\r\n    orderPrice:'20000',\r\n    recipientPhone:'01011111111',\r\n    recipientName: '김성주2',\r\n    recipientZipcode: '1111',\r\n    recipientAddr: '기본주소',\r\n    recipientDetailAddr: '상세주소',\r\n    regDatetime: '2023-09-01 15:00:00',\r\n    mdfDatetime: '2023-09-01 15:00:00',\r\n    orderStatus: 'N'\r\n  }\r\n\r\n  const order3 = {\r\n    orderPrice:'10000',\r\n    recipientPhone:'01011111111',\r\n    recipientName: '김성주',\r\n    recipientZipcode: '1111',\r\n    recipientAddr: '기본주소',\r\n    recipientDetailAddr: '상세주소',\r\n    regDatetime: '2023-09-01 15:00:00',\r\n    mdfDatetime: '2023-09-01 15:00:00',\r\n    orderStatus: 'Y'\r\n  }\r\n\r\n\r\n  const orderlist = [order1, order2, order3]\r\n\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  const onClick = (e) => {\r\n    setSelected(e.target.value);\r\n  };\r\n\r\n  useEffect(()=>{\r\n    console.log(selected);\r\n  }, [selected])\r\n\r\n  // let content = (selected === 'Delivered') ? \r\n  // <MyOrderContent orderlist = {orderlist.filter((item)=>item.orderStatus === 'N')}/> : \r\n  // <MyOrderContent orderlist = {orderlist.filter((item)=>item.orderStatus === 'Y')} />;\r\n\r\n  let content = (\r\n    (selected === 'Delivered') ? <MyOrderContent orderlist = {orderlist.filter((item)=>item.orderStatus === 'Y')}/> : \r\n    (selected === 'Canceled') ? <MyOrderContent orderlist = {orderlist.filter((item)=>item.orderStatus === 'N')} />:\r\n    null\r\n  )\r\n\r\n  return (\r\n      <>\r\n        <h2>마이오더</h2>\r\n        <div>\r\n          <button value={'Delivered'} onClick = {onClick}>Delivered</button>\r\n          <button value={'Canceled'} onClick = {onClick}>Canceled</button>\r\n        </div>\r\n        <div>\r\n          {/* <MyOrderContent /> */}\r\n          {content}\r\n        </div>\r\n      \r\n      \r\n      </>\r\n  );\r\n};\r\n\r\nexport default MyOrder;\r\n","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\StoreItemDailyPrice\\StoreItemDailyPrice.js",["408","409","410","411","412","413","414","415","416","417"],[],"import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\r\nimport './StoreItemDailyPrice.css';\r\nimport { sendAxiosRequest, accessTokenRefresh, redirectLogin, isTokenExpired, getAccessToken, isNullUndefinedOrEmpty } from '../utility/common';\r\n\r\n// handsontable라이브러리 관련 import\r\nimport 'handsontable/dist/handsontable.full.min.css';\r\nimport Handsontable from 'handsontable/base';\r\nimport { registerAllModules } from 'handsontable/registry';\r\nimport { HotTable } from '@handsontable/react';\r\nimport { registerRenderer, textRenderer } from 'handsontable/renderers';\r\n\r\nregisterAllModules();\r\n\r\nconst sizeOptions = {\r\n  S: '소 (0KG~1KG 이하)',\r\n  M: '중 (1KG~3KG 이하)',\r\n  L: '대 (3KG 초과)',\r\n};\r\n\r\nconst categoryOptions = {\r\n  S: '생선(횟감)',\r\n  F: '생선(비횟감)',\r\n  C: '갑각류',\r\n  M: '패류',\r\n  E: '기타',\r\n};\r\n\r\nconst originOptions = {\r\n  D: '국내산',\r\n  I: '수입산',\r\n};\r\n\r\nconst originPlaceOptions = {\r\n  ES: '동해',\r\n  WS: '서해',\r\n  SS: '남해',\r\n  JJ: '제주',\r\n  WD: '완도',\r\n  JP: '일본',\r\n  CN: '중국',\r\n  RU: '러시아',\r\n  NW: '노르웨이',\r\n};\r\n\r\nconst wildFarmOptions = {\r\n  W: '자연산',\r\n  F: '양식',\r\n};\r\n\r\nconst recommendationItems = [\r\n  {\r\n    id: 1,\r\n    image: 'item1.jpg',\r\n    name: '추천 상품 1',\r\n  },\r\n  {\r\n    id: 2,\r\n    image: 'item2.jpg',\r\n    name: '추천 상품 2',\r\n  },\r\n];\r\n\r\n\r\nfunction firstRowRenderer(instance, td, row, col, prop, value, cellProperties) {\r\n  textRenderer.apply(this, arguments);\r\n  td.style.fontSize = '20px';\r\n  td.style.padding = '20px';\r\n  td.style.color = 'black';\r\n  td.style.border = 'solid 2px white';\r\n  td.style.background = '#f2f2f2';\r\n}\r\n\r\n\r\nfunction StoreItemDailyPrice() {\r\n  const [totalDailyPrice, setTotalDailyPrice] = useState(0);\r\n  const [averageDailyPrice, setAverageDailyPrice] = useState(0);\r\n  const [items, setItems] = useState([]);\r\n  const accessToken = sessionStorage.getItem('accessToken');\r\n\r\n\r\n  useEffect(() => {\r\n    if (!isTokenExpired(accessToken)) {   // AccessToken이 있을 때만 요청\r\n      sendAxiosRequest('/api/sidp/list', 'GET', null, response => {\r\n        if (response.data) {\r\n          let sidpList = response.data;\r\n          const columnData = sidpList.map((sidp) => sidp.dailyPrice);\r\n          const total = columnData.reduce((acc, current) => acc + current, 0);\r\n          const avg = total / (sidpList.length || 1); // 0으로 나누는 것을 방지\r\n\r\n          // 상태 업데이트\r\n          setTotalDailyPrice(total);\r\n          setAverageDailyPrice(avg);\r\n          setItems(sidpList);\r\n        }\r\n      }, error => {\r\n        if (error.response.data) {\r\n          const errorData = error.response.data;\r\n          console.log('errorData: ', errorData);\r\n          if (errorData === 'E') { // 토큰이 있으나 만료\r\n            accessTokenRefresh();\r\n          } else if (errorData === 'I') { // 토큰이 아예없거나 유효하지 않은 토큰\r\n            redirectLogin();\r\n          }\r\n        }\r\n      }, null, accessToken);\r\n    }\r\n  }, [accessToken]); // accessToken이 변경될 때만 실행\r\n\r\n  const transformedData = items.map((item) => {\r\n    return {\r\n      'daliyPriceDate': item.daliyPriceDate,\r\n      'itemCode': categoryOptions[item.itemCode],\r\n      'itemName': item.itemName,\r\n      'itemSize': sizeOptions[item.itemSize],\r\n      'wildFarmStatus': wildFarmOptions[item.wildFarmStatus],\r\n      'originStatus': originOptions[item.originStatus],\r\n      'originPlaceStatus': originPlaceOptions[item.originPlaceStatus],\r\n      'dailyPrice': item.dailyPrice,\r\n    };\r\n  });\r\n\r\n  // items 배열이 비어있을 때, 빈 행 추가\r\n  if (items.length === 0) {\r\n    transformedData.push({\r\n      'daliyPriceDate': '품목에 대한 시세 데이터가 존재하지 않습니다!',\r\n      'itemCode': '',\r\n      'itemName': '',\r\n      'itemSize': '',\r\n      'wildFarmStatus': '',\r\n      'originStatus': '',\r\n      'originPlaceStatus': '',\r\n      'dailyPrice': '',\r\n    });\r\n  }\r\n\r\n  console.log(items.length);\r\n  const mergeCells = items.length === 0 ? [\r\n    {\r\n      row: 0,\r\n      col: 0,\r\n      rowspan: 1,\r\n      colspan: 8,\r\n    }\r\n  ] : [];\r\n  console.log('transformedData: ', transformedData);\r\n\r\n  return (\r\n    <div className=\"daily-box\">\r\n      <h1>오늘의 시세</h1>\r\n      <br />\r\n      <div className=\"ba-price-list-div\">\r\n        <div>\r\n          <HotTable\r\n            mergeCells={mergeCells}\r\n            licenseKey=\"non-commercial-and-evaluation\"\r\n            colHeaders={['기준날짜', '품목구분', '품목명', '품목크기', '자연/양식', '국산/수입', '원산지', '품목가격(원)',]}\r\n            data={transformedData}\r\n            formattedAvg={'0,0,0'}\r\n            rowHeaders={true}\r\n            colWidths={[250, 200, 200, 300, 200, 250, 200, 250]}\r\n            columnHeaderHeight={50}\r\n            filters={true}\r\n            dropdownMenu={true}\r\n            customBorders={true}\r\n            settings={{\r\n              columnSorting: {\r\n                headerAction: true,\r\n                multiColumnSorting: true,\r\n                sortEmptyCells: false, // 빈 셀 정렬제외\r\n                indicator: true, // 정렬순서 표시\r\n                initialConfig: {\r\n                  column: 1,\r\n                  sortOrder: 'desc',\r\n                },\r\n              },\r\n              className: 'customFilterButtonExample1',\r\n              width: 'auto',\r\n              height: 'auto',\r\n              rowHeights: 60,\r\n              readOnly: true,\r\n              afterGetColHeader: function (col, th) {\r\n                var cellWidth = this.getColWidth(col); // 각 열 헤더의 배경색을 셀 넓이만큼 설정\r\n                th.style.backgroundColor = '#0056b3'; // 배경색을 변경하려면 원하는 색상으로 수정\r\n                th.style.color = 'white';\r\n                th.style.fontWeight = 'bold';\r\n                th.className = 'htMiddle';\r\n              },\r\n              afterGetRowHeader: function (row, th) {\r\n                th.style.backgroundColor = '#0056b3';\r\n                th.style.color = 'white';\r\n                th.style.fontWeight = 'bold';\r\n                th.style.fontSize = '20px';\r\n                th.className = 'htMiddle';\r\n              },\r\n              columns: [\r\n                {\r\n                  title: '기준날짜',\r\n                  type: 'date',\r\n                  className: 'htMiddle',\r\n                  dateFormat: 'YYYY-MM-DD',\r\n                  data: 'daliyPriceDate',\r\n                },\r\n                {\r\n                  title: '품목구분',\r\n                  type: 'text',\r\n                  className: 'htLeft htMiddle',\r\n                  data: 'itemCode',\r\n                },\r\n                {\r\n                  title: '품목명',\r\n                  type: 'text',\r\n                  className: 'htLeft htMiddle',\r\n                  data: 'itemName',\r\n                },\r\n                {\r\n                  title: '품목크기',\r\n                  type: 'text',\r\n                  className: 'htLeft htMiddle',\r\n                  data: 'itemSize',\r\n                },\r\n                {\r\n                  title: '자연/양식',\r\n                  type: 'text',\r\n                  className: 'htLeft htMiddle',\r\n                  data: 'wildFarmStatus',\r\n                },\r\n                {\r\n                  title: '국내산/수입산',\r\n                  type: 'text',\r\n                  className: 'htLeft htMiddle',\r\n                  data: 'originStatus',\r\n                },\r\n                {\r\n                  title: '원산지',\r\n                  type: 'text',\r\n                  data: 'originPlaceStatus',\r\n                  className: 'htLeft htMiddle',\r\n                },\r\n                {\r\n                  title: '품목가격(원)',\r\n                  type: 'numeric',\r\n                  data: 'dailyPrice',\r\n                  className: 'htRight htMiddle',\r\n                  numericFormat: {\r\n                    pattern: '0,0'\r\n                  }\r\n                },\r\n              ],\r\n              afterFilter() {\r\n                const handsontableInstance = this;\r\n                const filters = handsontableInstance.getPlugin('Filters');\r\n                console.log('filters: ', filters.filtersRowsMap.indexedValues);\r\n\r\n                let filteredList = filters.filtersRowsMap.indexedValues;\r\n\r\n\r\n                let total = 0;\r\n                let avg = 0;\r\n                let totalCnt = 0;\r\n                for (let i = 0; i < filteredList.length - 1; i++) {\r\n                  if (!filteredList[i]) {\r\n                    total += transformedData[i].dailyPrice;\r\n                    totalCnt++;\r\n                  }\r\n                }\r\n\r\n                avg = total / (totalCnt == 0 ? 1 : totalCnt);\r\n                console.log('total(합계): ', total);\r\n                console.log('avg(평균): ', avg);\r\n\r\n                setTotalDailyPrice(total);\r\n                setAverageDailyPrice(avg);\r\n              },\r\n            }}\r\n\r\n            cells={(row, col) => {\r\n              const cellProperties = {};\r\n              cellProperties.renderer = firstRowRenderer; // 사용자 정의 렌더러 함수를 셀에 적용\r\n              return cellProperties;\r\n            }}\r\n\r\n          />\r\n          <div className=\"ba-span-div\">\r\n            <span><strong>합계:</strong> {totalDailyPrice.toLocaleString()} (원)</span>\r\n            <span><strong>평균:</strong> {Math.floor(averageDailyPrice).toLocaleString()} (원)</span>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StoreItemDailyPrice;","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\utility\\common.js",["418"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Pay\\Pay.js",["419","420","421","422"],[],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n// import swal from 'sweetalert';\r\n// import { response } from 'express';\r\n// import { error } from 'console';\r\n\r\nconst Payment = () => {\r\n  useEffect(() => {\r\n    const jquery = document.createElement(\"script\");\r\n    jquery.src = \"http://code.jquery.com/jquery-1.12.4.min.js\";\r\n    const iamport = document.createElement(\"script\");\r\n    iamport.src = \"https://cdn.iamport.kr/v1/iamport.js\";\r\n    document.head.appendChild(jquery);\r\n    document.head.appendChild(iamport);\r\n    return () => {\r\n      document.head.removeChild(jquery);\r\n      document.head.removeChild(iamport);\r\n    };\r\n  }, []);\r\n\r\n  function sendAxiosRequest(url, method, params, successCallback, errorCallback) {\r\n    console.log(url);\r\n    const axiosConfig = {\r\n      timeout: 5000,\r\n      url: url,\r\n      method: method,\r\n    };\r\n    if (params != null)\r\n      axiosConfig.params = params;\r\n    axios(axiosConfig).then(successCallback).catch(errorCallback);\r\n  }\r\n\r\n  const memberNo = 1;\r\n  const payNo = 1;\r\n  const orderNo = 1;\r\n  const [member, setMember] = useState(null);\r\n  const [pay, setPay] = useState(null);\r\n  const [order, setOrder] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch member data\r\n    sendAxiosRequest(`/api/member/${memberNo}`, 'GET', null,\r\n      response => {\r\n\r\n        console.log('Member data:', response.data);\r\n        setMember(response.data); // Update member state\r\n      },\r\n      error => {\r\n        console.error('Error fetching member data:', error);\r\n      }\r\n    );\r\n\r\n    // Fetch order data\r\n    sendAxiosRequest(`/api/order/detail/${orderNo}`, 'GET', null,\r\n      response => {\r\n        console.log('Order data:', response.data);\r\n        setOrder(response.data); // Update order state\r\n      },\r\n      error => {\r\n        console.error('Error fetching order data:', error);\r\n      }\r\n    );\r\n  }, []); // Empty dependency array to ensure this effect runs only once\r\n\r\n  const requestPay = () => {\r\n    console.log('memberState', member);\r\n    console.log('orderState', order);\r\n\r\n    const { IMP } = window;\r\n    const buyerEmail = member ? member.memberEmail : '';\r\n    const buyerName = member ? member.memberName : '';\r\n    const buyerTel = member ? member.memberPhone : '';\r\n    const name = order ? order.orderNo : '';\r\n    const buyerAddr = order ? order.resipientAddr : '';\r\n    const buyerPostcode = order ? order.resipientZipcode : '';\r\n    const amount = order.orderPrice;\r\n\r\n    IMP.init('imp11340204');\r\n\r\n    IMP.request_pay({\r\n      pg: 'kakaopay.TC0ONETIME',\r\n      pay_method: 'card',\r\n      merchant_uid: new Date().getTime(),\r\n      name: name,\r\n      amount: amount,\r\n      buyer_email: buyerEmail,\r\n      buyer_name: buyerName,\r\n      buyer_tel: buyerTel,\r\n      buyer_addr: buyerAddr,\r\n      buyer_postcode: buyerPostcode,\r\n    }, async (rsp) => {\r\n      console.log('rsp: ', rsp);\r\n      try {\r\n        const { data } = await axios.post('/api/pay/verifyIamport/' + rsp.imp_uid);\r\n        if (rsp.paid_amount === amount) {\r\n          alert('결제 성공!');\r\n          const testPay = {\r\n            // \"payType\": \"C\",\r\n            // \"orderStatus\": \"Y\",\r\n            // \"payNo\": 123,\r\n            orderNo: order.orderNo,\r\n            payPrice: amount,\r\n            payStatus: rsp.success ? 'Y' : 'N'\r\n            // \"payDatetime\": \"2023-10-18T12:34:56\",  // 예: ISO 8601 형식의 날짜 및 시간\r\n            // \"payCancelDatetime\": \"2023-10-18T14:45:00\"  // 예: ISO 8601 형식의 날짜 및 시간\r\n          }\r\n\r\n          console.log('testPay.payStatus: ', testPay.payStatus);\r\n\r\n          axios.post('/api/pay/createPayment', testPay, {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n          })\r\n            .then(response => {\r\n              console.log('Pay data:', response.data);\r\n              setPay(response.data);\r\n            })\r\n            .catch(error => {\r\n              console.error('Error fetching pay data:', error);\r\n            });\r\n\r\n        } else if (rsp.paid_amount == amount) {\r\n          alert('결제 성공?');\r\n        } else {\r\n          alert('결제 실패?');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error while verifying payment:', error);\r\n        alert('결제 실패');\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={requestPay}>결제하기</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n\r\n","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Test\\test2.jsx",["423","424","425"],[],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Test.css';\r\n\r\nconst Test = () => {\r\n  const [testStatus, setState] = useState({\r\n    loading: false,\r\n    response: '값을 가져오니라'\r\n  });\r\n\r\n  console.log(\"testStatus : \",testStatus)\r\n  return (\r\n    <>\r\n      <h1>Test API</h1>\r\n      <div className=\"response-container\">\r\n          <p>{testStatus.response}</p>\r\n        </div>\r\n    </>\r\n  );\r\n}\r\nexport default Test;\r\n","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Review\\ReviewForm.js",["426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457"],[],"import '../utility/Common.css';\r\nimport React, {useState, useEffect} from 'react';\r\nimport {formToJSON} from 'axios';\r\nimport {useUser} from '../Auth/UserContext';\r\nimport {\r\n    scrollMoveTop,\r\n    sendAxiosMultipartRequest,\r\n    sendAxiosRequest,\r\n    dateFormatParse,\r\n    handleInputChange,\r\n    accessTokenRefresh, getAccessToken, isTokenExpired, isNotNullOrNonEmpty\r\n} from '../utility/common';\r\n\r\n\r\nfunction ReviewForm(props) {\r\n    const [accessToken, setAccessToken] = useState(getAccessToken('a'));\r\n    const [tokenMeber, setTokenMember] = useState(getAccessToken('d'));\r\n    const [store, setStore] = useState(props.store);\r\n\r\n    // 로그인 확인\r\n    console.log('accessToken: ', accessToken);\r\n    console.log('tokenMeber: ', tokenMeber);\r\n\r\n    if (!isTokenExpired(accessToken)) {\r\n        return (\r\n            <div id='maindDiv' className=\"review-main-div\">\r\n                <div id='mainContentDiv' className=\"ba-main-content-div\">\r\n                    <ReviewWriteForm accessToken={accessToken} loginUser={tokenMeber}\r\n                                     store={store}></ReviewWriteForm>\r\n                    <ReviewListDiv accessToken={accessToken} store={store} loginUser={tokenMeber}></ReviewListDiv>\r\n                </div>\r\n                <div id=\"topBtnDiv\" onClick={scrollMoveTop}>↑</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction ReviewWriteForm(props) {\r\n    let [loginUser, setLoginUser] = useState(props.loginUser);\r\n    let [store, setStore] = useState(props.store);\r\n    let [reviewFreshness, setReviewFreshness] = useState('M');\r\n\r\n    if (loginUser != null && loginUser != undefined) {\r\n\r\n        return (\r\n            <form id=\"reviewWriteForm\" encType='multipart/form-data' className='ba-form'>\r\n                <label htmlFor='storeNo'><input id='storeNo' name='storeNo' value={store.storeNo}\r\n                                                hidden readOnly></input></label>\r\n                <label htmlFor='memberNo'><input id='memberNo' name='memberNo' value={loginUser.sub}\r\n                                                 hidden readOnly></input></label>\r\n                <img className='ba-member-profile'\r\n                     src='http://fvhsczepiibf19983519.cdn.ntruss.com/member/defaultProfile.jpg?type=f&w=50&h=50&ttype=jpg'></img>\r\n                <sapn className='ba-font-name'>{loginUser.memberName}</sapn>\r\n                <span className='ba-font-title'>신선도 :</span>\r\n                <label htmlFor='freshness-low' className='ba-freshness'><img src='/images/low.png'/><input\r\n                    type=\"radio\" id='freshness-low' name='reviewFreshness' value={'L'}\r\n                    checked={reviewFreshness === 'L'}\r\n                    onChange={() => setReviewFreshness('L')}></input></label>\r\n                <label htmlFor='freshness-medium' className='ba-freshness'><img\r\n                    src='/images/mid.png'/><input type=\"radio\" id='freshness-medium'\r\n                                                  name='reviewFreshness' value={'M'}\r\n                                                  checked={reviewFreshness === 'M'}\r\n                                                  onChange={() => setReviewFreshness('M')}></input></label>\r\n                <label htmlFor='freshness-high' className='ba-freshness'><img\r\n                    src='/images/high.png'/><input type=\"radio\" id='freshness-high'\r\n                                                   name='reviewFreshness' value={'H'}\r\n                                                   checked={reviewFreshness === 'H'}\r\n                                                   onChange={() => setReviewFreshness('H')}></input></label>\r\n                <div>\r\n                    <textarea name=\"reviewContent\" className='ba-textarea'/>\r\n                </div>\r\n                <div className='ba-text-left'>\r\n                    <button type='button' className='ba-btn ba-margin-right10' onClick={() => {\r\n                        let formData = new FormData(document.getElementById('reviewWriteForm'));\r\n                        let reviewContentLength = formData.get('reviewContent').trim().length;\r\n                        console.log(reviewContentLength);\r\n\r\n                        if (reviewContentLength < 1) {\r\n                            alert('작성하실 리뷰 내용을 입력해주세요!');\r\n                            return;\r\n                        }\r\n\r\n                        let inputFile = document.querySelector('input[type=\"file\"]');\r\n                        if (inputFile.files.length > 0) {\r\n                            let files = inputFile.files;\r\n                            for (let i = 0; i < files.length; i++) {\r\n                                formData.append(\"multipartFiles\", files[i]);\r\n                            }\r\n                        }\r\n\r\n                        console.log('여기다.');\r\n                        console.log('formToJSON', JSON.stringify(formData));\r\n                        sendAxiosMultipartRequest('/api/review/add', formData,\r\n                            response => {\r\n                                console.log('/api/review/add =======> ', response.data);\r\n                                console.log('props.accessToken', props.accessToken)\r\n                                if (isNotNullOrNonEmpty(response.data)) {\r\n                                    alert('리뷰를 성공적으로 작성하였습니다!');\r\n                                    // window.location.reload();\r\n                                }\r\n\r\n                            }, error => console.log(error), props.accessToken);\r\n\r\n                    }}>리뷰작성\r\n                    </button>\r\n                    <label htmlFor='fileInput' className='ba-file-label'>파일 첨부</label><span\r\n                    id='fileInfoSpan'></span>\r\n                    <input type='file' id='fileInput' multiple hidden className='ba-file-btn'\r\n                           onChange={(e) => {\r\n                               let files = e.target.files;\r\n                               console.log(files);\r\n                               let fileInfoStr;\r\n                               for (let i = 0; i < 2; i++) {\r\n                                   fileInfoStr = (i === 0) ? fileInfoStr + ' ' + files[i].name + ', ' : fileInfoStr + ' ' + files[i].name;\r\n                               }\r\n                               document.getElementById('fileInfoSpan').textContent = '파일명: ' + fileInfoStr + ' 등 ' + files.length + '개의 첨부파일';\r\n                           }}/>\r\n                </div>\r\n\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nfunction ReviewListDiv(props) {\r\n    const pageRowCnt = 4;\r\n    let [store, setStore] = useState(props.store);\r\n    let [accessToken, setAccessToekn] = useState(getAccessToken('a'));\r\n    let [loginUser, setLoginUser] = useState(props.loginUser);\r\n    let [startPageNo, setStartPageNo] = useState(0);\r\n    let [reviewList, setReviewList] = useState([]);\r\n    let [selectedReviewNo, setSelectedReviewNo] = useState(null);\r\n    let [newAddLength, setNewAddLength] = useState(pageRowCnt);\r\n\r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n            console.log(newAddLength);\r\n            if (newAddLength < pageRowCnt) {\r\n                return;\r\n            }\r\n            if (\r\n                window.innerHeight + document.documentElement.scrollTop >=\r\n                document.documentElement.scrollHeight - 100\r\n            ) {\r\n\r\n                console.log(\"스크롤 이벤트 핸들러 작동\");\r\n                sendAxiosRequest(`/api/review/list?storeNo=${store.storeNo}&startPage=${startPageNo}`, 'GET', null, response => {\r\n                    console.log('/api/review/list?storeNo=${store.storeNo}&startPage=${startPageNo} ==> :', response.data);\r\n                    if (isNotNullOrNonEmpty(response.data)) {\r\n                        let addReviewList = response.data;\r\n                        setNewAddLength(response.data.length);\r\n                        let newReviewList = [...reviewList, ...addReviewList];\r\n                        setStartPageNo(Math.floor(newReviewList.length / pageRowCnt));\r\n                        setReviewList(newReviewList);\r\n                    }\r\n\r\n                }, error => console.log(error), null, accessToken)\r\n            }\r\n        };\r\n\r\n        window.addEventListener('scroll', handleScroll);\r\n\r\n        return () => {\r\n            window.removeEventListener('scroll', handleScroll);\r\n        }\r\n    }, [startPageNo, reviewList]);\r\n\r\n    useEffect(() => {\r\n        sendAxiosRequest(`/api/review/list?storeNo=${store.storeNo}`, \"GET\", null,\r\n            response => {\r\n                console.log('/api/review/list => ', response.data);\r\n                if (isNotNullOrNonEmpty(response.data)) {\r\n                    let reviewList = response.data;\r\n                    setReviewList(reviewList);\r\n                    setNewAddLength(reviewList.length);\r\n                    setStartPageNo(Math.floor(newAddLength / pageRowCnt));\r\n                }\r\n\r\n            }, error => console.log(error), null, accessToken)\r\n    }, []);\r\n\r\n    console.log('reviewList', reviewList);\r\n    console.log('loginUser', loginUser);\r\n    if (reviewList) {\r\n        return (\r\n            <div id=\"reviewListDiv\" className='review-list-div'>\r\n                {reviewList.length > 0 && reviewList.map((review, index) => (\r\n                    <div key={index} className='review-div'>\r\n                        <form id={'reviewUpdateForm' + index}>\r\n                            <input id={'reviewNo' + index} name='reviewNo' hidden\r\n                                   value={review.reviewNo}/>\r\n\r\n                            <div className='ba-title-container'>\r\n                                <img className='ba-member-profile'\r\n                                     src='http://fvhsczepiibf19983519.cdn.ntruss.com/member/defaultProfile.jpg?type=f&w=50&h=50&ttype=jpg'/>\r\n                                <div className='ba-title-info'>\r\n                                    <b>{review.member.memberName}</b>\r\n                                    <span><b>작성일:</b><input type='text'\r\n                                                            value={dateFormatParse(new Date(review.mdfDatetime))}\r\n                                                            className='ba-input-text'\r\n                                                            disabled/></span>\r\n                                </div>\r\n                                <div className='ba-title-freshness'>\r\n                                    <span className='ba-font-title'>신선도 :</span>\r\n                                    <label htmlFor='freshness-low'>\r\n                                        <img src='/images/low.png'/>\r\n                                        <input type=\"radio\" name='reviewFreshness' value={'L'}\r\n                                               checked={review.reviewFreshness === 'L'}\r\n                                               onChange={(e) => handleInputChange(e, index, reviewList, setReviewList)}/>\r\n                                    </label>\r\n                                    <label htmlFor='freshness-mid'>\r\n                                        <img src='/images/mid.png'/>\r\n                                        <input type=\"radio\" name='reviewFreshness' value={'M'}\r\n                                               checked={review.reviewFreshness === 'M'}\r\n                                               onChange={(e) => handleInputChange(e, index, reviewList, setReviewList)}/>\r\n                                    </label>\r\n                                    <label htmlFor='freshness-high'>\r\n                                        <img src='/images/high.png'/>\r\n                                        <input type=\"radio\" name='reviewFreshness' value={'H'}\r\n                                               checked={review.reviewFreshness === 'H'}\r\n                                               onChange={(e) => handleInputChange(e, index, reviewList, setReviewList)}/>\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <hr/>\r\n                            <div>\r\n                                {review.reviewAttaches.length > 0 && (\r\n                                    <div className='ba-img-list-div'>\r\n                                        <img id={'defaultImg' + index} className='ba-img-first'\r\n                                             src={`http://kr.object.ncloudstorage.com/bleuauction-bucket/review/${review.reviewAttaches.length > 0 ? review.reviewAttaches[0].saveFilename : ''}`}/>\r\n\r\n                                        <div className='ba-div-col-sort'>\r\n                                            {\r\n                                                review.reviewAttaches.map((attach) => (\r\n                                                        <div>\r\n                                                            <img className='ba-img-sub-list-div'\r\n                                                                 src={`http://kr.object.ncloudstorage.com/bleuauction-bucket/review/${attach.saveFilename}`}\r\n                                                                 onMouseEnter={(e) => {\r\n                                                                     let targetImgSrc = e.target.src;\r\n                                                                     let defaultImgId = 'defaultImg' + index;\r\n                                                                     console.log(targetImgSrc);\r\n                                                                     let defaultImg = document.getElementById(defaultImgId);\r\n                                                                     console.log(defaultImg);\r\n                                                                     defaultImg.src = targetImgSrc;\r\n                                                                 }}/>\r\n                                                        </div>\r\n                                                    )\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                                {review.member.memberNo == loginUser.sub ?\r\n                                    (<textarea name='reviewContent' value={review.reviewContent}\r\n                                               className='ba-textarea'\r\n                                               onChange={(e) => handleInputChange(e, index, reviewList, setReviewList)}/>)\r\n                                    : (<textarea name='reviewContent' value={review.reviewContent}\r\n                                                 className='ba-textarea-disabled' readOnly/>\r\n                                    )}\r\n                            </div>\r\n\r\n                            {review.member.memberNo == loginUser.sub ?\r\n                                (<div className='ba-btn-div'>\r\n                                    <div className='ba-file-list'>\r\n                                        {review.reviewAttaches.map((attach) => (\r\n                                            <div key={attach.fileNo} className=\"ba-file-item\">\r\n                                                <li>{attach.originFilename}</li>\r\n                                                <p className=\"ba-delete-text\" onClick={() => {\r\n                                                    sendAxiosRequest(`/api/review/deleteFile?fileNo=${attach.fileNo}`, 'GET', null,\r\n                                                        response => {\r\n                                                            console.log(response.data);\r\n                                                            window.location.reload();\r\n                                                            alert(response.data.originFilename + '(이)가 삭제되었습니다!');\r\n                                                        },\r\n                                                        error => {\r\n                                                            console.log(error);\r\n                                                        }\r\n                                                    );\r\n                                                }}>[삭제]</p>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n\r\n                                    <button type='button' className='ba-btn ba-margin-right20'\r\n                                            onClick={() => {\r\n                                                let jsonObj = formToJSON(new FormData(document.getElementById('reviewUpdateForm' + index)));\r\n                                                console.log(jsonObj);\r\n                                                sendAxiosRequest('/api/review/update', 'POST', jsonObj, response => {\r\n                                                    console.log(response.data);\r\n                                                    console.log('리뷰변경 성공!');\r\n                                                    window.location.reload();\r\n                                                    alert('리뷰를 성공적으로 변경하였습니다!');\r\n                                                }, error => console.log(error));\r\n                                            }}>리뷰수정\r\n                                    </button>\r\n                                    <button type='button' className='ba-btn ba-margin-right10'\r\n                                            onClick={\r\n                                                () => {\r\n                                                    sendAxiosRequest(`/api/review/delete?reviewNo=${review.reviewNo}`, 'GET', null, response => {\r\n                                                        console.log(response.data);\r\n                                                        window.location.reload();\r\n                                                        alert('리뷰가 성공적으로 삭제되었습니다!');\r\n                                                    }, error => {\r\n                                                        console.log(error);\r\n                                                    });\r\n                                                }}>리뷰삭제\r\n                                    </button>\r\n                                </div>) : (<div></div>)\r\n                            }\r\n\r\n                            <div className='ba-text-right'>\r\n                                <button type='button' className='ba-small-btn' onClick={() => {\r\n                                    selectedReviewNo === review.reviewNo ? setSelectedReviewNo(null) : setSelectedReviewNo(review.reviewNo);\r\n                                }}>답글\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n\r\n                        {\r\n                            selectedReviewNo == review.reviewNo && (\r\n                                <AnswerForm reviewNo={review.reviewNo} loginUser={loginUser}/>\r\n                            )\r\n                        }\r\n                    </div>\r\n                ))\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nfunction AnswerForm(props) {\r\n    const [accessToken, setAccessToken] = useState(props.accessToken);\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <div className='ba-text-right'>\r\n                <button type='button' className='ba-small-btn' onClick={() => {\r\n                    document.getElementById('answerWriteFormDiv').style.display = 'block';\r\n                }}>답글작성✍️\r\n                </button>\r\n            </div>\r\n            <div id=\"answerWriteFormDiv\">\r\n                <h4 className='ba-font-title'>답글작성</h4>\r\n                <form id=\"answerWriteForm\">\r\n                    <input name='reviewNo' hidden value={props.reviewNo}></input>\r\n                    <input name='memberNo' hidden value={1}></input>\r\n                    <button type='button' className='ba-close-btn' onClick={\r\n                        () => {\r\n                            document.getElementById('answerWriteFormDiv').style.display = 'none';\r\n\r\n                        }\r\n                    }>x\r\n                    </button>\r\n                    <div>\r\n                        <textarea name='answerContent' className='ba-small-textarea'></textarea>\r\n                    </div>\r\n                    <div className='ba-btn-div'>\r\n                        <button type='button' className='ba-btn ba-margin-right40' onClick={() => {\r\n                            let jsonObj = formToJSON(document.getElementById('answerWriteForm'));\r\n                            console.log(jsonObj);\r\n                            if (jsonObj.answerContent.trim().length < 1) {\r\n                                alert('작성하실 답급 내용을 입력해주세요!');\r\n                                return;\r\n                            }\r\n                            sendAxiosRequest('/api/answer/add', 'POST', jsonObj,\r\n                                response => {\r\n                                    window.location.reload();\r\n                                    alert('답글을 성공적으로 작성하였습니다!');\r\n                                    console.log(response.data);\r\n                                }, error => console.log(error), null, accessToken);\r\n                        }}>작성하기\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <AnswerListDiv reviewNo={props.reviewNo} loginUser={props.loginUser}></AnswerListDiv>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AnswerListDiv(props) {\r\n    const pageRowCnt = 2;\r\n    let [answerList, setAnswerList] = useState([]);\r\n    let [startPageNo, setStartPageNo] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        sendAxiosRequest(`/api/answer/list?reviewNo=${props.reviewNo}`, \"GET\", null,\r\n            response => {\r\n                let asnwerList = response.data.answerList;\r\n                let totalRows = response.data.totalRows;\r\n                console.log('최초 렌더시 totalRow');\r\n                console.log(totalRows);\r\n                console.log('최초 렌더시 asnwerList.length');\r\n                console.log(asnwerList.length);\r\n\r\n                if (totalRows > asnwerList.length) {\r\n                    console.log(document.querySelector('.ba-more-btn'));\r\n                    document.querySelector('.ba-more-btn').hidden = false;\r\n                }\r\n                setAnswerList(response.data.answerList);\r\n                setStartPageNo(response.data.answerList.length / 2);\r\n            }, error => console.log(error));\r\n\r\n        return () => {\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"answerListDiv\" className='answer-list-div'>\r\n            {answerList.map((answer, index) => (\r\n\r\n                < div className='answer-div' key={index}>\r\n                    <form id={'answerUpdateForm' + index}>\r\n                        <div className='ba-title-container'>\r\n                            <img className='ba-member-profile'\r\n                                 src='http://fvhsczepiibf19983519.cdn.ntruss.com/member/defaultProfile.jpg?type=f&w=50&h=50&ttype=jpg'/>\r\n                            <div className='ba-title-info'>\r\n                                <b>{answer.member.memberName}</b>\r\n                                <span><b>작성일:</b><input type='text'\r\n                                                        value={dateFormatParse(new Date(answer.mdfDatetime))}\r\n                                                        className='ba-input-text' disabled/></span>\r\n                            </div>\r\n                        </div>\r\n                        {answer.member.memberNo == props.loginUser.sub ?\r\n                            (\r\n                                <div>\r\n                                    <input type='text' name='answerNo' hidden\r\n                                           value={answer.answerNo}/>\r\n                                    <input type='text' name='reviewNo' hidden\r\n                                           value={answer.reviewNo}/>\r\n                                    <input type='text' name='memberNo' hidden\r\n                                           value={answer.member.memberNo}/>\r\n\r\n                                    <textarea name='answerContent' value={answer.answerContent}\r\n                                              className='ba-textarea' onChange={(e) => {\r\n                                        handleInputChange(e, index, answerList, setAnswerList);\r\n                                    }}/>\r\n                                    <div className='ba-btn-div'>\r\n                                        <button type='button' className='ba-btn ba-margin-right20'\r\n                                                onClick={\r\n                                                    () => {\r\n                                                        let jsonObj = formToJSON(new FormData(document.getElementById('answerUpdateForm' + index)));\r\n                                                        console.log(jsonObj);\r\n                                                        sendAxiosRequest(`/api/answer/update?`, 'POST', jsonObj, response => {\r\n                                                            window.location.reload();\r\n                                                            alert('답글이 성공적으로 변경되었습니다!');\r\n                                                        }, error => {\r\n                                                            console.log(error);\r\n                                                        });\r\n                                                    }\r\n                                                }>답글수정\r\n                                        </button>\r\n                                        <button type='button' className='ba-btn ba-margin-right80'\r\n                                                onClick={\r\n                                                    () => {\r\n                                                        sendAxiosRequest(`/api/answer/delete?answerNo=${answer.answerNo}`, 'GET', null, response => {\r\n                                                            window.location.reload();\r\n                                                            alert('답글이 성공적으로 삭제되었습니다!');\r\n                                                        }, error => {\r\n                                                            console.log(error);\r\n                                                        });\r\n                                                    }\r\n                                                }>답글삭제\r\n                                        </button>\r\n                                    </div>\r\n                                </div>)\r\n                            : (<textarea name='answerContent' value={answer.answerContent}\r\n                                         className='ba-textarea-disabled'/>)}\r\n                    </form>\r\n                </div>\r\n            ))\r\n            }\r\n            <div className='ba-btn-div'>\r\n                <button type='button' className='ba-more-btn' hidden onClick={(e) => {\r\n                    sendAxiosRequest(`/api/answer/list?reviewNo=${props.reviewNo}&startPage=${startPageNo}`, \"GET\", null,\r\n                        response => {\r\n                            console.log(response.data);\r\n                            let totalRows = response.data.totalRows;\r\n                            let appendAnswerList = response.data.answerList;\r\n                            let newAnswerList = [...answerList, ...appendAnswerList];\r\n                            setAnswerList(newAnswerList);\r\n                            setStartPageNo(newAnswerList.length / 2);\r\n                            if (totalRows <= newAnswerList.length) {\r\n                                e.target.hidden = true;\r\n                            }\r\n\r\n                        }, error => {\r\n                            console.log(error);\r\n                        })\r\n                }}>더 보기\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ReviewForm;\r\n","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\StoreHome.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\StoreListItem.js",["458","459","460","461","462","463","464","465","466"],[],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport styles from './StoreListItem.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { isOpenNow, sendAxiosRequest, startEndTimeInfo } from '../utility/common';\r\nimport { useUser } from '../Auth/UserContext';\r\n\r\nfunction StoreListItem(props) {\r\n  let [store, setStore] = useState(props.data);\r\n  let [open, setOpen] = useState('O');\r\n\r\n  useEffect(() => {\r\n    let startEndTime = startEndTimeInfo(store);\r\n    let openStatus = isOpenNow(startEndTime[0], startEndTime[1]);\r\n    setOpen(openStatus);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.storeListItemBox}>\r\n      <img src='/images/boss.png' className={styles.storeListItemBoss} />\r\n      <div className={styles.storeListItemDetailTop}>\r\n        <div className={styles.storeListItemHeader}>\r\n          <strong className={styles.storeListItemDetailName}>{store.storeName}</strong>\r\n          <span className={styles.storeListItemDetailMarket}>{store.marketName}</span>\r\n        </div>\r\n        <p className={styles.storeListItemDetailIntroduce}>{store.storeAddr}</p>\r\n\r\n        <p className={styles.storeListItemBoxReview}>\r\n          <img className={styles.storeListItemFresh} src='/images/fresh.png' />5.0 (1024)\r\n        </p>\r\n        <p className={styles.storeListItemBoxState}>\r\n          <img className={styles.storeListItemStateIcon} src='/images/heart.png' />\r\n          {open == 'O' ? '영업중' : '영업종료'}\r\n        </p>\r\n        <div className={styles.storeListItemDetailBoxMore}>\r\n          <Link to=\"/market/detail\" state={store}>더보기&gt;</Link>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StoreListItem;","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Menu\\MenuItem.js",["467","468","469"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\InputField.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\StoreInfo.js",["470"],[],"// import React from 'react';\r\n// import Coupon from '../Coupon/Coupon'; \r\n\r\n// function StoreIntro({storeInfo, store, coupons }) {\r\n//   console.log(store);\r\n//   // console.log(storeInfo);\r\n\r\n//   return (\r\n//     <div style={outerContainer}>\r\n//     <div style={introContainer}>\r\n//       <img src={storeInfo.image} alt={storeInfo.name} style={imageStyle} />\r\n//      <div style={storeInfoContainer}>\r\n//       <h2>{store.storeName}</h2>\r\n//       <ul style={infoList}>\r\n//         <li>{store.storeDetailAddr}</li>\r\n//         <li>{store.weekdayStartTime} ~ {store.weekdayEndTime}</li>\r\n//         <li>{store.store}</li>\r\n//       </ul>\r\n//       </div>\r\n//       {/* <div style={couponContainer}>\r\n//         {coupons.map(coupon => (\r\n//           <Coupon key={coupon.id} coupon={coupon} />\r\n//         ))}\r\n//       </div> */}\r\n//     </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// const outerContainer = {\r\n//   display: 'flex',\r\n//   justifyContent: 'center',\r\n//   alignItems: 'center',\r\n//   height: '50vh', // 화면 높이를 100%로 설정 (필요한 경우 조절)\r\n//   };\r\n\r\n// const introContainer = {\r\n//     display: 'flex',\r\n//     flexDirection: 'column', // children들을 열 방향으로 배열\r\n//     alignItems: 'center', // children들을 가운데 정렬\r\n//     backgroundColor: '#f0f0f0', // 연한 회색 배경\r\n//     padding: '0px',\r\n//     borderRadius: '8px', // 소프트한 테두리를 위한 둥근 모서리 추가\r\n//     textAlign: 'center',\r\n//     width : '70%',\r\n//     height: '100%'\r\n// };\r\n\r\n// const storeInfoContainer = {\r\n//     textAlign: 'left', \r\n//     padding: '20px',\r\n//     marginBottom: '50px', // 쿠폰 컨테이너와의 간격을 조절\r\n//     width : '100%',\r\n//   };\r\n\r\n// const imageStyle = {\r\n//   width: '100%',\r\n//   height: 'auto',\r\n//   objectFit: 'cover',\r\n// };\r\n\r\n// const infoList = {\r\n//   listStyleType: 'none',\r\n//   padding: '0',\r\n//   margin: '10px 0',\r\n// };\r\n\r\n\r\n// export default StoreIntro;\r\n\r\nimport React from 'react';\r\nimport Coupon from '../Coupon/Coupon'; \r\n\r\nfunction StoreIntro({storeInfo, store, coupons }) {\r\n\r\n  console.log('storeInfo,',storeInfo);\r\n\r\n  return (\r\n    <div style={outerContainer}>\r\n    <div style={introContainer}>\r\n      <img src={storeInfo.image} alt={storeInfo.name} style={imageStyle} />\r\n     <div style={storeInfoContainer}>\r\n      <h2>{storeInfo.name}</h2>\r\n      <ul style={infoList}>\r\n        <li>{storeInfo.storeDetailAddr}</li>\r\n        <li>{storeInfo.weekdayStartTime} ~ {storeInfo.weekdayEndTime}</li>\r\n        <li>{storeInfo.store}</li>\r\n      </ul>\r\n      </div>\r\n      {/* <div style={couponContainer}>\r\n        {coupons.map(coupon => (\r\n          <Coupon key={coupon.id} coupon={coupon} />\r\n        ))}\r\n      </div> */}\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst outerContainer = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '50vh', // 화면 높이를 100%로 설정 (필요한 경우 조절)\r\n  };\r\n\r\nconst introContainer = {\r\n    display: 'flex',\r\n    flexDirection: 'column', // children들을 열 방향으로 배열\r\n    alignItems: 'center', // children들을 가운데 정렬\r\n    backgroundColor: '#f0f0f0', // 연한 회색 배경\r\n    padding: '0px',\r\n    borderRadius: '8px', // 소프트한 테두리를 위한 둥근 모서리 추가\r\n    textAlign: 'center',\r\n    width : '70%',\r\n    height: '100%'\r\n};\r\n\r\nconst storeInfoContainer = {\r\n    textAlign: 'left', \r\n    padding: '20px',\r\n    marginBottom: '10px', // 쿠폰 컨테이너와의 간격을 조절\r\n    width : '100%',\r\n  };\r\n\r\nconst imageStyle = {\r\n  width: '100%',\r\n  height: 'auto',\r\n  objectFit: 'cover',\r\n};\r\n\r\nconst infoList = {\r\n  listStyleType: 'none',\r\n  padding: '0',\r\n  margin: '10px 0',\r\n};\r\n\r\n\r\nexport default StoreIntro;","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MainPage\\Category.js",["471","472","473"],[],"import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport styles from './Category.module.css';\r\n\r\n\r\nfunction Category() {\r\n\r\n  const [selectedOption, setSelectedOption] = useState('');\r\n\r\n  const handleOptionChange = (event) => {\r\n    setSelectedOption(event.target.value);}\r\n\r\n  return (\r\n    <>\r\n      <select value={selectedOption} onChange={handleOptionChange}>\r\n        <option value=\"option1\">옵션 1</option>\r\n        <option value=\"option2\">옵션 2</option>\r\n        <option value=\"option3\">옵션 3</option>\r\n      </select>\r\n\r\n      <p>{selectedOption}</p>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Category;","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\MyOrderContent.js",["474","475","476","477","478"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MainPage\\Announce.js",["479","480","481"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MainPage\\Button.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\StoreHomeItem.js",["482","483","484","485","486","487","488","489","490","491","492","493"],[],"import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport styles from './StoreHomeItem.module.css';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Placeholder from 'react-bootstrap/Placeholder';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction StoreHomeItem({store}) {\r\n\r\n  function isCurrentTimeInRange(startTime, endTime) {\r\n    // 현재 날짜와 시간을 생성\r\n    const currentDate = new Date();\r\n    // 시작 시간과 종료 시간을 파싱 (예: \"08:00\" 형식)\r\n    \r\n    // 현재 시간이 시작 시간과 종료 시간 사이에 있는지 확인\r\n    return currentDate >= startTime && currentDate <= endTime;\r\n  }\r\n\r\n  const startTime = new Date();\r\n  const [startHours, startMinutes, startSecond] = store.weekdayStartTime.split(':');\r\n  startTime.setHours(parseInt(startHours, 10));\r\n  startTime.setMinutes(parseInt(startMinutes, 10));\r\n  // startTime.setSecond(parseInt(startSecond, 10));\r\n\r\n  const endTime = new Date();\r\n  const [endHours, endMinutes, endSecond] = store.weekdayEndTime.split(':');\r\n  endTime.setHours(parseInt(endHours, 10));\r\n  endTime.setMinutes(parseInt(endMinutes, 10));\r\n  // endTime.setSecond(parseInt(endSecond, 10));\r\n\r\n  \r\n  const isWorking = isCurrentTimeInRange(startTime, endTime) ? '영업중' : '영업 종료';\r\n\r\n  // console.log(store);\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <Link to={'/market/detail'}\r\n      state= {store}\r\n      className={styles.storeHomeItemDetailBoxMore}>\r\n      <Card style={{ width: '18rem' }}>\r\n        <img className={styles.storeHomeItemBoss} variant=\"top\" src=\"/images/boss.png\" />\r\n        <div className={styles.storeHomeItemHeader}>\r\n          <p className={styles.storeHomeItemTitle}>{store.storeName}</p>\r\n          <p className={styles.storeHomeItemBoxReview}>\r\n            <img className={styles.storeHomeItemFresh}src=\"/images/fresh.png\"/>5.0\r\n          </p>\r\n        </div>\r\n        <div>\r\n        <p className={styles.storeHomeItemBoxReview}>\r\n        <img className={styles.storeHomeItemStateIcon} src=\"/images/heart.png\"/>{isWorking}</p>\r\n        </div>\r\n        {/* <Button className={styles.storeHomeItemDetailBoxMore}>\r\n          <Link to=\"/\" variant=\"primary\">더보기</Link>\r\n        </Button> */}\r\n      </Card>\r\n    </Link>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default StoreHomeItem;","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Review\\ReviewList.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Coupon\\Coupon.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\StoreItemDailyPrice\\StoreItemAdd.js",["494","495","496","497"],[],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { sendAxiosRequest } from '../utility/common';\r\nimport './StoreItemAdd.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Hidden } from '@mui/material';\r\n\r\n\r\nfunction StroeItemAdd() {\r\n\r\n  const [fish, setFish] = useState('');\r\n  const [code, setCode] = useState('');\r\n  const [size, setSize] = useState('');\r\n  const [origin, setOrigin] = useState('');\r\n  const [place, setPlace] = useState('');\r\n  const [wild, setWild] = useState('');\r\n  const [price, setPrice] = useState('');\r\n\r\n  const handleCode = () => {\r\n    setCode(\r\n      (fish === '광어'||'우럭'||'도미'||'방어'||'참치') ? 'S' :\r\n      (fish === '연어') ? 'F' :\r\n      (fish === '오징어') ? 'E' :\r\n      (fish === '새우') ? 'C' :\r\n      (fish === '가리비'||'전복') ? 'M' : '')\r\n    }\r\n\r\n  const handleSize = (e) => {\r\n    setSize(e.target.value)\r\n  }\r\n\r\n  const handlePrice = (e) => {\r\n    setPrice(e.target.value)\r\n  }\r\n\r\n  const itemSize = \r\n  Number(size) >= 3 ? 'L' :\r\n  Number(size) >= 2 ? 'M' : 'S'\r\n  \r\n\r\n  const fishs = {\r\n    '광어': 1,\r\n    '우럭': 2,\r\n    '도미': 3,\r\n    '방어': 4,\r\n    '참치': 5,\r\n    '연어': 6,\r\n    '오징어': 7,\r\n    '새우': 8,\r\n    '가리비': 9,\r\n    '전복': 10\r\n  }\r\n\r\n  const codes = {\r\n    S: '생선/횟감',\r\n    F: '생선/비횟감',\r\n    C: '갑각류',\r\n    M: '패류',\r\n    E: '기타',\r\n  };\r\n\r\n  const DPlace = {\r\n    ES: '동해',\r\n    WS: '서해',\r\n    SS: '남해',\r\n    JJ: '제주',\r\n    WD: '완도'\r\n  }\r\n\r\n  const IPlace = {\r\n    JP: '일본',\r\n    CN: '중국',\r\n    RU: '러시아',\r\n    NW: '노르웨이'\r\n  }\r\n\r\n  const selectPlace = \r\n  (origin === \"D\") ? DPlace : \r\n  (origin === \"I\") ? IPlace : null;\r\n\r\n  const hiddenButtons = \r\n  (selectPlace !== null) ?\r\n    Object.keys(selectPlace).map((code) => (\r\n      <button\r\n        key={code}\r\n        className={place === code ? 'selected' : ''}\r\n        onClick={() => setPlace(code)}\r\n      >\r\n        {selectPlace[code]}\r\n      </button>\r\n    ))\r\n    : null;\r\n  \r\n  const navigate = useNavigate();\r\n  \r\n  const handleSubmit = () => {\r\n    console.log('dddd');\r\n    sendAxiosRequest ('/api/item/new', 'POST', item, response => {\r\n      console.log(response.data);\r\n      console.log(item);\r\n      navigate('/');\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n\r\n  };\r\n\r\n  const item = {\r\n    'itemName': fish,\r\n    'itemCode': code,\r\n    'itemSize': itemSize,\r\n    'originStatus': origin,\r\n    'originPlaceStatus': place,\r\n    'wildFarmStatus': wild\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n             <>\r\n               {/* 품목 선택 */}\r\n               <p>품목 선택</p>\r\n               <div className=\"freezer_box\">\r\n                 {Object.keys(fishs).map((name) => (\r\n                   <div\r\n                     key={name}\r\n                     className={`fish_item ${fish === name ? 'selected' : ''}`}\r\n                     onClick={() => {\r\n                       setFish(name);\r\n                       handleCode();\r\n                     }}\r\n                   >\r\n                     <img src={`/images/fish${fishs[name]}.jpg`} alt={name} className=\"fish_image\" />\r\n                     <p>{name}</p>\r\n                   </div>\r\n                 ))}\r\n               </div>\r\n\r\n               {/* 무게 입력 */}\r\n               <div className='fish_size'>\r\n                   <p>무게 입력 (kg)</p>\r\n                   <div>\r\n                       <input\r\n                           type='number'\r\n                           value={size}\r\n                           onChange={handleSize}\r\n                           placeholder='예) 2.5'\r\n                       />\r\n                   </div>\r\n               </div>\r\n\r\n               <div className='fish_price'>\r\n                   <p>금일 판매 가격 (원)</p>\r\n                   <div>\r\n                       <input\r\n                           type='number'\r\n                           value={price}\r\n                           onChange={handlePrice}\r\n                           placeholder='예) 10000'\r\n                       />\r\n                   </div>\r\n               </div>\r\n\r\n               <div className='fish_origin'>\r\n                   <p>원산지</p>\r\n                   <div className='origin_buttons'>\r\n                       <button\r\n                           className={origin === 'D' ? 'selected' : ''}\r\n                           onClick={() => setOrigin('D')}\r\n                       >\r\n                           국내산\r\n                       </button>\r\n                       <button\r\n                           className={origin === 'I' ? 'selected' : ''}\r\n                           onClick={() => setOrigin('I')}\r\n                       >\r\n                           수입산\r\n                       </button>\r\n                   </div>\r\n               </div>\r\n\r\n               {/* 판매 장소 선택 */}\r\n               <div className=\"fish_place\">\r\n                 <div className=\"filter_buttons\">{hiddenButtons}</div>\r\n               </div>\r\n\r\n               {/* 자연산/양식 선택 */}\r\n               <div className=\"fish_origin\">\r\n                 <p>자연산 / 양식</p>\r\n                 <div className=\"origin_buttons\">\r\n                   <button className={wild === 'W' ? 'selected' : ''} onClick={() => setWild('W')}>\r\n                     자연산\r\n                   </button>\r\n                   <button className={wild === 'F' ? 'selected' : ''} onClick={() => setWild('F')}>\r\n                     양식\r\n                   </button>\r\n                 </div>\r\n               </div>\r\n\r\n               {/* 제출하기 버튼 */}\r\n               <div className=\"submit_button\">\r\n                 <button onClick={handleSubmit}>제출하기</button>\r\n               </div>\r\n             </>\r\n           );\r\n         }\r\n\r\nexport default StroeItemAdd;","C:\\Users\\think\\git\\bleuauction_fe\\src\\routes\\StoreList.js",["498","499","500","501","502"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Chat\\Chat.js",["503","504"],[],"import React, { useState, useRef, useEffect } from 'react';\r\nimport { MessageBox, ChatList } from 'react-chat-elements';\r\nimport 'react-chat-elements/dist/main.css';\r\nimport axios from 'axios';\r\n\r\nconst Chat = ({ closeModal }) => {\r\n    const [chatMessage, setChatMessage] = useState('');\r\n    const [response, setResponse] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const chatContainerRef = useRef(null);\r\n\r\n    const handleMessage = async () => {\r\n        try {\r\n            const response = await axios.post('/api/chat/message', chatMessage, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n\r\n            setMessages((prevMessages) => [\r\n                ...prevMessages,\r\n                {\r\n                    position: 'right',\r\n                    type: 'text',\r\n                    text: chatMessage,\r\n                    date: new Date(),\r\n                },\r\n                {\r\n                    position: 'left',\r\n                    type: 'text',\r\n                    text: response.data,\r\n                    date: new Date(),\r\n                },\r\n            ]);\r\n\r\n            setResponse(response.data);\r\n            setChatMessage('');\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            handleMessage();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\r\n    }, [messages]);\r\n\r\n    const handleOutsideClick = (e) => {\r\n        if (e.target.classList.contains('chat-modal-container')) {\r\n            closeModal();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"chat-modal-container\"\r\n            style={{\r\n                position: 'fixed',\r\n                top: 0,\r\n                left: 0,\r\n                width: '100%',\r\n                height: '100%',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n                zIndex: 9999,\r\n            }}\r\n            onClick={handleOutsideClick}\r\n        >\r\n            <div\r\n                style={{\r\n                    backgroundColor: '#2F80ED',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    padding: '20px',\r\n                    maxWidth: '600px',\r\n                    width: '70%',\r\n                    borderRadius: '20px',\r\n                    position: 'relative',\r\n                    maxHeight: '100%',\r\n                    overflow: 'auto',\r\n                }}\r\n            >\r\n                <ChatList\r\n                    className=\"chat-list\"\r\n                    dataSource={[\r\n                        {\r\n                            avatar: 'https://www.pngfind.com/pngs/m/676-6764066_fish-cartoon-images-fish-logo-png-transparent-png.png',\r\n                            alt: 'Fish',\r\n                            title: 'BA_ChatBot',\r\n                            subtitle: '무엇이든 물어보세요',\r\n                            date: new Date(),\r\n                            unread: 0,\r\n                        },\r\n                    ]}\r\n                    style={{ marginBottom: '20px' }}\r\n                />\r\n                <div\r\n                    ref={chatContainerRef}\r\n                    style={{ flex: '1', overflowY: 'auto', marginTop: '10px' }}\r\n                >\r\n                    {messages.map((message, index) => (\r\n                        <MessageBox\r\n                            key={index}\r\n                            position={message.position}\r\n                            type={message.type}\r\n                            text={message.text}\r\n                            date={message.date}\r\n                            avatar={\r\n                                message.position === 'left'\r\n                                    ? 'https://www.pngfind.com/pngs/m/676-6764066_fish-cartoon-images-fish-logo-png-transparent-png.png'\r\n                                    : null\r\n                            }\r\n                            text={message.text}\r\n                            title={message.position === 'left' ? 'BA_ChatBot' : 'You'}\r\n                            titleColor={message.position === 'left' ? '#FFFFFF' : '#4CAF50'}\r\n                            textFontSize={16}\r\n                            textFontColor=\"#333\"\r\n                            style={{\r\n                                backgroundColor: message.position === 'left' ? '#FFFFFF' : '#DCF8C6',\r\n                                borderRadius: message.position === 'left' ? '0px 10px 10px 10px' : '10px 0px 10px 10px',\r\n                                padding: '10px 15px',\r\n                                maxWidth: '70%',\r\n                                alignSelf: message.position === 'left' ? 'flex-start' : 'flex-end',\r\n                                marginBottom: 10,\r\n                            }}\r\n                        />\r\n                    ))}\r\n                </div>\r\n                <div style={{ display: 'flex', alignItems: 'center', marginTop: '20px' }}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={chatMessage}\r\n                        onChange={(e) => setChatMessage(e.target.value)}\r\n                        onKeyPress={handleKeyPress}\r\n                        style={{ flex: '1', padding: '15px', borderRadius: '30px', border: 'none', fontSize: '16px' }}\r\n                        placeholder=\"메시지를 입력하세요...\"\r\n                    />\r\n                    <button\r\n                        onClick={handleMessage}\r\n                        style={{\r\n                            marginLeft: '10px',\r\n                            padding: '15px 25px',\r\n                            borderRadius: '30px',\r\n                            border: 'none',\r\n                            backgroundColor: '#4CAF50',\r\n                            color: '#fff',\r\n                            cursor: 'pointer',\r\n                            fontSize: '16px',\r\n                        }}\r\n                    >\r\n                        보내기\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Notice\\NoticeDetail.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Notice\\NoticeList.js",["505","506"],[],"import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n//import Announce from '/components/MainPage/Announce';\r\nimport NoticeListItem from './NoticeListItem';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport styles from './NoticeList.css'\r\n\r\n\r\nfunction NoticeList() {\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/notice')\r\n      .then(response => setData(response.data))\r\n      .catch(error => console.log(error));\r\n      // console.log(data);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n    <div className={styles.storeListBox}>\r\n      <NoticeListItem data={data}/>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NoticeList;","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Notice\\NoticeListItem.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\OrderModal.js",["507","508","509","510","511","512","513","514","515"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Admin\\AdminNoticeList.js",["516","517"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Admin\\AdminNoticeDetail.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Admin\\NoticeRegisterationForm.js",["518","519"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Admin\\AdminNoticeListItem.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\OrderItem.js",["520","521","522"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\OrderMenuList.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\StoreOrder.js",["523","524","525","526"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\StoreEdit.js",["527","528","529","530","531","532"],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\OS\\OS.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\Market\\StoreInfoDetail.js",["533"],[],"\r\nimport React from 'react';\r\n\r\nfunction StoreInfoDetail({storeDetail}) {\r\n\r\n  console.log('storeDetail,',storeDetail);\r\n  // console.log(storeInfo);\r\n\r\n    // storeDetail아 null이거나 필요한 속성이 없으면 렌더링하지 않습니다.\r\n    if (!storeDetail) {\r\n        return <div>Loading...</div>; // 혹은 다른 대체 컨텐츠\r\n      }\r\n  return (\r\n    <div style={outerContainer}>\r\n    <div style={introContainer}>\r\n      {/* <img src={storeDetail.image} alt={storeDetail.name} style={imageStyle} /> */}\r\n     <div style={storeInfoContainer}>\r\n      <h2>{storeDetail.storeName}</h2>\r\n      <ul style={infoList}>\r\n        <li style={listItem}>시장 이름:{storeDetail.marketName}</li>\r\n        <li style={listItem}>기본 주소:{storeDetail.storeAddr}</li>\r\n        <li style={listItem}>상세 주소:{storeDetail.storeDetailAddr}</li>\r\n        <li style={listItem}>사업등록번호:{storeDetail.licenseNo}</li>\r\n        <li style={listItem}>운영시간:{storeDetail.weekdayStartTime} ~ {storeDetail.weekdayEndTime}</li>\r\n        <li style={listItem}>{storeDetail.store}</li>\r\n      </ul>\r\n      </div>\r\n      {/* <div style={couponContainer}>\r\n        {coupons.map(coupon => (\r\n          <Coupon key={coupon.id} coupon={coupon} />\r\n        ))}\r\n      </div> */}\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst outerContainer = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100vh',\r\n    // backgroundColor: '#f7f7f7', // 아주 연한 회색 배경으로 조정\r\n  };\r\n\r\nconst introContainer = {\r\n    display: 'flex',\r\n    flexDirection: 'column', // children들을 열 방향으로 배열\r\n    alignItems: 'center', // children들을 가운데 정렬\r\n    // backgroundColor: '#f0f0f0',// 연한 회색 배경\r\n    padding: '0px',\r\n    borderRadius: '8px', // 소프트한 테두리를 위한 둥근 모서리 추가\r\n    textAlign: 'center',\r\n    width : '70%',\r\n    height: '100%'\r\n};\r\n\r\nconst storeInfoContainer = {\r\n    textAlign: 'left', \r\n    padding: '20px',\r\n    marginBottom: '10px', // 쿠폰 컨테이너와의 간격을 조절\r\n    width : '100%',\r\n  };\r\n\r\nconst imageStyle = {\r\n//   width: '100%',\r\n//   height: 'auto',\r\n//   objectFit: 'cover',\r\n};\r\n\r\nconst infoList = {\r\n  listStyleType: 'none',\r\n  padding: '0',\r\n  margin: '10px 0',\r\n  fontSize: '25px', // larger font size\r\n\r\n};\r\n\r\nconst listItem = {\r\n    marginBottom: '10px',\r\n}\r\n\r\n\r\nexport default StoreInfoDetail;","C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\MenuDetail.js",[],[],"C:\\Users\\think\\git\\bleuauction_fe\\src\\components\\MyPage\\MenuEdit.js",["534","535","536","537","538","539","540","541","542","543","544"],[],{"ruleId":"545","severity":1,"message":"546","line":1,"column":17,"nodeType":"547","messageId":"548","endLine":1,"endColumn":26},{"ruleId":"545","severity":1,"message":"549","line":1,"column":28,"nodeType":"547","messageId":"548","endLine":1,"endColumn":36},{"ruleId":"545","severity":1,"message":"550","line":2,"column":8,"nodeType":"547","messageId":"548","endLine":2,"endColumn":13},{"ruleId":"545","severity":1,"message":"551","line":2,"column":17,"nodeType":"547","messageId":"548","endLine":2,"endColumn":27},{"ruleId":"545","severity":1,"message":"552","line":23,"column":8,"nodeType":"547","messageId":"548","endLine":23,"endColumn":20},{"ruleId":"545","severity":1,"message":"553","line":33,"column":10,"nodeType":"547","messageId":"548","endLine":33,"endColumn":26},{"ruleId":"545","severity":1,"message":"554","line":42,"column":8,"nodeType":"547","messageId":"548","endLine":42,"endColumn":22},{"ruleId":"545","severity":1,"message":"555","line":47,"column":11,"nodeType":"547","messageId":"548","endLine":47,"endColumn":15},{"ruleId":"545","severity":1,"message":"556","line":47,"column":17,"nodeType":"547","messageId":"548","endLine":47,"endColumn":22},{"ruleId":"545","severity":1,"message":"557","line":2,"column":10,"nodeType":"547","messageId":"548","endLine":2,"endColumn":24},{"ruleId":"545","severity":1,"message":"558","line":3,"column":8,"nodeType":"547","messageId":"548","endLine":3,"endColumn":17},{"ruleId":"545","severity":1,"message":"551","line":12,"column":10,"nodeType":"547","messageId":"548","endLine":12,"endColumn":20},{"ruleId":"545","severity":1,"message":"549","line":13,"column":10,"nodeType":"547","messageId":"548","endLine":13,"endColumn":18},{"ruleId":"545","severity":1,"message":"559","line":13,"column":20,"nodeType":"547","messageId":"548","endLine":13,"endColumn":30},{"ruleId":"545","severity":1,"message":"560","line":15,"column":10,"nodeType":"547","messageId":"548","endLine":15,"endColumn":19},{"ruleId":"545","severity":1,"message":"550","line":16,"column":8,"nodeType":"547","messageId":"548","endLine":16,"endColumn":13},{"ruleId":"545","severity":1,"message":"555","line":25,"column":10,"nodeType":"547","messageId":"548","endLine":25,"endColumn":14},{"ruleId":"545","severity":1,"message":"550","line":3,"column":8,"nodeType":"547","messageId":"548","endLine":3,"endColumn":13},{"ruleId":"545","severity":1,"message":"560","line":4,"column":10,"nodeType":"547","messageId":"548","endLine":4,"endColumn":19},{"ruleId":"545","severity":1,"message":"561","line":31,"column":9,"nodeType":"547","messageId":"548","endLine":31,"endColumn":16},{"ruleId":"545","severity":1,"message":"550","line":2,"column":8,"nodeType":"547","messageId":"548","endLine":2,"endColumn":13},{"ruleId":"545","severity":1,"message":"550","line":2,"column":10,"nodeType":"547","messageId":"548","endLine":2,"endColumn":15},{"ruleId":"545","severity":1,"message":"551","line":2,"column":17,"nodeType":"547","messageId":"548","endLine":2,"endColumn":27},{"ruleId":"545","severity":1,"message":"562","line":5,"column":10,"nodeType":"547","messageId":"548","endLine":5,"endColumn":17},{"ruleId":"545","severity":1,"message":"563","line":9,"column":3,"nodeType":"547","messageId":"548","endLine":9,"endColumn":19},{"ruleId":"545","severity":1,"message":"564","line":13,"column":3,"nodeType":"547","messageId":"548","endLine":13,"endColumn":10},{"ruleId":"545","severity":1,"message":"565","line":24,"column":9,"nodeType":"547","messageId":"548","endLine":24,"endColumn":19},{"ruleId":"566","severity":1,"message":"567","line":43,"column":6,"nodeType":"568","endLine":43,"endColumn":8,"suggestions":"569"},{"ruleId":"545","severity":1,"message":"550","line":2,"column":8,"nodeType":"547","messageId":"548","endLine":2,"endColumn":13},{"ruleId":"545","severity":1,"message":"570","line":4,"column":8,"nodeType":"547","messageId":"548","endLine":4,"endColumn":21},{"ruleId":"545","severity":1,"message":"571","line":6,"column":10,"nodeType":"547","messageId":"548","endLine":6,"endColumn":16},{"ruleId":"545","severity":1,"message":"572","line":6,"column":18,"nodeType":"547","messageId":"548","endLine":6,"endColumn":23},{"ruleId":"545","severity":1,"message":"573","line":7,"column":10,"nodeType":"547","messageId":"548","endLine":7,"endColumn":28},{"ruleId":"545","severity":1,"message":"574","line":7,"column":30,"nodeType":"547","messageId":"548","endLine":7,"endColumn":43},{"ruleId":"545","severity":1,"message":"575","line":8,"column":10,"nodeType":"547","messageId":"548","endLine":8,"endColumn":33},{"ruleId":"545","severity":1,"message":"576","line":13,"column":24,"nodeType":"547","messageId":"548","endLine":13,"endColumn":39},{"ruleId":"545","severity":1,"message":"577","line":14,"column":9,"nodeType":"547","messageId":"548","endLine":14,"endColumn":20},{"ruleId":"566","severity":1,"message":"578","line":55,"column":6,"nodeType":"568","endLine":55,"endColumn":8,"suggestions":"579"},{"ruleId":"545","severity":1,"message":"546","line":1,"column":16,"nodeType":"547","messageId":"548","endLine":1,"endColumn":25},{"ruleId":"545","severity":1,"message":"549","line":1,"column":27,"nodeType":"547","messageId":"548","endLine":1,"endColumn":35},{"ruleId":"545","severity":1,"message":"550","line":2,"column":8,"nodeType":"547","messageId":"548","endLine":2,"endColumn":13},{"ruleId":"580","severity":1,"message":"581","line":9,"column":7,"nodeType":"582","endLine":9,"endColumn":41},{"ruleId":"545","severity":1,"message":"550","line":3,"column":8,"nodeType":"547","messageId":"548","endLine":3,"endColumn":13},{"ruleId":"545","severity":1,"message":"551","line":3,"column":17,"nodeType":"547","messageId":"548","endLine":3,"endColumn":27},{"ruleId":"545","severity":1,"message":"583","line":17,"column":10,"nodeType":"547","messageId":"548","endLine":17,"endColumn":22},{"ruleId":"545","severity":1,"message":"584","line":21,"column":9,"nodeType":"547","messageId":"548","endLine":21,"endColumn":26},{"ruleId":"545","severity":1,"message":"585","line":36,"column":9,"nodeType":"547","messageId":"548","endLine":36,"endColumn":21},{"ruleId":"545","severity":1,"message":"550","line":2,"column":8,"nodeType":"547","messageId":"548","endLine":2,"endColumn":13},{"ruleId":"545","severity":1,"message":"586","line":4,"column":8,"nodeType":"547","messageId":"548","endLine":4,"endColumn":14},{"ruleId":"545","severity":1,"message":"587","line":5,"column":8,"nodeType":"547","messageId":"548","endLine":5,"endColumn":16},{"ruleId":"545","severity":1,"message":"588","line":7,"column":8,"nodeType":"547","messageId":"548","endLine":7,"endColumn":17},{"ruleId":"545","severity":1,"message":"571","line":8,"column":10,"nodeType":"547","messageId":"548","endLine":8,"endColumn":16},{"ruleId":"545","severity":1,"message":"572","line":8,"column":18,"nodeType":"547","messageId":"548","endLine":8,"endColumn":23},{"ruleId":"545","severity":1,"message":"560","line":9,"column":10,"nodeType":"547","messageId":"548","endLine":9,"endColumn":19},{"ruleId":"545","severity":1,"message":"557","line":9,"column":54,"nodeType":"547","messageId":"548","endLine":9,"endColumn":68},{"ruleId":"545","severity":1,"message":"589","line":9,"column":70,"nodeType":"547","messageId":"548","endLine":9,"endColumn":84},{"ruleId":"545","severity":1,"message":"558","line":11,"column":8,"nodeType":"547","messageId":"548","endLine":11,"endColumn":17},{"ruleId":"566","severity":1,"message":"590","line":27,"column":6,"nodeType":"568","endLine":27,"endColumn":8,"suggestions":"591"},{"ruleId":"566","severity":1,"message":"592","line":56,"column":6,"nodeType":"568","endLine":56,"endColumn":30,"suggestions":"593"},{"ruleId":"545","severity":1,"message":"557","line":10,"column":9,"nodeType":"547","messageId":"548","endLine":10,"endColumn":23},{"ruleId":"545","severity":1,"message":"594","line":11,"column":10,"nodeType":"547","messageId":"548","endLine":11,"endColumn":18},{"ruleId":"545","severity":1,"message":"562","line":13,"column":10,"nodeType":"547","messageId":"548","endLine":13,"endColumn":17},{"ruleId":"566","severity":1,"message":"595","line":57,"column":6,"nodeType":"568","endLine":57,"endColumn":8,"suggestions":"596"},{"ruleId":"545","severity":1,"message":"597","line":3,"column":10,"nodeType":"547","messageId":"548","endLine":3,"endColumn":14},{"ruleId":"545","severity":1,"message":"598","line":3,"column":16,"nodeType":"547","messageId":"548","endLine":3,"endColumn":20},{"ruleId":"545","severity":1,"message":"599","line":3,"column":22,"nodeType":"547","messageId":"548","endLine":3,"endColumn":28},{"ruleId":"545","severity":1,"message":"600","line":4,"column":10,"nodeType":"547","messageId":"548","endLine":4,"endColumn":14},{"ruleId":"545","severity":1,"message":"601","line":4,"column":16,"nodeType":"547","messageId":"548","endLine":4,"endColumn":27},{"ruleId":"545","severity":1,"message":"550","line":5,"column":8,"nodeType":"547","messageId":"548","endLine":5,"endColumn":13},{"ruleId":"545","severity":1,"message":"589","line":10,"column":3,"nodeType":"547","messageId":"548","endLine":10,"endColumn":17},{"ruleId":"545","severity":1,"message":"602","line":10,"column":35,"nodeType":"547","messageId":"548","endLine":10,"endColumn":57},{"ruleId":"545","severity":1,"message":"562","line":12,"column":10,"nodeType":"547","messageId":"548","endLine":12,"endColumn":17},{"ruleId":"545","severity":1,"message":"558","line":13,"column":8,"nodeType":"547","messageId":"548","endLine":13,"endColumn":17},{"ruleId":"545","severity":1,"message":"603","line":114,"column":10,"nodeType":"547","messageId":"548","endLine":114,"endColumn":15},{"ruleId":"545","severity":1,"message":"550","line":4,"column":8,"nodeType":"547","messageId":"548","endLine":4,"endColumn":13},{"ruleId":"545","severity":1,"message":"601","line":5,"column":10,"nodeType":"547","messageId":"548","endLine":5,"endColumn":21},{"ruleId":"545","severity":1,"message":"604","line":5,"column":23,"nodeType":"547","messageId":"548","endLine":5,"endColumn":32},{"ruleId":"545","severity":1,"message":"605","line":11,"column":21,"nodeType":"547","messageId":"548","endLine":11,"endColumn":33},{"ruleId":"566","severity":1,"message":"606","line":22,"column":6,"nodeType":"568","endLine":22,"endColumn":8,"suggestions":"607"},{"ruleId":"545","severity":1,"message":"608","line":36,"column":9,"nodeType":"547","messageId":"548","endLine":36,"endColumn":19},{"ruleId":"545","severity":1,"message":"609","line":39,"column":11,"nodeType":"547","messageId":"548","endLine":39,"endColumn":30},{"ruleId":"545","severity":1,"message":"549","line":1,"column":17,"nodeType":"547","messageId":"548","endLine":1,"endColumn":25},{"ruleId":"545","severity":1,"message":"550","line":4,"column":8,"nodeType":"547","messageId":"548","endLine":4,"endColumn":13},{"ruleId":"545","severity":1,"message":"551","line":4,"column":17,"nodeType":"547","messageId":"548","endLine":4,"endColumn":27},{"ruleId":"610","severity":1,"message":"611","line":139,"column":5,"nodeType":"612","messageId":"613","endLine":139,"endColumn":15},{"ruleId":"545","severity":1,"message":"546","line":1,"column":17,"nodeType":"547","messageId":"548","endLine":1,"endColumn":26},{"ruleId":"545","severity":1,"message":"549","line":1,"column":28,"nodeType":"547","messageId":"548","endLine":1,"endColumn":36},{"ruleId":"545","severity":1,"message":"550","line":3,"column":8,"nodeType":"547","messageId":"548","endLine":3,"endColumn":13},{"ruleId":"545","severity":1,"message":"551","line":3,"column":17,"nodeType":"547","messageId":"548","endLine":3,"endColumn":27},{"ruleId":"545","severity":1,"message":"560","line":4,"column":10,"nodeType":"547","messageId":"548","endLine":4,"endColumn":19},{"ruleId":"545","severity":1,"message":"553","line":4,"column":21,"nodeType":"547","messageId":"548","endLine":4,"endColumn":37},{"ruleId":"545","severity":1,"message":"614","line":2,"column":10,"nodeType":"547","messageId":"548","endLine":2,"endColumn":14},{"ruleId":"545","severity":1,"message":"615","line":1,"column":38,"nodeType":"547","messageId":"548","endLine":1,"endColumn":44},{"ruleId":"545","severity":1,"message":"550","line":2,"column":8,"nodeType":"547","messageId":"548","endLine":2,"endColumn":13},{"ruleId":"545","severity":1,"message":"616","line":3,"column":10,"nodeType":"547","messageId":"548","endLine":3,"endColumn":18},{"ruleId":"545","severity":1,"message":"557","line":6,"column":79,"nodeType":"547","messageId":"548","endLine":6,"endColumn":93},{"ruleId":"545","severity":1,"message":"602","line":6,"column":95,"nodeType":"547","messageId":"548","endLine":6,"endColumn":117},{"ruleId":"545","severity":1,"message":"617","line":10,"column":8,"nodeType":"547","messageId":"548","endLine":10,"endColumn":20},{"ruleId":"545","severity":1,"message":"618","line":13,"column":10,"nodeType":"547","messageId":"548","endLine":13,"endColumn":26},{"ruleId":"545","severity":1,"message":"619","line":53,"column":7,"nodeType":"547","messageId":"548","endLine":53,"endColumn":26},{"ruleId":"545","severity":1,"message":"620","line":185,"column":21,"nodeType":"547","messageId":"548","endLine":185,"endColumn":30},{"ruleId":"621","severity":1,"message":"622","line":270,"column":41,"nodeType":"623","messageId":"613","endLine":270,"endColumn":43},{"ruleId":"545","severity":1,"message":"624","line":3,"column":10,"nodeType":"547","messageId":"548","endLine":3,"endColumn":26},{"ruleId":"545","severity":1,"message":"625","line":34,"column":9,"nodeType":"547","messageId":"548","endLine":34,"endColumn":14},{"ruleId":"545","severity":1,"message":"626","line":37,"column":10,"nodeType":"547","messageId":"548","endLine":37,"endColumn":13},{"ruleId":"545","severity":1,"message":"627","line":94,"column":17,"nodeType":"547","messageId":"548","endLine":94,"endColumn":21},{"ruleId":"621","severity":1,"message":"622","line":123,"column":36,"nodeType":"623","messageId":"613","endLine":123,"endColumn":38},{"ruleId":"545","severity":1,"message":"546","line":1,"column":17,"nodeType":"547","messageId":"548","endLine":1,"endColumn":26},{"ruleId":"545","severity":1,"message":"550","line":2,"column":8,"nodeType":"547","messageId":"548","endLine":2,"endColumn":13},{"ruleId":"545","severity":1,"message":"628","line":6,"column":22,"nodeType":"547","messageId":"548","endLine":6,"endColumn":30},{"ruleId":"545","severity":1,"message":"562","line":4,"column":9,"nodeType":"547","messageId":"548","endLine":4,"endColumn":16},{"ruleId":"545","severity":1,"message":"573","line":11,"column":5,"nodeType":"547","messageId":"548","endLine":11,"endColumn":23},{"ruleId":"545","severity":1,"message":"629","line":16,"column":25,"nodeType":"547","messageId":"548","endLine":16,"endColumn":39},{"ruleId":"545","severity":1,"message":"630","line":17,"column":24,"nodeType":"547","messageId":"548","endLine":17,"endColumn":38},{"ruleId":"545","severity":1,"message":"631","line":18,"column":19,"nodeType":"547","messageId":"548","endLine":18,"endColumn":27},{"ruleId":"545","severity":1,"message":"605","line":40,"column":21,"nodeType":"547","messageId":"548","endLine":40,"endColumn":33},{"ruleId":"545","severity":1,"message":"631","line":41,"column":17,"nodeType":"547","messageId":"548","endLine":41,"endColumn":25},{"ruleId":"621","severity":1,"message":"632","line":44,"column":40,"nodeType":"623","messageId":"613","endLine":44,"endColumn":42},{"ruleId":"580","severity":1,"message":"581","line":52,"column":17,"nodeType":"582","endLine":53,"endColumn":124},{"ruleId":"580","severity":1,"message":"581","line":56,"column":73,"nodeType":"582","endLine":56,"endColumn":101},{"ruleId":"580","severity":1,"message":"581","line":60,"column":76,"nodeType":"582","endLine":61,"endColumn":44},{"ruleId":"580","severity":1,"message":"581","line":65,"column":74,"nodeType":"582","endLine":66,"endColumn":45},{"ruleId":"545","severity":1,"message":"631","line":128,"column":17,"nodeType":"547","messageId":"548","endLine":128,"endColumn":25},{"ruleId":"545","severity":1,"message":"633","line":129,"column":23,"nodeType":"547","messageId":"548","endLine":129,"endColumn":37},{"ruleId":"545","severity":1,"message":"605","line":130,"column":21,"nodeType":"547","messageId":"548","endLine":130,"endColumn":33},{"ruleId":"634","severity":1,"message":"635","line":149,"column":33,"nodeType":"636","messageId":"637","endLine":149,"endColumn":107},{"ruleId":"566","severity":1,"message":"638","line":167,"column":8,"nodeType":"568","endLine":167,"endColumn":33,"suggestions":"639"},{"ruleId":"566","severity":1,"message":"640","line":181,"column":8,"nodeType":"568","endLine":181,"endColumn":10,"suggestions":"641"},{"ruleId":"580","severity":1,"message":"581","line":195,"column":33,"nodeType":"582","endLine":196,"endColumn":141},{"ruleId":"580","severity":1,"message":"581","line":207,"column":41,"nodeType":"582","endLine":207,"endColumn":69},{"ruleId":"580","severity":1,"message":"581","line":213,"column":41,"nodeType":"582","endLine":213,"endColumn":69},{"ruleId":"580","severity":1,"message":"581","line":219,"column":41,"nodeType":"582","endLine":219,"endColumn":70},{"ruleId":"580","severity":1,"message":"581","line":231,"column":41,"nodeType":"582","endLine":232,"endColumn":197},{"ruleId":"580","severity":1,"message":"581","line":238,"column":61,"nodeType":"582","endLine":247,"endColumn":70},{"ruleId":"621","severity":1,"message":"622","line":255,"column":57,"nodeType":"623","messageId":"613","endLine":255,"endColumn":59},{"ruleId":"621","severity":1,"message":"622","line":264,"column":53,"nodeType":"623","messageId":"613","endLine":264,"endColumn":55},{"ruleId":"621","severity":1,"message":"622","line":322,"column":46,"nodeType":"623","messageId":"613","endLine":322,"endColumn":48},{"ruleId":"545","severity":1,"message":"629","line":336,"column":25,"nodeType":"547","messageId":"548","endLine":336,"endColumn":39},{"ruleId":"545","severity":1,"message":"642","line":386,"column":11,"nodeType":"547","messageId":"548","endLine":386,"endColumn":21},{"ruleId":"566","severity":1,"message":"643","line":411,"column":8,"nodeType":"568","endLine":411,"endColumn":10,"suggestions":"644"},{"ruleId":"580","severity":1,"message":"581","line":420,"column":29,"nodeType":"582","endLine":421,"endColumn":137},{"ruleId":"621","severity":1,"message":"622","line":429,"column":49,"nodeType":"623","messageId":"613","endLine":429,"endColumn":51},{"ruleId":"545","severity":1,"message":"550","line":2,"column":8,"nodeType":"547","messageId":"548","endLine":2,"endColumn":13},{"ruleId":"545","severity":1,"message":"553","line":5,"column":21,"nodeType":"547","messageId":"548","endLine":5,"endColumn":37},{"ruleId":"545","severity":1,"message":"562","line":6,"column":10,"nodeType":"547","messageId":"548","endLine":6,"endColumn":17},{"ruleId":"545","severity":1,"message":"631","line":9,"column":15,"nodeType":"547","messageId":"548","endLine":9,"endColumn":23},{"ruleId":"566","severity":1,"message":"645","line":16,"column":6,"nodeType":"568","endLine":16,"endColumn":8,"suggestions":"646"},{"ruleId":"580","severity":1,"message":"581","line":20,"column":7,"nodeType":"582","endLine":20,"endColumn":74},{"ruleId":"580","severity":1,"message":"581","line":29,"column":11,"nodeType":"582","endLine":29,"endColumn":80},{"ruleId":"580","severity":1,"message":"581","line":32,"column":11,"nodeType":"582","endLine":32,"endColumn":84},{"ruleId":"621","severity":1,"message":"622","line":33,"column":17,"nodeType":"623","messageId":"613","endLine":33,"endColumn":19},{"ruleId":"545","severity":1,"message":"550","line":2,"column":8,"nodeType":"547","messageId":"548","endLine":2,"endColumn":13},{"ruleId":"545","severity":1,"message":"647","line":12,"column":21,"nodeType":"547","messageId":"548","endLine":12,"endColumn":33},{"ruleId":"545","severity":1,"message":"603","line":13,"column":10,"nodeType":"547","messageId":"548","endLine":13,"endColumn":15},{"ruleId":"545","severity":1,"message":"586","line":72,"column":8,"nodeType":"547","messageId":"548","endLine":72,"endColumn":14},{"ruleId":"545","severity":1,"message":"546","line":1,"column":16,"nodeType":"547","messageId":"548","endLine":1,"endColumn":25},{"ruleId":"545","severity":1,"message":"550","line":2,"column":8,"nodeType":"547","messageId":"548","endLine":2,"endColumn":13},{"ruleId":"545","severity":1,"message":"648","line":3,"column":8,"nodeType":"547","messageId":"548","endLine":3,"endColumn":14},{"ruleId":"545","severity":1,"message":"649","line":1,"column":28,"nodeType":"547","messageId":"548","endLine":1,"endColumn":38},{"ruleId":"545","severity":1,"message":"550","line":2,"column":8,"nodeType":"547","messageId":"548","endLine":2,"endColumn":13},{"ruleId":"545","severity":1,"message":"650","line":5,"column":8,"nodeType":"547","messageId":"548","endLine":5,"endColumn":21},{"ruleId":"566","severity":1,"message":"651","line":26,"column":6,"nodeType":"568","endLine":26,"endColumn":8,"suggestions":"652"},{"ruleId":"580","severity":1,"message":"581","line":49,"column":9,"nodeType":"582","endLine":49,"endColumn":39},{"ruleId":"545","severity":1,"message":"546","line":1,"column":17,"nodeType":"547","messageId":"548","endLine":1,"endColumn":26},{"ruleId":"545","severity":1,"message":"549","line":1,"column":28,"nodeType":"547","messageId":"548","endLine":1,"endColumn":36},{"ruleId":"545","severity":1,"message":"550","line":2,"column":8,"nodeType":"547","messageId":"548","endLine":2,"endColumn":13},{"ruleId":"545","severity":1,"message":"546","line":1,"column":16,"nodeType":"547","messageId":"548","endLine":1,"endColumn":25},{"ruleId":"545","severity":1,"message":"549","line":1,"column":27,"nodeType":"547","messageId":"548","endLine":1,"endColumn":35},{"ruleId":"545","severity":1,"message":"550","line":2,"column":8,"nodeType":"547","messageId":"548","endLine":2,"endColumn":13},{"ruleId":"545","severity":1,"message":"653","line":4,"column":16,"nodeType":"547","messageId":"548","endLine":4,"endColumn":23},{"ruleId":"545","severity":1,"message":"599","line":5,"column":8,"nodeType":"547","messageId":"548","endLine":5,"endColumn":14},{"ruleId":"545","severity":1,"message":"654","line":7,"column":8,"nodeType":"547","messageId":"548","endLine":7,"endColumn":19},{"ruleId":"545","severity":1,"message":"601","line":8,"column":10,"nodeType":"547","messageId":"548","endLine":8,"endColumn":21},{"ruleId":"545","severity":1,"message":"655","line":24,"column":36,"nodeType":"547","messageId":"548","endLine":24,"endColumn":47},{"ruleId":"545","severity":1,"message":"656","line":30,"column":32,"nodeType":"547","messageId":"548","endLine":30,"endColumn":41},{"ruleId":"580","severity":1,"message":"581","line":48,"column":9,"nodeType":"582","endLine":48,"endColumn":90},{"ruleId":"580","severity":1,"message":"581","line":52,"column":13,"nodeType":"582","endLine":52,"endColumn":80},{"ruleId":"580","severity":1,"message":"581","line":57,"column":9,"nodeType":"582","endLine":57,"endColumn":81},{"ruleId":"545","severity":1,"message":"546","line":1,"column":27,"nodeType":"547","messageId":"548","endLine":1,"endColumn":36},{"ruleId":"545","severity":1,"message":"550","line":2,"column":8,"nodeType":"547","messageId":"548","endLine":2,"endColumn":13},{"ruleId":"545","severity":1,"message":"657","line":6,"column":10,"nodeType":"547","messageId":"548","endLine":6,"endColumn":16},{"ruleId":"545","severity":1,"message":"658","line":54,"column":9,"nodeType":"547","messageId":"548","endLine":54,"endColumn":14},{"ruleId":"545","severity":1,"message":"586","line":4,"column":8,"nodeType":"547","messageId":"548","endLine":4,"endColumn":14},{"ruleId":"545","severity":1,"message":"587","line":5,"column":8,"nodeType":"547","messageId":"548","endLine":5,"endColumn":16},{"ruleId":"545","severity":1,"message":"588","line":7,"column":8,"nodeType":"547","messageId":"548","endLine":7,"endColumn":17},{"ruleId":"545","severity":1,"message":"571","line":8,"column":10,"nodeType":"547","messageId":"548","endLine":8,"endColumn":16},{"ruleId":"545","severity":1,"message":"572","line":8,"column":18,"nodeType":"547","messageId":"548","endLine":8,"endColumn":23},{"ruleId":"545","severity":1,"message":"659","line":8,"column":12,"nodeType":"547","messageId":"548","endLine":8,"endColumn":20},{"ruleId":"660","severity":1,"message":"661","line":120,"column":29,"nodeType":"662","messageId":"663","endLine":120,"endColumn":48},{"ruleId":"545","severity":1,"message":"571","line":5,"column":10,"nodeType":"547","messageId":"548","endLine":5,"endColumn":16},{"ruleId":"545","severity":1,"message":"572","line":5,"column":18,"nodeType":"547","messageId":"548","endLine":5,"endColumn":23},{"ruleId":"545","severity":1,"message":"546","line":1,"column":27,"nodeType":"547","messageId":"548","endLine":1,"endColumn":36},{"ruleId":"545","severity":1,"message":"664","line":6,"column":8,"nodeType":"547","messageId":"548","endLine":6,"endColumn":15},{"ruleId":"545","severity":1,"message":"551","line":7,"column":10,"nodeType":"547","messageId":"548","endLine":7,"endColumn":20},{"ruleId":"545","severity":1,"message":"550","line":8,"column":8,"nodeType":"547","messageId":"548","endLine":8,"endColumn":13},{"ruleId":"545","severity":1,"message":"555","line":13,"column":8,"nodeType":"547","messageId":"548","endLine":13,"endColumn":12},{"ruleId":"545","severity":1,"message":"556","line":13,"column":14,"nodeType":"547","messageId":"548","endLine":13,"endColumn":19},{"ruleId":"545","severity":1,"message":"665","line":13,"column":21,"nodeType":"547","messageId":"548","endLine":13,"endColumn":27},{"ruleId":"666","severity":1,"message":"667","line":76,"column":57,"nodeType":"668","messageId":"669","endLine":76,"endColumn":59},{"ruleId":"666","severity":1,"message":"667","line":120,"column":34,"nodeType":"668","messageId":"669","endLine":120,"endColumn":36},{"ruleId":"545","severity":1,"message":"571","line":5,"column":10,"nodeType":"547","messageId":"548","endLine":5,"endColumn":16},{"ruleId":"545","severity":1,"message":"572","line":5,"column":18,"nodeType":"547","messageId":"548","endLine":5,"endColumn":23},{"ruleId":"545","severity":1,"message":"550","line":3,"column":8,"nodeType":"547","messageId":"548","endLine":3,"endColumn":13},{"ruleId":"545","severity":1,"message":"551","line":3,"column":17,"nodeType":"547","messageId":"548","endLine":3,"endColumn":27},{"ruleId":"545","severity":1,"message":"562","line":3,"column":10,"nodeType":"547","messageId":"548","endLine":3,"endColumn":17},{"ruleId":"566","severity":1,"message":"670","line":18,"column":6,"nodeType":"568","endLine":18,"endColumn":8,"suggestions":"671"},{"ruleId":"580","severity":1,"message":"581","line":38,"column":9,"nodeType":"582","endLine":38,"endColumn":39},{"ruleId":"545","severity":1,"message":"649","line":1,"column":28,"nodeType":"547","messageId":"548","endLine":1,"endColumn":38},{"ruleId":"545","severity":1,"message":"550","line":2,"column":8,"nodeType":"547","messageId":"548","endLine":2,"endColumn":13},{"ruleId":"566","severity":1,"message":"651","line":33,"column":6,"nodeType":"568","endLine":33,"endColumn":8,"suggestions":"672"},{"ruleId":"580","severity":1,"message":"581","line":54,"column":9,"nodeType":"582","endLine":54,"endColumn":39},{"ruleId":"545","severity":1,"message":"557","line":2,"column":58,"nodeType":"547","messageId":"548","endLine":2,"endColumn":72},{"ruleId":"545","severity":1,"message":"589","line":2,"column":74,"nodeType":"547","messageId":"548","endLine":2,"endColumn":88},{"ruleId":"545","severity":1,"message":"550","line":3,"column":8,"nodeType":"547","messageId":"548","endLine":3,"endColumn":13},{"ruleId":"545","severity":1,"message":"562","line":5,"column":10,"nodeType":"547","messageId":"548","endLine":5,"endColumn":17},{"ruleId":"566","severity":1,"message":"651","line":30,"column":6,"nodeType":"568","endLine":30,"endColumn":8,"suggestions":"673"},{"ruleId":"566","severity":1,"message":"651","line":41,"column":6,"nodeType":"568","endLine":41,"endColumn":17,"suggestions":"674"},{"ruleId":"545","severity":1,"message":"675","line":65,"column":7,"nodeType":"547","messageId":"548","endLine":65,"endColumn":17},{"ruleId":"545","severity":1,"message":"550","line":5,"column":8,"nodeType":"547","messageId":"548","endLine":5,"endColumn":13},{"ruleId":"545","severity":1,"message":"551","line":5,"column":17,"nodeType":"547","messageId":"548","endLine":5,"endColumn":27},{"ruleId":"545","severity":1,"message":"676","line":9,"column":8,"nodeType":"547","messageId":"548","endLine":9,"endColumn":18},{"ruleId":"545","severity":1,"message":"677","line":15,"column":11,"nodeType":"547","messageId":"548","endLine":15,"endColumn":17},{"ruleId":"545","severity":1,"message":"678","line":16,"column":9,"nodeType":"547","messageId":"548","endLine":16,"endColumn":17},{"ruleId":"566","severity":1,"message":"651","line":55,"column":6,"nodeType":"568","endLine":55,"endColumn":8,"suggestions":"679"},{"ruleId":"545","severity":1,"message":"680","line":130,"column":7,"nodeType":"547","messageId":"548","endLine":130,"endColumn":20},{"ruleId":"545","severity":1,"message":"681","line":135,"column":7,"nodeType":"547","messageId":"548","endLine":135,"endColumn":20},{"ruleId":"545","severity":1,"message":"682","line":140,"column":7,"nodeType":"547","messageId":"548","endLine":140,"endColumn":18},{"ruleId":"545","severity":1,"message":"683","line":144,"column":7,"nodeType":"547","messageId":"548","endLine":144,"endColumn":19},{"ruleId":"545","severity":1,"message":"684","line":159,"column":7,"nodeType":"547","messageId":"548","endLine":159,"endColumn":21},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'axios' is defined but never used.","'formToJSON' is defined but never used.","'UserProvider' is defined but never used.","'sendAxiosRequest' is defined but never used.","'MyOrderContent' is defined but never used.","'user' is assigned a value but never used.","'login' is assigned a value but never used.","'getAccessToken' is defined but never used.","'jwtDecode' is defined but never used.","'useContext' is defined but never used.","'isOpenNow' is defined but never used.","'useForm' is assigned a value but never used.","'useUser' is defined but never used.","'getLoginUserInfo' is defined but never used.","'mainUrl' is defined but never used.","'currentURL' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'accessToken' and 'refreshToken'. Either include them or remove the dependency array.","ArrayExpression",["685"],"'StoreListItem' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'accessTokenRefresh' is defined but never used.","'redirectLogin' is defined but never used.","'accordionSummaryClasses' is defined but never used.","'setPageRowCount' is assigned a value but never used.","'accessToken' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'pageRowCount'. Either include it or remove the dependency array.",["686"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'previewImage' is assigned a value but never used.","'handleImageChange' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'Coupon' is defined but never used.","'Category' is defined but never used.","'StoreHome' is defined but never used.","'isTokenExpired' is defined but never used.","React Hook useEffect has missing dependencies: 'accessToken' and 'newAddLength'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setStartPageNo' needs the current value of 'newAddLength'.",["687"],"React Hook useEffect has missing dependencies: 'accessToken' and 'newAddLength'. Either include them or remove the dependency array.",["688"],"'MenuItem' is defined but never used.","React Hook useEffect has missing dependencies: 'accessToken', 'menuData', and 'store'. Either include them or remove the dependency array.",["689"],"'Form' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","'json' is defined but never used.","'useNavigate' is defined but never used.","'isNullUndefinedOrEmpty' is defined but never used.","'store' is assigned a value but never used.","'useParams' is defined but never used.","'setLoginUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'accessToken' and 'loginUser.memberAttaches'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrentImage' needs the current value of 'loginUser.memberAttaches'.",["690"],"'memberForm' is assigned a value but never used.","'updateMemberRequest' is assigned a value but never used.","no-dupe-keys","Duplicate key 'transition'.","ObjectExpression","unexpected","'Link' is defined but never used.","'useRef' is defined but never used.","'Carousel' is defined but never used.","'Handsontable' is defined but never used.","'registerRenderer' is defined but never used.","'recommendationItems' is assigned a value but never used.","'cellWidth' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'isValidDateValue' is defined but never used.","'payNo' is assigned a value but never used.","'pay' is assigned a value but never used.","'data' is assigned a value but never used.","'setState' is assigned a value but never used.","'setAccessToken' is assigned a value but never used.","'setTokenMember' is assigned a value but never used.","'setStore' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'setAccessToekn' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","React Hook useEffect has missing dependencies: 'accessToken', 'newAddLength', and 'store.storeNo'. Either include them or remove the dependency array.",["691"],"React Hook useEffect has missing dependencies: 'accessToken', 'newAddLength', and 'store.storeNo'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setStartPageNo' needs the current value of 'newAddLength'.",["692"],"'pageRowCnt' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.reviewNo'. Either include it or remove the dependency array.",["693"],"React Hook useEffect has a missing dependency: 'store'. Either include it or remove the dependency array.",["694"],"'setMenuItems' is assigned a value but never used.","'styles' is defined but never used.","'useReducer' is defined but never used.","'OrderMenuList' is defined but never used.","React Hook useEffect has a missing dependency: 'accessToken'. Either include it or remove the dependency array.",["695"],"'NavLink' is defined but never used.","'Placeholder' is defined but never used.","'startSecond' is assigned a value but never used.","'endSecond' is assigned a value but never used.","'Hidden' is defined but never used.","'codes' is assigned a value but never used.","'response' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Payment' is defined but never used.","'logout' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'localItem' and 'menu.menuNo'. Either include them or remove the dependency array. You can also do a functional update 'setLocalItem(l => ...)' if you only need 'localItem' in the 'setLocalItem' call.",["696"],["697"],["698"],["699"],"'imageStyle' is assigned a value but never used.","'jwt_decode' is defined but never used.","'menuNo' is assigned a value but never used.","'navigate' is assigned a value but never used.",["700"],"'menuItemStyle' is assigned a value but never used.","'menuItemTitle' is assigned a value but never used.","'menuActions' is assigned a value but never used.","'deleteButton' is assigned a value but never used.","'registerButton' is assigned a value but never used.",{"desc":"701","fix":"702"},{"desc":"703","fix":"704"},{"desc":"705","fix":"706"},{"desc":"707","fix":"708"},{"desc":"709","fix":"710"},{"desc":"711","fix":"712"},{"desc":"713","fix":"714"},{"desc":"715","fix":"716"},{"desc":"717","fix":"718"},{"desc":"719","fix":"720"},{"desc":"721","fix":"722"},{"desc":"723","fix":"724"},{"desc":"721","fix":"725"},{"desc":"721","fix":"726"},{"desc":"727","fix":"728"},{"desc":"721","fix":"729"},"Update the dependencies array to be: [accessToken, refreshToken]",{"range":"730","text":"731"},"Update the dependencies array to be: [pageRowCount]",{"range":"732","text":"733"},"Update the dependencies array to be: [accessToken, newAddLength]",{"range":"734","text":"735"},"Update the dependencies array to be: [accessToken, newAddLength, startPageNo, storeList]",{"range":"736","text":"737"},"Update the dependencies array to be: [accessToken, menuData, store]",{"range":"738","text":"739"},"Update the dependencies array to be: [accessToken, loginUser.memberAttaches]",{"range":"740","text":"741"},"Update the dependencies array to be: [startPageNo, reviewList, newAddLength, store.storeNo, accessToken]",{"range":"742","text":"743"},"Update the dependencies array to be: [accessToken, newAddLength, store.storeNo]",{"range":"744","text":"745"},"Update the dependencies array to be: [props.reviewNo]",{"range":"746","text":"747"},"Update the dependencies array to be: [store]",{"range":"748","text":"749"},"Update the dependencies array to be: [accessToken]",{"range":"750","text":"751"},"Update the dependencies array to be: [localItem, menu.menuNo]",{"range":"752","text":"753"},{"range":"754","text":"751"},{"range":"755","text":"751"},"Update the dependencies array to be: [accessToken, loginUser]",{"range":"756","text":"757"},{"range":"758","text":"751"},[1862,1864],"[accessToken, refreshToken]",[2051,2053],"[pageRowCount]",[1191,1193],"[accessToken, newAddLength]",[2232,2256],"[accessToken, newAddLength, startPageNo, storeList]",[1911,1913],"[accessToken, menuData, store]",[1107,1109],"[accessToken, loginUser.memberAttaches]",[8362,8387],"[startPageNo, reviewList, newAddLength, store.storeNo, accessToken]",[8981,8983],"[accessToken, newAddLength, store.storeNo]",[22709,22711],"[props.reviewNo]",[599,601],"[store]",[827,829],"[accessToken]",[457,459],"[localItem, menu.menuNo]",[988,990],[1127,1129],[1475,1486],"[accessToken, loginUser]",[1757,1759]]