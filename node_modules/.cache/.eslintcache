[{"/Users/nahyun/git/EEE/src/index.js":"1","/Users/nahyun/git/EEE/src/reportWebVitals.js":"2","/Users/nahyun/git/EEE/src/App.js":"3","/Users/nahyun/git/EEE/src/components/Market/MarketDetailPage.js":"4","/Users/nahyun/git/EEE/src/routes/StoreList.js":"5","/Users/nahyun/git/EEE/src/routes/Home.js":"6","/Users/nahyun/git/EEE/src/components/Test/Test.js":"7","/Users/nahyun/git/EEE/src/components/Common/SideBar.js":"8","/Users/nahyun/git/EEE/src/components/Menu/MenuList.js":"9","/Users/nahyun/git/EEE/src/components/Auth/RegisterPage.js":"10","/Users/nahyun/git/EEE/src/components/Market/TabBar.js":"11","/Users/nahyun/git/EEE/src/components/Test/test2.jsx":"12","/Users/nahyun/git/EEE/src/components/Common/Footer.js":"13","/Users/nahyun/git/EEE/src/components/Review/ReviewForm.js":"14","/Users/nahyun/git/EEE/src/components/MyPage/MyPage.js":"15","/Users/nahyun/git/EEE/src/components/MyPage/StoreRegisterPage.js":"16","/Users/nahyun/git/EEE/src/components/MyPage/UserEditPage.js":"17","/Users/nahyun/git/EEE/src/components/Auth/LoginPage.js":"18","/Users/nahyun/git/EEE/src/components/Auth/UserContext.js":"19","/Users/nahyun/git/EEE/src/components/Common/Header.js":"20","/Users/nahyun/git/EEE/src/components/StoreItemDailyPrice/StoreItemDailyPrice.js":"21","/Users/nahyun/git/EEE/src/components/MyPage/MyOrder.js":"22","/Users/nahyun/git/EEE/src/components/Market/StoreListItem.js":"23","/Users/nahyun/git/EEE/src/components/StoreHome.js":"24","/Users/nahyun/git/EEE/src/components/Menu/MenuItem.js":"25","/Users/nahyun/git/EEE/src/components/MyPage/InputField.js":"26","/Users/nahyun/git/EEE/src/components/MainPage/Announce.js":"27","/Users/nahyun/git/EEE/src/components/MainPage/Category.js":"28","/Users/nahyun/git/EEE/src/components/utility/common.js":"29","/Users/nahyun/git/EEE/src/components/MyPage/MyOrderContent.js":"30","/Users/nahyun/git/EEE/src/components/StoreHomeItem.js":"31","/Users/nahyun/git/EEE/src/components/Market/StoreInfo.js":"32","/Users/nahyun/git/EEE/src/components/MainPage/Button.js":"33","/Users/nahyun/git/EEE/src/components/Review/ReviewSection.js":"34","/Users/nahyun/git/EEE/src/components/Coupon/Coupon.js":"35","/Users/nahyun/git/EEE/src/components/Review/ReviewList.js":"36","/Users/nahyun/git/EEE/src/components/Menu/MenuRegisterationForm.js":"37","/Users/nahyun/git/EEE/src/components/Notice/NoticeList.js":"38","/Users/nahyun/git/EEE/src/components/Notice/NoticeDetail.js":"39","/Users/nahyun/git/EEE/src/components/Notice/NoticeListItem.js":"40","/Users/nahyun/git/EEE/src/components/Chat/Chat.js":"41","/Users/nahyun/git/EEE/src/components/Market/StoreList.js":"42","/Users/nahyun/git/EEE/src/components/MyPage/StoreItemRegister.js":"43","/Users/nahyun/git/EEE/src/components/StoreItemDailyPrice/StoreItemAdd.js":"44","/Users/nahyun/git/EEE/src/components/Pay/Pay.js":"45","/Users/nahyun/git/EEE/src/components/MyPage/MenuEdit.js":"46","/Users/nahyun/git/EEE/src/components/Admin/AdminNoticeList.js":"47","/Users/nahyun/git/EEE/src/components/Admin/AdminNoticeDetail.js":"48","/Users/nahyun/git/EEE/src/components/Admin/NoticeRegisterationForm.js":"49","/Users/nahyun/git/EEE/src/components/Admin/AdminNoticeListItem.js":"50","/Users/nahyun/git/EEE/src/components/MyPage/MenuDetail.js":"51","/Users/nahyun/git/EEE/src/components/Market/StoreInfoDetail.js":"52"},{"size":635,"mtime":1697689765751,"results":"53","hashOfConfig":"54"},{"size":362,"mtime":1697447274386,"results":"55","hashOfConfig":"54"},{"size":5627,"mtime":1697990920687,"results":"56","hashOfConfig":"54"},{"size":3335,"mtime":1698029717707,"results":"57","hashOfConfig":"54"},{"size":1016,"mtime":1697580975632,"results":"58","hashOfConfig":"54"},{"size":1479,"mtime":1697689765751,"results":"59","hashOfConfig":"54"},{"size":1072,"mtime":1697447274385,"results":"60","hashOfConfig":"54"},{"size":683,"mtime":1697765743370,"results":"61","hashOfConfig":"54"},{"size":1032,"mtime":1697788474882,"results":"62","hashOfConfig":"54"},{"size":6458,"mtime":1697765743370,"results":"63","hashOfConfig":"54"},{"size":1332,"mtime":1697447274384,"results":"64","hashOfConfig":"54"},{"size":449,"mtime":1697447274385,"results":"65","hashOfConfig":"54"},{"size":272,"mtime":1697447274383,"results":"66","hashOfConfig":"54"},{"size":19672,"mtime":1697765743371,"results":"67","hashOfConfig":"54"},{"size":4956,"mtime":1698038744645,"results":"68","hashOfConfig":"54"},{"size":6914,"mtime":1697742639243,"results":"69","hashOfConfig":"54"},{"size":8341,"mtime":1698029144461,"results":"70","hashOfConfig":"54"},{"size":4828,"mtime":1697866422317,"results":"71","hashOfConfig":"54"},{"size":1568,"mtime":1697580975630,"results":"72","hashOfConfig":"54"},{"size":3281,"mtime":1698045522116,"results":"73","hashOfConfig":"54"},{"size":3556,"mtime":1697765743372,"results":"74","hashOfConfig":"54"},{"size":2250,"mtime":1697580975631,"results":"75","hashOfConfig":"54"},{"size":1881,"mtime":1697765743371,"results":"76","hashOfConfig":"54"},{"size":763,"mtime":1697689765750,"results":"77","hashOfConfig":"54"},{"size":2293,"mtime":1697734579444,"results":"78","hashOfConfig":"54"},{"size":356,"mtime":1697689527524,"results":"79","hashOfConfig":"54"},{"size":1743,"mtime":1697689765747,"results":"80","hashOfConfig":"54"},{"size":617,"mtime":1697447274383,"results":"81","hashOfConfig":"54"},{"size":6332,"mtime":1698045631559,"results":"82","hashOfConfig":"54"},{"size":1085,"mtime":1697580975631,"results":"83","hashOfConfig":"54"},{"size":2350,"mtime":1697689765750,"results":"84","hashOfConfig":"54"},{"size":3689,"mtime":1697765743371,"results":"85","hashOfConfig":"54"},{"size":413,"mtime":1697447274383,"results":"86","hashOfConfig":"54"},{"size":726,"mtime":1697447274385,"results":"87","hashOfConfig":"54"},{"size":1403,"mtime":1697447274383,"results":"88","hashOfConfig":"54"},{"size":1270,"mtime":1697447274385,"results":"89","hashOfConfig":"54"},{"size":3841,"mtime":1697973057148,"results":"90","hashOfConfig":"54"},{"size":663,"mtime":1697689765749,"results":"91","hashOfConfig":"54"},{"size":1038,"mtime":1697689765749,"results":"92","hashOfConfig":"54"},{"size":1390,"mtime":1697689765749,"results":"93","hashOfConfig":"54"},{"size":6287,"mtime":1697690708029,"results":"94","hashOfConfig":"54"},{"size":2291,"mtime":1697765743371,"results":"95","hashOfConfig":"54"},{"size":6951,"mtime":1697765743371,"results":"96","hashOfConfig":"54"},{"size":4171,"mtime":1697765743372,"results":"97","hashOfConfig":"54"},{"size":4330,"mtime":1697765743371,"results":"98","hashOfConfig":"54"},{"size":4301,"mtime":1698038888097,"results":"99","hashOfConfig":"54"},{"size":699,"mtime":1697789099919,"results":"100","hashOfConfig":"54"},{"size":2476,"mtime":1697990452113,"results":"101","hashOfConfig":"54"},{"size":2575,"mtime":1697789993483,"results":"102","hashOfConfig":"54"},{"size":2470,"mtime":1697789099919,"results":"103","hashOfConfig":"54"},{"size":3679,"mtime":1698039398624,"results":"104","hashOfConfig":"54"},{"size":2372,"mtime":1698040657232,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},"1ir1hes",{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"109"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"109"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"109"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"109"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"109"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"109"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"109"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"109"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"109"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"109"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"109"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"109"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"109"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"109"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"109"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"109"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"109"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"109"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"109"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"109"},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"109"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"109"},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"109"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"109"},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"109"},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"109"},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"109"},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"109"},{"filePath":"268","messages":"269","suppressedMessages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"109"},{"filePath":"272","messages":"273","suppressedMessages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"109"},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"109"},{"filePath":"280","messages":"281","suppressedMessages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"283","messages":"284","suppressedMessages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"109"},{"filePath":"287","messages":"288","suppressedMessages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"290","messages":"291","suppressedMessages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"109"},{"filePath":"294","messages":"295","suppressedMessages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"109"},"/Users/nahyun/git/EEE/src/index.js",[],[],["298"],"/Users/nahyun/git/EEE/src/reportWebVitals.js",[],[],"/Users/nahyun/git/EEE/src/App.js",["299","300","301","302","303","304"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Header from './components/Common/Header';\nimport Footer from './components/Common/Footer';\nimport Home from './routes/Home';\nimport SideBar from './components/Common/SideBar';\nimport { BrowserRouter as Router, Route, Routes, useLocation } from 'react-router-dom';\nimport Test from './components/Test/Test';\nimport Test2 from './components/Test/test2';\nimport LoginPage from './components/Auth/LoginPage';\nimport RegisterPage from './components/Auth/RegisterPage';\nimport MenuList from './components/Menu/MenuList';\nimport MenuRegisterationForm from './components/Menu/MenuRegisterationForm';\nimport StoreList from './components/Market/StoreList';\nimport MarketDetailPage from './components/Market/MarketDetailPage';\nimport StoreInfoDetail from './components/Market/StoreInfoDetail';\nimport ReviewForm from './components/Review/ReviewForm';\nimport MyPage from './components/MyPage/MyPage';\nimport UserEditPage from './components/MyPage/UserEditPage';\nimport MyOrder from './components/MyPage/MyOrder';\nimport StoreItemDailyPrice from './components/StoreItemDailyPrice/StoreItemDailyPrice';\nimport UserProvider from './components/Auth/UserContext';\nimport StoreItemRegister from './components/MyPage/StoreItemRegister'\nimport Payment from './components/Pay/Pay';\nimport StoreRegisterPage from './components/MyPage/StoreRegisterPage';\n// import AdminPage from './components/MyPage/AdminPage';\nimport MenuEdit from './components/MyPage/MenuEdit';\nimport NoticeList from './components/Notice/NoticeList';\nimport NoticeDetail from './components/Notice/NoticeDetail';\nimport { useUser } from './components/Auth/UserContext';\nimport StoreMyPage from './components/MyPage/StoreItemRegister'; // StoreMyPage 컴포넌트 파일의 경로에 따라 수정\nimport { sendAxiosRequest } from './components/utility/common';\nimport StoreItemAdd from  './components/StoreItemDailyPrice/StoreItemAdd';\nimport NoticeRegisterationForm from  './components/Admin/NoticeRegisterationForm';\nimport AdminNoticeList from  './components/Admin/AdminNoticeList';\nimport AdminNoticeDetail from  './components/Admin/AdminNoticeDetail';\nimport MenuDetail from './components/MyPage/MenuDetail';\n\nfunction App() {\n  // const [hello, setHello] = useState('');\n\n\n  // useEffect(() => {\n  //   axios.get('/api/hello') // 데이터 확인 테스트용\n  //     .then(response => setHello(response.data))\n  //     .catch(error => console.log(error));\n  // }, []);\n\n  const {user, login} = useUser();\n\n  // const data = localStorage.getItem(user);\n\n  useEffect(() => {\n  //   // sendAxiosRequest(\"/api/member/login\", 'POST', user, response => {\n  //   //   console.log(response.data);\n      console.log(localStorage.getItem('memberEmail'));\n      console.log(localStorage.getItem('memberPwd'));\n      const saveUser = {\n        'memberEmail': localStorage.getItem('memberEmail'),\n        'memberPwd': localStorage.getItem('memberPwd')\n      }\n      if (localStorage.getItem('memberEmail') !== null) {\n        login(saveUser);\n      }\n  //     login(localStorage.getItem('data'));\n  //     // console.log(user);\n  //   // }, error => {\n  //     // console.log(error);\n  //   // });\n  }, [])\n\n\n\n  return (\n    <Router>\n      <div className='App'>\n        {/* <div>{hello}</div> */}\n        <RoutingComponent />\n      </div>\n    </Router>\n  );\n\n}\n\nfunction RoutingComponent() {\n  const location = useLocation();\n\n  return (\n    <>\n      {location.pathname !== \"/login\" && location.pathname !== \"/register\" && <Header />}\n      <Routes>\n        <Route path=\"/login\" element={<LoginPage />} />\n        <Route path=\"/register\" element={<RegisterPage />} />\n        <Route path=\"/\" exact={true} element={<Home />} />\n        <Route path=\"/store/list\" element={<StoreList />} />\n        <Route path=\"/api/test\" element={<Test />} />\n        <Route path=\"/api/test2\" element={<Test2 />} />\n        <Route path=\"/menulist\" element={<MenuList />} />\n        <Route path=\"/reviewregister\" element={<ReviewForm />} />\n        <Route path=\"/market/detail\" element={<MarketDetailPage />} />\n        <Route path=\"/mypage\" element={<MyPage />} />\n        <Route path=\"/storeRegister\" element={<StoreRegisterPage />} />\n        <Route path=\"/useredit\" element={<UserEditPage />} />\n        <Route path=\"/menuEdit\" element={<MenuEdit />} />\n        <Route path=\"/my-orders\" element={<MyOrder />} />\n        <Route path=\"/StoreItemDailyPrice\" element={<StoreItemDailyPrice />} />\n        <Route path=\"/MenuRegisterationForm\" element={<MenuRegisterationForm />} />\n        <Route path=\"/notice/list\" element={<NoticeList />} />\n        <Route path=\"/notice/detail/:noticeNo\" element={<NoticeDetail />} />\n        <Route path=\"/storemypage\" element={<StoreMyPage />} />\n        <Route path=\"/storeItemRegister\" element={<StoreItemRegister />} />\n        <Route path=\"/StoreItemAdd\" element={<StoreItemAdd />} />\n        <Route path=\"/pay\" element={<Payment />} />\n        <Route path=\"/StoreInfoDetail\" element={<StoreInfoDetail />} />\n        <Route path=\"/menuDetail\" element={<MenuDetail />} />\n        <Route path=\"/admin/notice/register\" element={<NoticeRegisterationForm />} />\n        <Route path=\"/admin/notice/list\" element={<AdminNoticeList />} />\n        <Route path=\"/admin/notice/detail/:noticeNo\" element={<AdminNoticeDetail />} />\n      </Routes>\n      {location.pathname !== \"/login\" && location.pathname !== \"/register\" && <SideBar />}\n      {location.pathname !== \"/login\" && location.pathname !== \"/register\" && <Footer />}\n    </>\n  );\n}\n\nexport default App;\n\n\n\n\n","/Users/nahyun/git/EEE/src/components/Market/MarketDetailPage.js",["305"],[],"import React, { useState } from 'react';\nimport TabBar from './TabBar';\nimport MenuList from '../Menu/MenuList';\nimport StoreInfoDetail from './StoreInfoDetail';\nimport Button from '../MainPage/Button';\nimport StoreInfo from './StoreInfo';\nimport ReviewSection from '../Review/ReviewSection';\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { sendAxiosRequest } from '../utility/common';\nimport { MenuItem } from '@mui/material';\n\n\nfunction MarketDetailPage() {\n  const [activeTab, setActiveTab] = useState('info');\n  const [menuData, setMenuData] = useState([]); // 메뉴 데이터를 저장할 상태\n  const [storeDetail, setStoreDetail] = useState(null); // 처음에는 정보가 없으므로 null로 초기화합니다.\n\n\n  const location = useLocation(); // 추가된 부분\n  const store = location.state; // 추가된 부분\n  console.log(store);\n\n  const storeInfo = {\n    image: '/images/storeimage.png',\n    name: '대원수산',\n    location: '서울특별시 동작구 노들로 674 노량진수산시장 , 2층 활어 2-15호 강변상회',\n    hours: '월요일 (오늘) 09:00 ~ 21:00',\n    phone: '02-1234-5678',\n  };\n\n  useEffect(() => {\n    if (store && store.storeNo) {\n      // 상점 번호가 있는 경우에만 요청을 실행합니다.\n      sendAxiosRequest(`/api/menu/${store.storeNo}`, 'GET', null, response => {\n        if (response.data && response.data.length > 0) {\n          console.log(response.data);\n          setMenuData(response.data); // 받아온 데이터로 상태를 업데이트합니다.\n        }\n      }, error => {\n        console.error(\"An error occurred while fetching the menus:\", error);\n      });\n    }\n  }, [store])\n\n\n  // 가게 정보 및 메뉴 정보를 불러오는 부분\n  useEffect(() => {\n    if (store && store.storeNo) {\n      // 가게 정보를 불러오는 API 요청\n      sendAxiosRequest(`/api/store/${store.storeNo}`, 'GET', null, response => {\n        console.log(\"Store details fetched:\", response.data);\n        setStoreDetail(response.data); // 받아온 데이터로 상태를 업데이트합니다.\n      }, error => {\n        console.error(\"An error occurred while fetching the store details:\", error);\n      });\n\n      // 메뉴 정보를 불러오는 API 요청 (기존 로직 유지)\n      // ... (기존 메뉴 정보 요청 코드)\n    }\n  }, [store]); // store가 변경될 때마다 이 훅을 재실행합니다.\n\n\n  const handleOrderClick = () => {\n    alert('주문하기 버튼 클릭!');\n  };  \n\n  return (\n    <div>\n      <div style={infoContainerStyle}>\n      <StoreInfo storeInfo={storeInfo} store={store} />\n      </div>\n      <div style={tabContainerStyle}>\n        <TabBar activeTab={activeTab} onTabClick={setActiveTab} />\n        {activeTab === 'menu' && <Button onClick={handleOrderClick} buttonText=\"주문하기\" />}\n      </div>\n      {activeTab === 'info' && <StoreInfoDetail storeDetail={storeDetail}/>}\n      {activeTab === 'menu' && <MenuList menus={menuData}/>}\n      {activeTab === 'review' && <ReviewSection />}\n    </div>\n\n  );\n}\n\nconst infoContainerStyle = {\n  marginBottom: '0px', // 예시: 아래쪽 마진을 추가하여 공간 생성\n};\n\nconst tabContainerStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center'\n};\n\n\nexport default MarketDetailPage;","/Users/nahyun/git/EEE/src/routes/StoreList.js",["306","307","308","309","310"],[],"import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport Announce from '../components/MainPage/Announce';\nimport Coupon from '../components/MainPage/Announce';\nimport Category from '../components/MainPage/Category';\nimport StoreListItem from '../components/Market/StoreListItem';\nimport StoreHome from '../components/StoreHome';\nimport { Routes, Route } from 'react-router-dom';\nimport styles from './StoreList.module.css'\n\n\n\nfunction StoreList() {\n\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    axios.get('/api/store/list')\n      .then(response => setData(response.data))\n      .catch(error => console.log(error));\n      // console.log(data);\n  }, []);\n\n  return (\n    <>\n    <Announce/>\n    <button onClick={()=>{\n      console.log(data);\n      }}>\n      {data.length > 0 ? data[0].reviewContent : ''}\n    </button>\n    <div className={styles.storeListBox}>\n      {/* <Coupon/> */}\n      <StoreListItem data={data}/>\n    </div>\n    </>\n  )\n}\n\nexport default StoreList;","/Users/nahyun/git/EEE/src/routes/Home.js",["311","312","313"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Announce from '../components/MainPage/Announce';\nimport Category from '../components/MainPage/Category';\nimport StoreListItem from '../components/Market/StoreListItem';\nimport StoreHome from '../components/StoreHome';\nimport { Routes, Route } from 'react-router-dom';\n\nfunction sendAxiosRequest(url, method, params, successCallback, errorCallback) {\n  console.log(url);\n  const axiosConfig = {\n    timeout: 5000,\n    url: url,\n    method: method,\n  };\n  if (params != null)\n    axiosConfig.params = params;\n  axios(axiosConfig).then(successCallback).catch(errorCallback);\n}\n\n\n\n\nfunction Home() {\n\n  const [stores, setStores] = useState([]);\n\n  useEffect(() => {\n\n    sendAxiosRequest('/api/store/list', 'GET', null, response => {\n      console.log(response.data);\n      setStores(response.data);\n    }, error => {\n      console.log(error);\n    });\n\n\n  // axios.get('/api/store/list')\n  //   .then(response => {\n  //     console.log('responseData', response);\n  //     setStores(response.data)\n  //   })\n  //   .catch(error => console.log(error));\n  //   // console.log(stores);\n  }, []);\n\n  // for(let i = 0; stores[i]; i++){\n  //   stores[i].index = i;\n  // }\n\n\n  return (\n    <>\n    <Announce/> \n    <Category/>\n    <StoreHome stores = {stores}/>\n    {/* <button onClick={()=>{console.log(stores); window.sessionStorage.getItem(\"memberNo\")}}></button> */}\n    </>\n  )\n}\n\nexport default Home;","/Users/nahyun/git/EEE/src/components/Test/Test.js",[],[],"/Users/nahyun/git/EEE/src/components/Common/SideBar.js",["314"],[],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport styles from './SideBar.module.css';\nimport { Link } from 'react-router-dom';\nimport Chat from '../Chat/Chat';\n\nfunction SideBar() {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const toggleModal = () => {\n        setIsModalOpen(!isModalOpen);\n    };\n\n    return (\n        <div className={styles.sideBarBox}>\n            <Link to='/StoreItemAdd'>등록</Link>\n            <Link to=\"/\">오늘의 <br />방사능</Link>\n            <Link to=\"#\" onClick={toggleModal}>챗봇</Link>\n            {isModalOpen && <Chat closeModal={toggleModal} />}\n        </div>\n    );\n}\n\nexport default SideBar;","/Users/nahyun/git/EEE/src/components/Menu/MenuList.js",[],[],"/Users/nahyun/git/EEE/src/components/Auth/RegisterPage.js",["315","316","317"],[],"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios, { formToJSON } from 'axios';\nimport { isOpenNow, sendAxiosRequest } from '../utility/common';\n\n// import DaumPostcode from 'react-daum-postcode';\n\n\n\n\nfunction RegisterPage() {\n\n  // const [showPostcode, setShowPostcode] = useState(false);\n\n  //   const handleAddress = (data) => {\n  //     handleChange({\n  //         target: {\n  //             name: \"zip\",\n  //             value: data.zonecode\n  //         }\n  //     });\n  //     handleChange({\n  //         target: {\n  //             name: \"address\",\n  //             value: data.address\n  //         }\n  //     });\n  //     setShowPostcode(false); // 주소 선택 후, 우편번호 찾기 창을 닫습니다.\n  // };\n\n  const useForm = (initialValues) => {\n    const [values, setValues] = useState(initialValues);  // values는 폼 컨트롤의 상태를 나타냄, initialValues로 초기 설정\n    const handleChange = (e) => {   //폼 컨트롤의 onChange 이벤트 핸들러\n      const { name, value } = e.target;\n      setValues({\n        ...values,\n        [name]: value,\n      });\n    };\n    return [values, handleChange];\n  };\n\n\n\n  // const [values, handleChange] = useForm({ //useForm은 초기 값 initialValues를 인수로 받음,  그 상태와 상태를 변경하는 함수를 반환하는 useForm 훅을 호출\n  //   email: '',\n  //   password: '',\n  //   name: '',\n  //   phone: '',\n  //   zip: '',\n  //   address: '',\n  //   detailAddress: '',\n  //   bank: '',\n  //   accountNumber: '',\n  //   accountType: '',\n  // });\n\n  const navigate = useNavigate();\n\n  // const requestData = { //객체는 폼에서 사용자가 입력한 데이터를 서버로 전송하기 위해 준비되는 데이터 구조\n  //   memberCategory: values.accountType,\n  //   memberEmail: values.email,      //values 객체의 email 속성 값을 requestData 객체의 email 속성에 할당\n  //   memberPwd: values.password,\n  //   memberName: values.name,\n  //   memberPhone: values.phone,\n  //   memberZipcode: values.zip,\n  //   memberAddr: values.address,\n  //   memberDetailAddr: values.detailAddress,\n  //   memberBank: values.bank,\n  //   memberAccount: values.accountNumber,\n  // };\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    let formData = new FormData(e.target);\n    let formObj = formToJSON(formData);\n    sendAxiosRequest('/api/member/signup', 'POST', formObj, response => {\n      console.log('응답값:', response.data);\n      alert('회원가입에 성공하셨습니다!');\n      navigate('/');\n    },\n      error => {\n        console.error('API 호출 중 에러 발생: ', error);\n        alert('회원가입에 실패하셨습니다!');\n      }\n    )\n  };\n\n  return (\n    <div style={styles.background}>\n      <div style={styles.logoContainer}>\n        <img src=\"/images/logo.png\" alt=\"BLEU AUCTION\" style={styles.logo} />\n      </div>\n      <div style={styles.container}>\n        <form onSubmit={handleSubmit} style={styles.form}>\n          <input style={styles.input} type=\"text\" name=\"memberName\" placeholder=\"이름\" />\n          <input style={styles.input} type=\"email\" name=\"memberEmail\" placeholder=\"이메일\" />\n          <input style={styles.input} type=\"password\" name=\"memberPwd\" placeholder=\"비밀번호\" />\n          <input style={styles.input} type=\"text\" name=\"memberPhone\" placeholder=\"전화번호\" />\n          {/* {showPostcode && (\n                <DaumPostcode\n                    onComplete={handleAddress}\n                    autoClose={true}\n                />\n            )} */}\n          <input style={styles.input} type=\"text\" name=\"memberZipcode\" placeholder=\"우편번호\" />\n          {/* <button onClick={() => setShowPostcode(true)} style={{...styles.button, marginBottom: '10px'}}>우편번호 찾기</button> */}\n          <input style={styles.input} type=\"text\" name=\"memberAddr\" placeholder=\"기본주소\" />\n          <input style={styles.input} type=\"text\" name=\"memberDetailAddr\" placeholder=\"상세주소\" />\n          <input style={styles.input} type=\"text\" name=\"memberBacnk\" placeholder=\"은행\" />\n          <input style={styles.input} type=\"text\" name=\"memberAccount\" placeholder=\"계좌번호\" />\n          <div style={styles.accountTypeContainer}>\n            <label style={styles.accountTypeLabel}>\n              <input\n                type=\"radio\"\n                name=\"memberCategory\"\n                value=\"M\"\n                style={styles.accountTypeInput}\n              />\n              개인\n            </label>\n            <label style={styles.accountTypeLabel}>\n              <input\n                type=\"radio\"\n                name=\"memberCategory\"\n                value=\"S\"\n                style={styles.accountTypeInput}\n              />\n              기업\n            </label>\n          </div>\n          <button type=\"submit\" style={styles.submitButton}>회원 가입</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nconst styles = {\n  background: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    background: 'var(--Blue, linear-gradient(180deg, #0575E6 0%, #02298A 84.79%, #021B79 100%))',\n  },\n  logoContainer: {\n    marginBottom: '10px',\n  },\n  logo: {\n    width: '200px',\n  },\n  container: {\n    background: 'white',\n    padding: '20px',\n    borderRadius: '8px',\n    width: '400px',\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  toggleButtons: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginBottom: '20px',\n    borderRadius: '8px',\n  },\n  button: {\n    padding: '10px 20px',\n    cursor: 'pointer',\n    border: 'none',\n    backgroundColor: 'white',\n    borderRadius: '10px',\n  },\n  activeButton: {\n    padding: '10px 20px',\n    cursor: 'pointer',\n    border: 'none',\n    backgroundColor: 'lightgray',\n    borderRadius: '10px',\n  },\n  input: {\n    padding: '10px',\n    margin: '5px 0',\n    borderRadius: '8px',\n    border: '1px solid #ccc',\n    outline: 'none',\n  },\n  submitButton: {\n    padding: '10px 20px',\n    cursor: 'pointer',\n    backgroundColor: '#0575E6',\n    border: 'none',\n    borderRadius: '8px',\n    color: 'white',\n\n  },\n  accountTypeContainer: {\n    marginBottom: '10px',\n  },\n  accountTypeLabel: {\n    marginRight: '10px',\n    cursor: 'pointer',\n  },\n  accountTypeInput: {\n    marginRight: '5px',\n  },\n};\n\nexport default RegisterPage;\n","/Users/nahyun/git/EEE/src/components/Market/TabBar.js",[],[],"/Users/nahyun/git/EEE/src/components/Test/test2.jsx",["318","319","320"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Test.css';\n\nconst Test = () => {\n  const [testStatus, setState] = useState({\n    loading: false,\n    response: '값을 가져오니라'\n  });\n\n  console.log(\"testStatus : \",testStatus)\n  return (\n    <>\n      <h1>Test API</h1>\n      <div className=\"response-container\">\n          <p>{testStatus.response}</p>\n        </div>\n    </>\n  );\n}\nexport default Test;\n","/Users/nahyun/git/EEE/src/components/Common/Footer.js",["321","322","323","324"],[],"import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport styles from './Footer.module.css';\n\n\nfunction Footer() {\n  return (\n    <div className={styles.footerBox}>\n      <img src='/images/LogoPage.png' />\n    </div>\n  )\n}\n\nexport default Footer;","/Users/nahyun/git/EEE/src/components/Review/ReviewForm.js",["325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347"],[],"import '../utility/Common.css';\nimport React, { useState, useEffect } from 'react';\nimport { formToJSON } from 'axios';\nimport { scrollMoveTop, sendAxiosMultipartRequest, sendAxiosRequest, dateFormatParse, handleInputChange } from '../utility/common';\n\n\nfunction ReviewForm() {\n  let [loginUser, setLoginUser] = useState(null);\n\n  useEffect(() => {\n    sendAxiosRequest(\"/api/member/loginCheck\", \"GET\", null,\n      response => {\n        let repLoginUser = response.data.loginUser;\n        console.log('loginUser#@#@#@#@', response.data);\n        if (repLoginUser === null) {\n          window.location.href = '/';\n        } else {\n          setLoginUser(repLoginUser);\n        }\n      }, error => console.log(error));\n  }, []);\n\n  // 로그인 확인\n  console.log(loginUser);\n\n  if (loginUser != null && loginUser != undefined) {\n    return (\n      <div id='maindDiv' className=\"review-main-div\">\n        <div id='mainContentDiv' className=\"ba-main-content-div\">\n          <ReviewWriteForm loginUser={loginUser}></ReviewWriteForm>\n          <ReviewListDiv></ReviewListDiv>\n        </div>\n        <div id=\"topBtnDiv\" onClick={scrollMoveTop}>↑</div>\n      </div >\n\n    );\n  }\n}\n\n\nfunction ReviewWriteForm(props) {\n  let [loginUser, setLoginUser] = useState(props.loginUser);\n  let [storeNo, setStoreNo] = useState(1);\n  let [memberNo, setMemberNo] = useState(1);\n  let [reviewFreshness, setReviewFreshness] = useState('M');\n\n  if (loginUser != null && loginUser != undefined) {\n\n    return (\n      <form id=\"reviewWriteForm\" encType='multipart/form-data' className='ba-form'>\n        <label htmlFor='storeNo'><input id='storeNo' name='storeNo' value={storeNo} hidden onChange={(e) => setStoreNo(e.target.value)}></input></label>\n        <label htmlFor='memberNo'><input id='memberNo' name='memberNo' value={loginUser.memberNo} hidden text onChange={(e) => setMemberNo(e.target.value)}></input></label>\n        <img className='ba-member-profile' src='http://fvhsczepiibf19983519.cdn.ntruss.com/member/defaultProfile.jpg?type=f&w=50&h=50&ttype=jpg' ></img>\n        <sapn className='ba-font-name'>{loginUser.memberName}</sapn>\n        <span className='ba-font-title'>신선도 :</span>\n        <label htmlFor='freshness-low' className='ba-freshness'><img src='/images/low.png' /><input type=\"radio\" id='freshness-low' name='reviewFreshness' value={'L'} checked={reviewFreshness === 'L'} onChange={() => setReviewFreshness('L')}></input></label>\n        <label htmlFor='freshness-medium' className='ba-freshness'><img src='/images/mid.png' /><input type=\"radio\" id='freshness-medium' name='reviewFreshness' value={'M'} checked={reviewFreshness === 'M'} onChange={() => setReviewFreshness('M')}></input></label>\n        <label htmlFor='freshness-high' className='ba-freshness'><img src='/images/high.png' /><input type=\"radio\" id='freshness-high' name='reviewFreshness' value={'H'} checked={reviewFreshness === 'H'} onChange={() => setReviewFreshness('H')}></input></label>\n        <div>\n          <textarea name=\"reviewContent\" className='ba-textarea' />\n        </div>\n        <div className='ba-text-left'>\n          <button type='button' className='ba-btn ba-margin-right10' onClick={() => {\n            let formData = new FormData(document.getElementById('reviewWriteForm'));\n            let reviewContentLength = formData.get('reviewContent').trim().length;\n            console.log(reviewContentLength);\n\n            if (reviewContentLength < 1) {\n              alert('작성하실 리뷰 내용을 입력해주세요!');\n              return;\n            }\n\n            let inputFile = document.querySelector('input[type=\"file\"]');\n            if (inputFile.files.length > 0) {\n              let files = inputFile.files;\n              for (let i = 0; i < files.length; i++) {\n                formData.append(\"multipartFiles\", files[i]);\n              }\n            }\n\n            console.log('여기다.');\n            sendAxiosMultipartRequest('/api/review/add', formData,\n              response => {\n                console.log('리뷰작성성공');\n                window.location.reload();\n                alert('리뷰를 성공적으로 작성하였습니다!');\n                console.log(response.data);\n              }, error => console.log(error));\n\n          }}>리뷰작성</button>\n          <label htmlFor='fileInput' className='ba-file-label'>파일 첨부</label><span id='fileInfoSpan'></span>\n          <input type='file' id='fileInput' multiple hidden className='ba-file-btn' onChange={(e) => {\n            let files = e.target.files;\n            console.log(files);\n            let fileInfoStr;\n            for (let i = 0; i < 2; i++) {\n              fileInfoStr = (i === 0) ? fileInfoStr + ' ' + files[i].name + ', ' : fileInfoStr + ' ' + files[i].name;\n            }\n            document.getElementById('fileInfoSpan').textContent = '파일명: ' + fileInfoStr + ' 등 ' + files.length + '개의 첨부파일';\n          }} />\n        </div>\n\n      </form >\n    );\n  }\n}\n\nfunction ReviewListDiv(props) {\n  const pageRowCnt = 4;\n  let [loginUser, setLoginUser] = useState(props.loginUser);\n  let [startPageNo, setStartPageNo] = useState(0);\n  let [reviewList, setReviewList] = useState([]);\n  let [selectedReviewNo, setSelectedReviewNo] = useState(null);\n  let [newAddLength, setNewAddLength] = useState(pageRowCnt);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      console.log(newAddLength);\n      if (newAddLength < pageRowCnt) {\n        return;\n      }\n      if (\n        window.innerHeight + document.documentElement.scrollTop >=\n        document.documentElement.scrollHeight - 100\n      ) {\n\n        console.log(\"스크롤 이벤트 핸들러 작동\");\n        sendAxiosRequest(`/api/review/list?startPage=${startPageNo}`, 'GET', null, response => {\n          console.log('response:', response);\n          console.log('response.data:',response.data);\n          let addReviewList = response.data.reviewList;\n          setNewAddLength(response.data.reviewList.length);\n          let newReviewList = [...reviewList, ...addReviewList];\n\n          setStartPageNo(Math.floor(newReviewList.length / pageRowCnt));\n          setReviewList(newReviewList);\n        }, error => console.log(error))\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    }\n  }, [startPageNo, reviewList]);\n\n  useEffect(() => {\n    sendAxiosRequest(\"/api/review/list\", \"GET\", null,\n      response => {\n        console.log('response.datasdsd:', response.data);\n        let data = response.data;\n        setLoginUser(data.loginUser);\n        setReviewList(data.reviewList);\n        setNewAddLength(data.reviewList.length);\n        setStartPageNo(Math.floor(newAddLength / pageRowCnt));\n      }, error => console.log(error));\n  }, []);\n\n\n\n  return (\n    <div id=\"reviewListDiv\" className='review-list-div'>\n      { reviewList.map((review, index) => (\n        <div key={index} className='review-div'>\n          <form id={'reviewUpdateForm' + index}>\n            <input id={'reviewNo' + index} name='reviewNo' hidden value={review.reviewNo} />\n\n            <div className='ba-title-container'>\n              <img className='ba-member-profile' src='http://fvhsczepiibf19983519.cdn.ntruss.com/member/defaultProfile.jpg?type=f&w=50&h=50&ttype=jpg' />\n              <div className='ba-title-info'>\n                <b>{review.member.memberName}</b>\n                <span><b>작성일:</b><input type='text' value={dateFormatParse(new Date(review.mdfDatetime))} className='ba-input-text' disabled /></span>\n              </div>\n              <div className='ba-title-freshness'>\n                <span className='ba-font-title'>신선도 :</span>\n                <label htmlFor='freshness-low'>\n                  <img src='/images/low.png' />\n                  <input type=\"radio\" name='reviewFreshness' value={'L'} checked={review.reviewFreshness === 'L'} onChange={(e) => handleInputChange(e, index, reviewList, setReviewList)} />\n                </label>\n                <label htmlFor='freshness-mid'>\n                  <img src='/images/mid.png' />\n                  <input type=\"radio\" name='reviewFreshness' value={'M'} checked={review.reviewFreshness === 'M'} onChange={(e) => handleInputChange(e, index, reviewList, setReviewList)} />\n                </label>\n                <label htmlFor='freshness-high'>\n                  <img src='/images/high.png' />\n                  <input type=\"radio\" name='reviewFreshness' value={'H'} checked={review.reviewFreshness === 'H'} onChange={(e) => handleInputChange(e, index, reviewList, setReviewList)} />\n                </label>\n              </div>\n            </div>\n\n            <hr />\n            <div>\n              {review.reviewAttaches.length > 0 && (\n                <div className='ba-img-list-div'>\n                  <img id={'defaultImg' + index} className='ba-img-first' src={`http://kr.object.ncloudstorage.com/bleuauction-bucket/review/${review.reviewAttaches.length > 0 ? review.reviewAttaches[0].saveFilename : ''}`} />\n\n                  <div className='ba-div-col-sort'>\n                    {\n                      review.reviewAttaches.map((attach) => (\n                        <div>\n                          <img className='ba-img-sub-list-div' src={`http://kr.object.ncloudstorage.com/bleuauction-bucket/review/${attach.saveFilename}`} onMouseEnter={(e) => {\n                            let targetImgSrc = e.target.src;\n                            let defaultImgId = 'defaultImg' + index;\n                            console.log(targetImgSrc);\n                            let defaultImg = document.getElementById(defaultImgId);\n                            console.log(defaultImg);\n                            defaultImg.src = targetImgSrc;\n                          }} />\n                        </div>\n                      )\n                      )\n                    }\n                  </div>\n                </div>\n              )}\n              {review.member.memberNo == loginUser.memberNo ?\n                (<textarea name='reviewContent' value={review.reviewContent} className='ba-textarea' onChange={(e) => handleInputChange(e, index, reviewList, setReviewList)} />)\n                : (<textarea name='reviewContent' value={review.reviewContent} className='ba-textarea-disabled' readOnly />\n                )}\n            </div>\n\n            {review.member.memberNo == loginUser.memberNo ?\n              (<div className='ba-btn-div'>\n                <div className='ba-file-list'>\n                  {review.reviewAttaches.map((attach) => (\n                    <div key={attach.fileNo} className=\"ba-file-item\">\n                      <li>{attach.originFilename}</li>\n                      <p className=\"ba-delete-text\" onClick={() => {\n                        sendAxiosRequest(`/api/review/deleteFile?fileNo=${attach.fileNo}`, 'GET', null,\n                          response => {\n                            console.log(response.data);\n                            window.location.reload();\n                            alert(response.data.originFilename + '(이)가 삭제되었습니다!');\n                          },\n                          error => {\n                            console.log(error);\n                          }\n                        );\n                      }}>[삭제]</p>\n                    </div>\n                  ))}\n                </div>\n\n                <button type='button' className='ba-btn ba-margin-right20' onClick={() => {\n                  let jsonObj = formToJSON(new FormData(document.getElementById('reviewUpdateForm' + index)));\n                  console.log(jsonObj);\n                  sendAxiosRequest('/api/review/update', 'POST', jsonObj, response => {\n                    console.log(response.data);\n                    console.log('리뷰변경 성공!');\n                    window.location.reload();\n                    alert('리뷰를 성공적으로 변경하였습니다!');\n                  }, error => console.log(error));\n                }}>리뷰수정</button>\n                <button type='button' className='ba-btn ba-margin-right10' onClick={\n                  () => {\n                    sendAxiosRequest(`/api/review/delete?reviewNo=${review.reviewNo}`, 'GET', null, response => {\n                      console.log(response.data);\n                      window.location.reload();\n                      alert('리뷰가 성공적으로 삭제되었습니다!');\n                    }, error => {\n                      console.log(error);\n                    });\n                  }}>리뷰삭제</button>\n              </div>) : (<div></div>)\n            }\n\n            <div className='ba-text-right'>\n              <button type='button' className='ba-small-btn' onClick={() => {\n                selectedReviewNo === review.reviewNo ? setSelectedReviewNo(null) : setSelectedReviewNo(review.reviewNo);\n              }}>답글</button>\n            </div>\n          </form>\n\n          {\n            selectedReviewNo == review.reviewNo && (\n              <AnswerForm reviewNo={review.reviewNo} loginUser={loginUser} />\n            )\n          }\n        </div >\n      ))\n      }\n    </div >\n  );\n}\n\nfunction AnswerForm(props) {\n  return (\n    <div>\n      <hr />\n      <div className='ba-text-right'>\n        <button type='button' className='ba-small-btn' onClick={() => {\n          document.getElementById('answerWriteFormDiv').style.display = 'block';\n        }}>답글작성✍️</button>\n      </div>\n      <div id=\"answerWriteFormDiv\">\n        <h4 className='ba-font-title'>답글작성</h4>\n        <form id=\"answerWriteForm\">\n          <input name='reviewNo' hidden value={props.reviewNo}></input>\n          <input name='memberNo' hidden value={1}></input>\n          <button type='button' className='ba-close-btn' onClick={\n            () => {\n              document.getElementById('answerWriteFormDiv').style.display = 'none';\n\n            }\n          }>x</button>\n          <div>\n            <textarea name='answerContent' className='ba-small-textarea'></textarea>\n          </div>\n          <div className='ba-btn-div'>\n            <button type='button' className='ba-btn ba-margin-right40' onClick={() => {\n              let jsonObj = formToJSON(document.getElementById('answerWriteForm'));\n              console.log(jsonObj);\n              if (jsonObj.answerContent.trim().length < 1) {\n                alert('작성하실 답급 내용을 입력해주세요!');\n                return;\n              }\n              sendAxiosRequest('/api/answer/add', 'POST', jsonObj,\n                response => {\n                  window.location.reload();\n                  alert('답글을 성공적으로 작성하였습니다!');\n                  console.log(response.data);\n                }, error => console.log(error));\n            }}>작성하기</button>\n          </div>\n        </form >\n      </div>\n      <AnswerListDiv reviewNo={props.reviewNo} loginUser={props.loginUser}></AnswerListDiv>\n    </div >\n  );\n}\n\nfunction AnswerListDiv(props) {\n  const pageRowCnt = 2;\n  let [answerList, setAnswerList] = useState([]);\n  let [startPageNo, setStartPageNo] = useState(0);\n\n\n  useEffect(() => {\n    sendAxiosRequest(`/api/answer/list?reviewNo=${props.reviewNo}`, \"GET\", null,\n      response => {\n        let asnwerList = response.data.answerList;\n        let totalRows = response.data.totalRows;\n        console.log('최초 렌더시 totalRow');\n        console.log(totalRows);\n        console.log('최초 렌더시 asnwerList.length');\n        console.log(asnwerList.length);\n\n        if (totalRows > asnwerList.length) {\n          console.log(document.querySelector('.ba-more-btn'));\n          document.querySelector('.ba-more-btn').hidden = false;\n        }\n        setAnswerList(response.data.answerList);\n        setStartPageNo(response.data.answerList.length / 2);\n      }, error => console.log(error));\n\n    return () => {\n    }\n  }, []);\n\n  return (\n    <div id=\"answerListDiv\" className='answer-list-div'>\n      {answerList.map((answer, index) => (\n\n        < div className='answer-div' key={index} >\n          <form id={'answerUpdateForm' + index}>\n            <div className='ba-title-container'>\n              <img className='ba-member-profile' src='http://fvhsczepiibf19983519.cdn.ntruss.com/member/defaultProfile.jpg?type=f&w=50&h=50&ttype=jpg' />\n              <div className='ba-title-info'>\n                <b>{answer.member.memberName}</b>\n                <span><b>작성일:</b><input type='text' value={dateFormatParse(new Date(answer.mdfDatetime))} className='ba-input-text' disabled /></span>\n              </div>\n            </div>\n            {answer.member.memberNo == props.loginUser.memberNo ?\n              (\n                <div>\n                  <input type='text' name='answerNo' hidden value={answer.answerNo} />\n                  <input type='text' name='reviewNo' hidden value={answer.reviewNo} />\n                  <input type='text' name='memberNo' hidden value={answer.member.memberNo} />\n\n                  <textarea name='answerContent' value={answer.answerContent} className='ba-textarea' onChange={(e) => {\n                    handleInputChange(e, index, answerList, setAnswerList);\n                  }} />\n                  <div className='ba-btn-div'>\n                    <button type='button' className='ba-btn ba-margin-right20' onClick={\n                      () => {\n                        let jsonObj = formToJSON(new FormData(document.getElementById('answerUpdateForm' + index)));\n                        console.log(jsonObj);\n                        sendAxiosRequest(`/api/answer/update?`, 'POST', jsonObj, response => {\n                          window.location.reload();\n                          alert('답글이 성공적으로 변경되었습니다!');\n                        }, error => {\n                          console.log(error);\n                        });\n                      }\n                    } >답글수정</button>\n                    <button type='button' className='ba-btn ba-margin-right80' onClick={\n                      () => {\n                        sendAxiosRequest(`/api/answer/delete?answerNo=${answer.answerNo}`, 'GET', null, response => {\n                          window.location.reload();\n                          alert('답글이 성공적으로 삭제되었습니다!');\n                        }, error => {\n                          console.log(error);\n                        });\n                      }\n                    }>답글삭제</button>\n                  </div>\n                </div>)\n              : (<textarea name='answerContent' value={answer.answerContent} className='ba-textarea-disabled' />)}\n          </form>\n        </div >\n      ))\n      }\n      <div className='ba-btn-div'>\n        <button type='button' className='ba-more-btn' hidden onClick={(e) => {\n          sendAxiosRequest(`/api/answer/list?reviewNo=${props.reviewNo}&startPage=${startPageNo}`, \"GET\", null,\n            response => {\n              console.log(response.data);\n              let totalRows = response.data.totalRows;\n              let appendAnswerList = response.data.answerList;\n              let newAnswerList = [...answerList, ...appendAnswerList];\n              setAnswerList(newAnswerList);\n              setStartPageNo(newAnswerList.length / 2);\n              if (totalRows <= newAnswerList.length) {\n                e.target.hidden = true;\n              }\n\n            }, error => {\n              console.log(error);\n            })\n        }}>더 보기</button>\n      </div>\n    </div >\n  );\n}\n\n\nexport default ReviewForm;\n","/Users/nahyun/git/EEE/src/components/MyPage/MyPage.js",["348","349","350","351","352"],[],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport axios, { formToJSON } from 'axios';\nimport { isOpenNow, sendAxiosRequest } from '../utility/common';\n\nfunction MyPage() {\n\n  const defaultImage = '/images/rose.png';\n\n  const [member, setMember] = useState(null);\n  const [menuData, setMenuData] = useState([]); // 메뉴 데이터를 저장할 상태\n\n  const location = useLocation(); // 추가된 부분\n  const store = location.state; // 추가된 부분\n  console.log(store);\n\n  useEffect(() => {\n    sendAxiosRequest('api/member/loginCheck', 'GET', null, response => {\n      let loginUser = response.data.loginUser;\n      setMember(loginUser);\n      console.log(loginUser);\n    }, error => console.log(error))\n  }\n    , []);\n\n\n  const outerContainerStyle = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    margin: '0',\n  };\n\n  const styles = {\n    container: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center', // 가운데 정렬 추가\n      padding: '20px',\n      width: '70%',\n      height: '30vh', // 화면 높이의 100%를 차지하도록 설정\n    },\n    profileSection: {\n      display: 'flex',\n      alignItems: 'center',\n      marginBottom: '20px',\n      width: '100%', //\n    },\n    profilePicture: {\n      width: '110px',\n      height: '110px',\n      borderRadius: '80px',\n      marginRight: '20px', // 사진과 텍스트 사이의 간격을 조정\n    },\n    userInfo: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-start', // 왼쪽 정렬\n    },\n    linkSection: {\n      display: 'flex',\n      flexDirection: 'column',\n      width: '100%',\n    },\n    linkContainer: {\n      margin: '20px 0',\n      padding: '20px',\n      borderRadius: '4px',\n      backgroundColor: '#ffffff',\n      textAlign: 'center',\n      boxShadow: '0px 0px 15px rgba(0, 0, 0, 0.2)',\n    },\n    link: {\n      textDecoration: 'none',\n      color: 'black',\n      fontWeight: 'bold',\n    },\n    button: {\n      display: 'inline-block',\n      padding: '10px 20px',\n      margin: '5px 0',\n      backgroundColor: '#4CAF50', \n      color: 'white',\n      textDecoration: 'none',\n      textAlign: 'center',\n      borderRadius: '8px',\n    },\n  };\n  const personalLinks = (\n    <>\n      <div style={styles.linkContainer}>\n        <Link to=\"/useredit\" style={styles.link}>회원정보 수정</Link>\n      </div>\n      <div style={styles.linkContainer}>\n        <Link to=\"/\" style={styles.link}>마이 오더</Link>\n      </div>\n      <div style={styles.linkContainer}>\n        <Link to=\"/\" style={styles.link}>찜하기</Link>\n      </div>\n    </>\n  );\n\n  // 비즈니스 사용자용 링크\n  const businessLinks = (\n    <>\n      <div style={styles.linkContainer}>\n        <Link to=\"/useredit\" style={styles.link}>회원정보 수정</Link>\n      </div>\n      <div style={styles.linkContainer}>\n      <Link \n        to= \"/menuEdit\" \n        style={styles.link}\n      >\n        메뉴 관리\n  </Link>      \n  </div>\n      <div style={styles.linkContainer}>\n        <Link to=\"/\" style={styles.link}>품목 관리</Link>\n      </div>\n      <div style={styles.linkContainer}>\n        <Link to=\"/order-confirmation\" style={styles.link}>주문확인</Link>\n      </div>\n      <div style={styles.linkContainer}>\n        <Link to=\"/storeRegister\" style={styles.link}>가게등록</Link>\n      </div>\n    </>\n  );\n\n  // 관리자 사용자용 링크\n  const adminLinks = (\n    <>\n      <div style={styles.linkContainer}>\n        <Link to=\"/admin/notice/list\" style={styles.link}>공지사항 관리</Link>\n      </div>\n\n    </>\n  );\n\n  if (member === null) {\n    return <div>Loading...</div>; // 로딩 표시\n  } else {\n  return (\n    <div style={outerContainerStyle}>\n      <div style={styles.container}>\n        <div style={styles.profileSection}>\n          <img src={defaultImage} alt={member.memberName} style={styles.profilePicture} />\n          <div style={styles.userInfo}>\n            <h2>{member.memberName}</h2>\n            <p> {member.memberCategory === 'M' ? '개인' :\n                  member.memberCategory === 'S' ? '비즈니스' :\n                  member.memberCategory === 'A' ? '관리자' : '기타'}\n                  계정</p>\n            <p>{member.memberEmail}</p>\n          </div>\n        </div>\n\n        <div style={styles.linkSection}>\n          {/* member.memberCategory 값에 따라 링크 섹션을 조건부로 렌더링합니다. */}\n           {/* member.memberCategory 값에 따라 링크 섹션을 조건부로 렌더링합니다. */}\n          {member.memberCategory === 'M' ? personalLinks :\n          member.memberCategory === 'S' ? businessLinks :\n          member.memberCategory === 'A' ? adminLinks : undefined}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n}\nexport default MyPage;","/Users/nahyun/git/EEE/src/components/MyPage/StoreRegisterPage.js",["353","354"],[],"import React, { useState } from 'react';\n// import { Form, Card, Button } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport axios, { formToJSON } from 'axios';\n\n\n\nfunction StoreRegisterPage() {\n\n\n  const navigate = useNavigate();\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(e.target);\n    let formData = new FormData(e.target);\n\n    let jsonObj = formToJSON(formData);\n\n    console.log(jsonObj);\n\n    // POST 요청 생성\n    axios.post('/api/store/signup', jsonObj, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(response => {\n        // 성공적으로 서버에서 응답을 받은 경우의 처리\n        console.log('등록된 가게 정보:', response.data);\n        alert('가게 등록 성공!')\n        navigate('/mypage');\n\n      })\n      .catch(error => {\n        // 오류가 발생한 경우의 처리\n        console.error('에러 발생:', error);\n      });\n\n  };\n\n  return (\n    <div style={styles.container}>\n      <form onSubmit={handleSubmit} style={styles.form}>\n      <div>\n        <h2>가게 등록 </h2>\n        </div>\n        <div>\n        <label>시장명: </label>\n        <input style={styles.input} type=\"text\" name=\"marketName\" />\n        </div>\n        <div>\n        <label>가게명: </label>\n        <input style={styles.input} type=\"text\" name=\"storeName\" />\n        </div>\n        <div>\n        <label>사업자등록번호: </label>\n        <input style={styles.input} type=\"text\" name=\"licenseNo\" />\n        </div>\n        <div>\n        <label>우편번호: </label>\n        <input style={styles.input} type=\"text\" name=\"storeZipcode\" />\n        </div>\n        <div>\n        <label>기본주소: </label>\n        <input style={styles.input} type=\"text\" name=\"storeAddr\" />\n        </div>\n        <div>\n        <label>상세주소: </label>\n        <input style={styles.input} type=\"text\" name=\"storeDetailAddr\" />\n        </div>\n\n\n        <div>\n          <label>평일운영시작시간: </label>\n          <input style={styles.input} type=\"time\" name=\"weekdayStartTime\" />\n        </div>\n        <div>\n          <label>평일운영종료시간: </label>\n          <input style={styles.input} type=\"time\" name=\"weekdayEndTime\" />\n        </div>\n        <div>\n          <label>주말운영시작시간: </label>\n          <input style={styles.input} type=\"time\" name=\"weekendStartTime\" />\n        </div>\n        <div>\n          <label>주말운영종료시간: </label>\n          <input style={styles.input} type=\"time\" name=\"weekendEndTime\" />\n        </div>\n\n        <button type=\"submit\" style={styles.submitButton}> 가게 등록</button>\n\n      </form>\n    </div>\n\n  );\n}\n\nconst styles = {\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '60vh',\n  },\n  card: {\n    width: '50%', \n    boxShadow: '0 8px 30px rgba(0, 0, 0, 0.12)',\n    borderRadius: '20px', \n    padding: '20px', \n  },\n\n  title: {\n    fontSize: '1.8rem',\n    marginBottom: '30px',\n    textAlign: 'center',\n  },\n  button: {\n    background: 'linear-gradient(to right, #6a11cb, #2575fc)',\n    border: 'none',\n    padding: '10px 20px',\n    color: 'white',\n    borderRadius: '25px',\n    transition: 'all 0.2s',\n    cursor: 'pointer',\n    transition: 'all 0.3s', \n    '&:hover': {\n      transform: 'scale(1.1)', \n    },\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center', // 폼 내용을 중앙 정렬합니다.\n    padding: '20px',  // 내부 패딩을 추가합니다.\n    borderRadius: '12px',  // 모서리를 둥글게 합니다.\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2)', // 약간의 그림자 효과를 추가합니다.\n    background: 'white', // 배경색을 흰색으로 설정합니다.\n    width: '800px', \n  },\n  input: {\n    padding: '10px',\n    margin: '5px 0',\n    borderRadius: '6px',\n    border: '1px solid #ccc',\n    outline: 'none',\n    width: '300px', \n  },\n  submitButton: {\n    padding: '10px 20px',\n    cursor: 'pointer',\n    backgroundColor: '#0575E6',\n    border: 'none',\n    borderRadius: '8px',\n    color: 'white',\n  },\n};\n\n\n\nexport default StoreRegisterPage;\n\n\n\n// import * as React from 'react';\n// import { Button, TextField, Box, Typography, Container } from '@mui/material';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n\n// function StoreRegisterPage() {\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const formData = new FormData(e.currentTarget);\n//     // 폼 데이터를 JSON으로 변환하는 로직이 필요합니다.\n//     // formToJSON 함수를 정의하거나 다른 방법을 사용하세요.\n\n//     // JSON 객체 생성\n//     let jsonObj = {}; \n//     formData.forEach((value, key) => { jsonObj[key] = value });\n\n//     console.log(jsonObj);\n\n//     // POST 요청 생성\n//     axios.post('/api/store/signup', jsonObj, {\n//       headers: {\n//         'Content-Type': 'application/json'\n//       }\n//     })\n//       .then(response => {\n//         console.log('등록된 가게 정보:', response.data);\n//         // navigate('/path-after-success'); // 성공 후 리디렉션 경로\n//       })\n//       .catch(error => {\n//         console.error('에러 발생:', error);\n//       });\n//   };\n\n//   // Material-UI 컴포넌트를 사용한 레이아웃\n//   return (\n//     <Container component=\"main\" maxWidth=\"xs\">\n//       <Box\n//         sx={{\n//           marginTop: 8,\n//           display: 'flex',\n//           flexDirection: 'column',\n//           alignItems: 'center',\n//         }}\n//       >\n//         <Typography component=\"h1\" variant=\"h5\">\n//           가게 등록\n//         </Typography>\n//         <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n//           <TextField\n//             margin=\"normal\"\n//             required\n//             fullWidth\n//             id=\"marketName\"\n//             label=\"시장명\"\n//             name=\"marketName\"\n//             autoComplete=\"market-name\"\n//             autoFocus\n//           />\n//           {/* 다른 필드들도 이와 유사한 형태로 추가합니다. */}\n//           {/* 예시: */}\n//           <TextField\n//             margin=\"normal\"\n//             required\n//             fullWidth\n//             name=\"storeName\"\n//             label=\"가게명\"\n//             id=\"storeName\"\n//             autoComplete=\"store-name\"\n//           />\n//           {/* 나머지 필드를 여기에 추가 */}\n//           {/* ... */}\n//           <Button\n//             type=\"submit\"\n//             fullWidth\n//             variant=\"contained\"\n//             sx={{ mt: 3, mb: 2 }}\n//           >\n//             가게 등록\n//           </Button>\n//         </Box>\n//       </Box>\n//     </Container>\n//   );\n// }\n\n// export default StoreRegisterPage;\n","/Users/nahyun/git/EEE/src/components/MyPage/UserEditPage.js",["355","356","357"],[],"import React, { useState, useEffect } from 'react';\nimport InputField from './InputField';\nimport { sendAxiosMultipartRequest, sendAxiosRequest } from '../utility/common';\nimport axios, { formToJSON } from 'axios';\nimport { useNavigate, useParams } from 'react-router-dom';\n\n\n\n\nfunction UserEditPage() {\n  // 예시 사용자 정보\n\n  // const user = {\n  //   name: 'Rose',\n  //   email: 'rose@example.com',\n  //   password: 'password123',\n  //   phoneNumber: '010-1234-5678',\n  //   postalCode: '12345',\n  //   primaryAddress: '서울시 강남구',\n  //   detailAddress: '역삼동',\n  //   bank: '국민은행',\n  //   accountNumber: '1234-56-789012',\n  // };\n\n  const defaultImage = '/images/rose.png';\n\n  const [member, setMember] = useState(null);\n\n  useEffect(() => {\n    sendAxiosRequest('api/member/loginCheck', 'GET', null, response => {\n      let loginUser = response.data.loginUser;\n      setMember(loginUser);\n    }, error => console.log(error))\n  }\n\n    , []);\n\n  const navigate = useNavigate();\n\n  function memberUpdate() {\n    // 폼 데이터 객체 생성\n    let formData = new FormData();\n\n    const updateMemberRequest = JSON.stringify(member);\n    // Blob 객체로 변환하여 'updateMemberRequest' 파트로 추가\n    const updateMemberBlob = new Blob([updateMemberRequest], { type: 'application/json' });\n    formData.append('updateMemberRequest', updateMemberBlob);\n\n    // 이미지 파일 추가 (있는 경우)\n    let fileInput = document.getElementById('imageInput');\n    if (fileInput.files[0]) {\n      formData.append('profileImage', fileInput.files[0]);\n    }\n\n    // Axios를 이용하여 멀티파트 폼 데이터를 서버로 전송합니다.\n    sendAxiosMultipartRequest('/api/member/update', 'PUT', formData,\n      response => {\n        console.log('response.data', response.data);\n        navigate('/mypage')\n      },\n      error => {\n        console.error('멤버 업데이트 중 에러 발생', error);\n      }\n    );\n  }\n\n  const [currentImage, setCurrentImage] = useState(defaultImage);\n\n\n\n  // 파일 선택 시 이벤트 처리\n  const handleImageChange = (event) => {\n    if (event.target.files && event.target.files[0]) {\n      const reader = new FileReader();\n\n      reader.onload = (e) => {\n        // 읽기 동작이 성공적으로 완료되면, 현재 이미지 상태를 새 이미지 URL로 업데이트합니다.\n        setCurrentImage(e.target.result);\n      };\n\n      // 선택된 이미지 파일을 데이터 URL로 읽습니다. 이로 인해 onload 콜백이 실행됩니다.\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  };\n\n\n  const handleImageClick = () => {\n    document.getElementById('imageInput').click();\n  };\n\n  // const memberDelete = () => {\n  //   setCurrentImage(defaultImage);\n\n  //     // 서버에 프로필 이미지 삭제를 요청합니다.\n  //     axios.post('/api/member/update', { userId: member.id }) // 'member.id'는 실제 회원 ID에 해당하는 프로퍼티명으로 변경해야 합니다.\n  //     .then((response) => {\n  //       // 요청이 성공적으로 완료되었을 때 수행할 동작입니다.\n  //       // 예를 들어, 사용자에게 성공적으로 삭제되었다는 알림을 표시할 수 있습니다.\n  //       console.log(response.data); // 서버로부터 받은 응답 데이터를 콘솔에 출력합니다.\n  //       alert('프로필 사진이 성공적으로 삭제되었습니다.');\n  //     })\n  //     .catch((error) => {\n  //       // 서버 요청 중에 오류가 발생했을 때 수행할 동작입니다.\n  //       // 예를 들어, 사용자에게 오류가 발생했다는 것을 알릴 수 있습니다.\n  //       console.error('프로필 사진 삭제 중 오류 발생', error);\n  //       alert('프로필 사진을 삭제하는 중 문제가 발생했습니다.');\n  //     });\n  //};\n\n  const styles = {\n    container: {\n      display: 'flex',\n      flexDirection: 'row', // 행 방향으로 아이템들을 정렬합니다.\n      alignItems: 'flex-start', // 아이템들을 컨테이너의 시작 부분에 정렬합니다.\n      // margin: '0 auto', // 컨테이너를 화면 가운데 정렬합니다.\n      padding: '20px', // 컨테이너의 패딩을 추가합니다.\n      // width: '50%',\n      justifyContent: 'center'\n    },\n    profilePicture: {\n      width: '200px',\n      height: '200px',\n      borderRadius: '100px',\n      marginBottom: '20px',\n      alignSelf: 'flex-start', // 사진을 컨테이너의 시작 부분에 정렬합니다.\n    },\n    formSection: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      marginLeft: '20px', // 프로필 사진과 폼 섹션 사이에 마진을 추가합니다.\n    },\n    title: {\n      fontSize: '24px', // 원하는 폰트 크기로 설정합니다.\n      fontWeight: 'bold', // 제목의 폰트를 굵게 설정합니다.\n      marginBottom: '20px', // 제목 아래에 마진을 추가합니다.\n      textAlign: 'center',\n    },\n    buttonStyle: {\n      border: 'none',\n      margin: '10px 0',\n      padding: '10px',\n      borderRadius: '4px',\n      backgroundColor: '#C4C4C433',\n      textAlign: 'center', // 수정: 텍스트를 중앙에 배치합니다.\n      // boxShadow: '0px 0px 15px rgba(0, 0, 0, 0.2)',\n      width: '500px',\n      cursor: 'pointer',\n\n    }\n\n  };\n\n  // Input 태그의 style 프로퍼티에 styles.input을 추가하세요.\n  // <input style={styles.input} ... />\n\n\n  if (member === null) {\n    return <div>Loading...</div>; // 로딩 표시\n  } else {\n    return (\n      <div style={styles.container}>\n        <form id='memberForm' onClick={handleImageChange} style={styles.form}>\n          <img src={currentImage} alt={member.memberName} style={styles.profilePicture} onClick={handleImageClick} />\n          <br />\n          <button type=\"button\" style={styles.buttonStyle} onClick={() => { document.getElementById('imageInput').click() }}>사진 등록</button>\n          {/* <form onClick={handleImageChange} style={styles.form}> */}\n          <input\n            type=\"file\"\n            style={{ display: 'none' }}\n            id=\"imageInput\"\n            onChange={handleImageChange}  // 이벤트 핸들러를 파일 입력에 연결합니다.\n          />\n          {/* </form> */}\n          <div style={styles.formSection}>\n            <h1 style={styles.title}>일반 회원 정보 수정</h1>\n            <InputField type=\"text\" name=\"memberName\" value={member.memberName} onChange={e => setMember({ ...member, memberName: e.target.value })} placeholder=\"Name\" />\n            <InputField type=\"email\" name=\"memberEmail\" value={member.memberEmail} onChange={e => setMember({ ...member, memberEmail: e.target.value })} placeholder=\"Email\" />\n            <InputField type=\"password\" name=\"memberPwd\" value={member.memberPwd} onChange={e => setMember({ ...member, memberPwd: e.target.value })} placeholder=\"Password\" />\n            <InputField type=\"text\" name=\"memberPhone\" value={member.memberPhone} onChange={e => setMember({ ...member, memberPhone: e.target.value })} placeholder=\"Phone Number\" />\n            <InputField type=\"text\" name=\"memberZipcode\" value={member.memberZipcode} onChange={e => setMember({ ...member, memberZipcode: e.target.value })} placeholder=\"Postal Code\" />\n            <InputField type=\"text\" name=\"memberAddr\" value={member.memberAddr} onChange={e => setMember({ ...member, memberAddr: e.target.value })} placeholder=\"Primary Address\" />\n            <InputField type=\"text\" name=\"memberDetailAddr\" value={member.memberDetailAddr} onChange={e => setMember({ ...member, memberDetailAddr: e.target.value })} placeholder=\"Detail Address\" />\n            <InputField type=\"text\" name=\"memberBank\" value={member.memberBank} onChange={e => setMember({ ...member, memberBank: e.target.value })} placeholder=\"Bank\" />\n            <InputField type=\"text\" name=\"memberAccount\" value={member.memberAccount} onChange={e => setMember({ ...member, memberAccount: e.target.value })} placeholder=\"Account Number\" />\n            {/* <button type='button' onClick={memberUpdate} style={styles.buttonStyle}>사진 삭제</button> */}\n            <button type='button' onClick={memberUpdate} style={styles.buttonStyle}>수정</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\nexport default UserEditPage;\n\n","/Users/nahyun/git/EEE/src/components/Auth/LoginPage.js",["358","359","360","361","362"],[],"import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useNavigate } from 'react-router-dom';\nimport { formToJSON } from 'axios';\nimport { useState, useContext } from 'react';\nimport { useUser } from './UserContext';\nimport { isOpenNow, sendAxiosRequest } from '../utility/common';\n\n\nconst defaultTheme = createTheme();\n\nfunction LoginPage() {\n\n  const navigate = useNavigate();\n\n  const { user, login, logout } = useUser();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    // console.log(formToJSON(data));\n    // console.log({\n    //   memberEmail: data.get('memberEmail'),\n    //   memberPwd: data.get('memberPwd'),\n    // });\n\n    sendAxiosRequest(\"/api/member/login\", 'POST', formToJSON(data), response => {\n      console.log(response.data);\n      // console.log(formToJSON(data));\n\n      // sendAxiosRequest(\"/api/member/loginCheck\", \"GET\", null,\n      // response => {\n      //   let repLoginUser = response.data.loginUser;\n      //   // if (repLoginUser === null) {\n      //   //   window.location.href = '/main';\n      //   // } else {\n      //     login(repLoginUser);\n      //   // }\n      // }, error => console.log(error));\n      if (response.data.loginUser !== null) {\n        login(response.data.loginUser)\n          localStorage.setItem('memberEmail', data.get('memberEmail'));\n          localStorage.setItem('memberPwd', data.get('memberPwd'));\n      }\n    }, error => {\n      console.log(error);\n    });\n    navigate('/');\n  };\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Grid container component=\"main\" sx={{ height: '100vh' }}>\n        <CssBaseline />\n        <Grid\n          item\n          xs={false}\n          sm={4}\n          md={7}\n          sx={{\n            backgroundImage: 'url(/images/login.png)',\n            backgroundRepeat: 'no-repeat',\n            backgroundColor: (t) =>\n              t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n          }}\n        />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <Box\n            sx={{\n              my: 27,\n              mx: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n\n            <Typography component=\"h1\" variant=\"h5\">\n              안녕!\n            </Typography>\n            <Box component=\"form\" sx={{ mt: 1 }} noValidate onSubmit={handleSubmit}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"memberEmail\"\n\n                autoComplete=\"email\"\n                autoFocus\n                InputProps={{ style: { borderRadius: '30px' } }}\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"memberPwd\"\n\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                InputProps={{ style: { borderRadius: '30px' } }}\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2, borderRadius: '30px' }} // borderRadius 추가\n              >\n                Login\n              </Button>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{\n                  mt: 3,\n                  mb: 2,\n                  borderRadius: '30px',\n                  backgroundColor: '#FFEB00',  // 카카오 노란색\n                  '&:hover': {\n                    backgroundColor: '#FFD600', // 노란색의 어두운 톤으로 hover 효과 추가\n                  }\n                }}\n              >\n                KAKAO Login\n              </Button>\n              <Grid container>\n                <Grid item>\n                  <Link href=\"/register\" variant=\"body2\">\n                    {\"회원가입\"}\n                  </Link>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n}\n\nexport default LoginPage;","/Users/nahyun/git/EEE/src/components/Auth/UserContext.js",[],[],"/Users/nahyun/git/EEE/src/components/Common/Header.js",["363","364","365","366","367","368","369"],[],"/Users/nahyun/git/EEE/src/components/StoreItemDailyPrice/StoreItemDailyPrice.js",["370","371","372","373"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Carousel } from 'react-responsive-carousel';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport './StoreItemDailyPrice.css';\nimport { sendAxiosRequest } from '../utility/common';\nfunction StoreItemDailyPrice() {\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [selectedOrigin, setSelectedOrigin] = useState(null);\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false); // 임시 false\n\n  // const [stores, setStores] = useState([]);\n\n  useEffect(() => {\n    axios.get('/api/item')\n      .then(response => setItems(response.data))\n      .catch(error => console.log(error));\n    // console.log(stores);\n  }, []);\n\n  console.log(items);\n\n\n  const categoryOptions = {\n    S: '생선/횟감',\n    F: '생선/비횟감',\n    C: '갑각류',\n    M: '패류',\n    E: '기타',\n  };\n\n  const originOptions = {\n    ES: '동해',\n    WS: '서해',\n    SS: '남해',\n    JJ: '제주',\n    WD: '완도',\n    JP: '일본',\n    CN: '중국',\n    RU: '러시아',\n    NW: '노르웨이',\n  };\n\n  const recommendationItems = [\n    {\n      id: 1,\n      image: 'item1.jpg',\n      name: '추천 상품 1',\n    },\n    {\n      id: 2,\n      image: 'item2.jpg',\n      name: '추천 상품 2',\n    },\n  ];\n\n\n  return (\n    <div className=\"daily-box\">\n      <div className=\"filter-buttons\">\n        <p>품목 카테고리 선택:</p>\n        {Object.keys(categoryOptions).map((code) => (\n          <button\n            key={code}\n            className={selectedCategory === code ? 'selected' : ''}\n            onClick={() => setSelectedCategory(code)}\n          >\n            {categoryOptions[code]}\n          </button>\n        ))}\n      </div>\n      <div className=\"origin-buttons\">\n        <p>원산지 선택:</p>\n        {Object.keys(originOptions).map((code) => (\n          <button\n            key={code}\n            className={selectedOrigin === code ? 'selected' : ''}\n            onClick={() => setSelectedOrigin(code)}\n          >\n            {originOptions[code]}\n          </button>\n        ))}\n      </div>\n      <div className=\"carousel\">\n        <h2>추천하는 오늘의 생선</h2>\n        {/* <Carousel showArrows={true}>\n          {recommendationItems.map((item) => (\n            <div key={item.id}>\n              <img src={item.image} alt={item.name} />\n              <p className=\"legend\">{item.name}</p>\n            </div>\n          ))}\n        </Carousel> */}\n      </div>\n      <h1>오늘의 시세</h1>\n      <div className=\"price-list\">\n        {loading ? (\n          <p>로딩 중...</p>\n        ) : (\n          <table>\n            <thead>\n              <tr>\n                <th>품목명</th>\n                <th>품목크기</th>\n                <th>원산지 구분</th>\n              </tr>\n            </thead>\n            <tbody>\n              {items\n                .filter(\n                  (item) =>\n                    (!selectedCategory || item.itemCode === selectedCategory) &&\n                    (!selectedOrigin || item.originPlaceStatus === selectedOrigin)\n                )\n                .map((item) => (\n                  <tr key={item.itemNo}>\n                    <td>{item.itemName}</td>\n                    <td>{item.itemSize}</td>\n                    <td>{originOptions[item.originPlaceStatus]}</td>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default StoreItemDailyPrice;","/Users/nahyun/git/EEE/src/components/MyPage/MyOrder.js",["374"],[],"import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport MyOrderContent from './MyOrderContent';\n\n\nfunction MyOrder() {\n\n  const order1 = {\n    orderPrice:'10000',\n    recipientPhone:'01011111111',\n    recipientName: '김성주',\n    recipientZipcode: '1111',\n    recipientAddr: '기본주소',\n    recipientDetailAddr: '상세주소',\n    regDatetime: '2023-09-01 15:00:00',\n    mdfDatetime: '2023-09-01 15:00:00',\n    orderStatus: 'Y'\n  }\n\n  const order2 = {\n    orderPrice:'20000',\n    recipientPhone:'01011111111',\n    recipientName: '김성주2',\n    recipientZipcode: '1111',\n    recipientAddr: '기본주소',\n    recipientDetailAddr: '상세주소',\n    regDatetime: '2023-09-01 15:00:00',\n    mdfDatetime: '2023-09-01 15:00:00',\n    orderStatus: 'N'\n  }\n\n  const order3 = {\n    orderPrice:'10000',\n    recipientPhone:'01011111111',\n    recipientName: '김성주',\n    recipientZipcode: '1111',\n    recipientAddr: '기본주소',\n    recipientDetailAddr: '상세주소',\n    regDatetime: '2023-09-01 15:00:00',\n    mdfDatetime: '2023-09-01 15:00:00',\n    orderStatus: 'Y'\n  }\n\n\n  const orderlist = [order1, order2, order3]\n\n  const [selected, setSelected] = useState([]);\n\n  const onClick = (e) => {\n    setSelected(e.target.value);\n  };\n\n  useEffect(()=>{\n    console.log(selected);\n  }, [selected])\n\n  // let content = (selected === 'Delivered') ? \n  // <MyOrderContent orderlist = {orderlist.filter((item)=>item.orderStatus === 'N')}/> : \n  // <MyOrderContent orderlist = {orderlist.filter((item)=>item.orderStatus === 'Y')} />;\n\n  let content = (\n    (selected === 'Delivered') ? <MyOrderContent orderlist = {orderlist.filter((item)=>item.orderStatus === 'Y')}/> : \n    (selected === 'Canceled') ? <MyOrderContent orderlist = {orderlist.filter((item)=>item.orderStatus === 'N')} />:\n    null\n  )\n\n  return (\n      <>\n        <h2>마이오더</h2>\n        <div>\n          <button value={'Delivered'} onClick = {onClick}>Delivered</button>\n          <button value={'Canceled'} onClick = {onClick}>Canceled</button>\n        </div>\n        <div>\n          {/* <MyOrderContent /> */}\n          {content}\n        </div>\n      \n      \n      </>\n  );\n};\n\nexport default MyOrder;\n","/Users/nahyun/git/EEE/src/components/Market/StoreListItem.js",["375","376","377","378","379","380","381","382"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport styles from './StoreListItem.module.css';\nimport { Link } from 'react-router-dom';\nimport { isOpenNow, sendAxiosRequest, startEndTimeInfo } from '../utility/common';\n\nfunction StoreListItem(props) {\n  let [store, setStore] = useState(props.data);\n  let [open, setOpen] = useState('O');\n\n  useEffect(() => {\n    // 컴포넌트가 처음 렌더링될 때만 실행됨\n\n\n    let startEndTime = startEndTimeInfo(store);\n    let openStatus = isOpenNow(startEndTime[0], startEndTime[1]);\n\n    console.log(store.storeName, '의 가게 영업시간: ', startEndTime);\n    console.log('열었나 닫았나?', openStatus);\n    setOpen(openStatus);\n\n\n\n  }, []); // 빈 배열을 사용하여 처음 렌더링 때만 실행\n\n\n  return (\n    <div className={styles.storeListItemBox}>\n      <img src='/images/boss.png' className={styles.storeListItemBoss} />\n      <div className={styles.storeListItemDetailTop}>\n        <div className={styles.storeListItemHeader}>\n          <strong className={styles.storeListItemDetailName}>{store.storeName}</strong>\n          <span className={styles.storeListItemDetailMarket}>{store.marketName}</span>\n        </div>\n        <p className={styles.storeListItemDetailIntroduce}>{store.storeAddr}</p>\n\n        <p className={styles.storeListItemBoxReview}>\n          <img className={styles.storeListItemFresh} src='/images/fresh.png' />5.0 (1024)\n        </p>\n        <p className={styles.storeListItemBoxState}>\n          <img className={styles.storeListItemStateIcon} src='/images/heart.png' />\n          {open == 'O' ? '영업중' : '영업종료'}\n        </p>\n        <div className={styles.storeListItemDetailBoxMore}>\n          <Link to=\"/market/detail\" state={store}>더보기&gt;</Link>\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default StoreListItem;","/Users/nahyun/git/EEE/src/components/StoreHome.js",["383","384","385"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport styles from './StoreHome.module.css';\nimport StoreHomeItem from './StoreHomeItem';\n\n\nfunction StoreHome({ stores }) {\n\n  // const [storelist, setStorelist] = useState(stores);\n\n  // useEffect(()=>{\n  //   setStorelist(stores);\n  //   }, []);\n\n  // const storelist = stores;\n  // const storesArray = Object.keys(stores);\n\n  return (\n    <div className={styles.storeBox}>\n      {/* <button onClick={()=>{console.log(stores)}}>\n        {stores[0]?.marketName}\n        </button> */}\n\n      {\n      stores.filter((item) => item.storeNo < 7)\n      .map((item) => (      \n        <StoreHomeItem key={item.storeNo} store={item}/> ))\n      }\n\n    </div>\n  )\n}\n\nexport default StoreHome;","/Users/nahyun/git/EEE/src/components/Menu/MenuItem.js",[],[],"/Users/nahyun/git/EEE/src/components/MyPage/InputField.js",[],[],"/Users/nahyun/git/EEE/src/components/MainPage/Announce.js",["386","387","388","389"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport styles from './Announce.module.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport { Carousel } from 'react-bootstrap';\nimport { useLocation } from 'react-router-dom';\n\nfunction Announce() {\n  const carousel = {\n    height: '400px',\n    width: '60%',\n    margin: '0 auto',\n    borderRadius: '30px',\n    overflow: 'hidden'\n  }\n\n  const location = useLocation();\n  const content = (location.pathname !== \"/store/list\") ? <img\n    src=\"/images/storeimage.png\"\n    alt=\"슬라이드 1\"\n  /> : <img src='/images/login.png' />;\n\n  return (\n    <div style={carousel}>\n      <Carousel >\n        {/* 슬라이드 이미지 */}\n        <Carousel.Item id={styles.carousel}>\n          {content}\n\n          <Carousel.Caption>\n            <h3>꽃소녀</h3>\n            <p>김철수 作</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n        <Carousel.Item id={styles.carousel}>\n          {content}\n          <Carousel.Caption>\n            <h3>형형색색</h3>\n            <p>이숙자 作</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n        <Carousel.Item id={styles.carousel}>\n          {content}\n          <Carousel.Caption>\n            <h3>분홍</h3>\n            <p>Robert Park 作</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n        <Carousel.Item id={styles.carousel}>\n          {content}\n          <Carousel.Caption>\n            <h3>두꺼운 터치</h3>\n            <p>Thomas Lee 作</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n      </Carousel>\n      <div>\n        쿠폰div\n      </div>\n    </div>\n  );\n}\n\nexport default Announce;","/Users/nahyun/git/EEE/src/components/MainPage/Category.js",["390","391","392"],[],"import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport styles from './Category.module.css';\n\n\nfunction Category() {\n\n  const [selectedOption, setSelectedOption] = useState('');\n\n  const handleOptionChange = (event) => {\n    setSelectedOption(event.target.value);}\n\n  return (\n    <>\n      <select value={selectedOption} onChange={handleOptionChange}>\n        <option value=\"option1\">옵션 1</option>\n        <option value=\"option2\">옵션 2</option>\n        <option value=\"option3\">옵션 3</option>\n      </select>\n\n      <p>{selectedOption}</p>\n    </>\n  );\n}\n\nexport default Category;","/Users/nahyun/git/EEE/src/components/utility/common.js",[],[],"/Users/nahyun/git/EEE/src/components/MyPage/MyOrderContent.js",["393","394","395","396","397"],[],"import React, { useEffect, useReducer, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './MyOrderContent.module.css';\n\n\nfunction MyOrderContent({orderlist}) {\n\n\n  // const [orders, setOrders] = useState(orderlist);\n\n  // useEffect(()=>{\n  //   console.log(orders);\n  // }, [orders])\n\n  // function onClick() {\n  //   console.log(orders);\n  // }\n\n  const orders = orderlist;\n\n  return (\n    <>\n    {orders.map((item)=>(\n    <div key={item.index}>\n  \n    {/* <button onClick={onClick} >버튼</button> */}\n    <div className={styles.order_box}>\n      <div className={styles.order_store_title}>\n        <span>name</span>\n      </div>\n      \n      <div className={styles.order_item_box}>\n        <img src='/images/fresh.png'/>\n        <span>fishname</span>\n        <span>fishcount</span>\n        <span>price</span>\n      </div>\n      \n      <div className={styles.order_result_box}>\n        <span>총액: price</span>\n        <span>주문일: date</span>\n      </div>\n      </div>\n   \n    </div>\n  ))}\n       </>\n  );\n}\n\nexport default MyOrderContent;\n","/Users/nahyun/git/EEE/src/components/StoreHomeItem.js",["398","399","400","401","402","403","404","405","406","407","408","409"],[],"import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport styles from './StoreHomeItem.module.css';\nimport { Link, NavLink } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Placeholder from 'react-bootstrap/Placeholder';\nimport { useNavigate } from \"react-router-dom\";\n\n\n\nfunction StoreHomeItem({store}) {\n\n  function isCurrentTimeInRange(startTime, endTime) {\n    // 현재 날짜와 시간을 생성\n    const currentDate = new Date();\n    // 시작 시간과 종료 시간을 파싱 (예: \"08:00\" 형식)\n    \n    // 현재 시간이 시작 시간과 종료 시간 사이에 있는지 확인\n    return currentDate >= startTime && currentDate <= endTime;\n  }\n\n  const startTime = new Date();\n  const [startHours, startMinutes, startSecond] = store.weekdayStartTime.split(':');\n  startTime.setHours(parseInt(startHours, 10));\n  startTime.setMinutes(parseInt(startMinutes, 10));\n  // startTime.setSecond(parseInt(startSecond, 10));\n\n  const endTime = new Date();\n  const [endHours, endMinutes, endSecond] = store.weekdayEndTime.split(':');\n  endTime.setHours(parseInt(endHours, 10));\n  endTime.setMinutes(parseInt(endMinutes, 10));\n  // endTime.setSecond(parseInt(endSecond, 10));\n\n  \n  const isWorking = isCurrentTimeInRange(startTime, endTime) ? '영업중' : '영업 종료';\n\n  // console.log(store);\n\n\n\n  return (\n    <>\n    <Link to={'/market/detail'}\n      state= {store}\n      className={styles.storeHomeItemDetailBoxMore}>\n      <Card style={{ width: '18rem' }}>\n        <img className={styles.storeHomeItemBoss} variant=\"top\" src=\"/images/boss.png\" />\n        <div className={styles.storeHomeItemHeader}>\n          <p className={styles.storeHomeItemTitle}>{store.storeName}</p>\n          <p className={styles.storeHomeItemBoxReview}>\n            <img className={styles.storeHomeItemFresh}src=\"/images/fresh.png\"/>5.0\n          </p>\n        </div>\n        <div>\n        <p className={styles.storeHomeItemBoxReview}>\n        <img className={styles.storeHomeItemStateIcon} src=\"/images/heart.png\"/>{isWorking}</p>\n        </div>\n        {/* <Button className={styles.storeHomeItemDetailBoxMore}>\n          <Link to=\"/\" variant=\"primary\">더보기</Link>\n        </Button> */}\n      </Card>\n    </Link>\n    </>\n  )\n}\n\nexport default StoreHomeItem;","/Users/nahyun/git/EEE/src/components/Market/StoreInfo.js",["410"],[],"// import React from 'react';\n// import Coupon from '../Coupon/Coupon'; \n\n// function StoreIntro({storeInfo, store, coupons }) {\n//   console.log(store);\n//   // console.log(storeInfo);\n\n//   return (\n//     <div style={outerContainer}>\n//     <div style={introContainer}>\n//       <img src={storeInfo.image} alt={storeInfo.name} style={imageStyle} />\n//      <div style={storeInfoContainer}>\n//       <h2>{store.storeName}</h2>\n//       <ul style={infoList}>\n//         <li>{store.storeDetailAddr}</li>\n//         <li>{store.weekdayStartTime} ~ {store.weekdayEndTime}</li>\n//         <li>{store.store}</li>\n//       </ul>\n//       </div>\n//       {/* <div style={couponContainer}>\n//         {coupons.map(coupon => (\n//           <Coupon key={coupon.id} coupon={coupon} />\n//         ))}\n//       </div> */}\n//     </div>\n//     </div>\n//   );\n// }\n\n// const outerContainer = {\n//   display: 'flex',\n//   justifyContent: 'center',\n//   alignItems: 'center',\n//   height: '50vh', // 화면 높이를 100%로 설정 (필요한 경우 조절)\n//   };\n\n// const introContainer = {\n//     display: 'flex',\n//     flexDirection: 'column', // children들을 열 방향으로 배열\n//     alignItems: 'center', // children들을 가운데 정렬\n//     backgroundColor: '#f0f0f0', // 연한 회색 배경\n//     padding: '0px',\n//     borderRadius: '8px', // 소프트한 테두리를 위한 둥근 모서리 추가\n//     textAlign: 'center',\n//     width : '70%',\n//     height: '100%'\n// };\n\n// const storeInfoContainer = {\n//     textAlign: 'left', \n//     padding: '20px',\n//     marginBottom: '50px', // 쿠폰 컨테이너와의 간격을 조절\n//     width : '100%',\n//   };\n\n// const imageStyle = {\n//   width: '100%',\n//   height: 'auto',\n//   objectFit: 'cover',\n// };\n\n// const infoList = {\n//   listStyleType: 'none',\n//   padding: '0',\n//   margin: '10px 0',\n// };\n\n\n// export default StoreIntro;\n\nimport React from 'react';\nimport Coupon from '../Coupon/Coupon'; \n\nfunction StoreIntro({storeInfo, store, coupons }) {\n\n  console.log('storeInfo,',storeInfo);\n  console.log('store,',store);\n  // console.log(storeInfo);\n\n  return (\n    <div style={outerContainer}>\n    <div style={introContainer}>\n      <img src={storeInfo.image} alt={storeInfo.name} style={imageStyle} />\n     <div style={storeInfoContainer}>\n      <h2>{store.storeName}</h2>\n      <ul style={infoList}>\n        <li>{store.storeDetailAddr}</li>\n        <li>{store.weekdayStartTime} ~ {store.weekdayEndTime}</li>\n        <li>{store.store}</li>\n      </ul>\n      </div>\n      {/* <div style={couponContainer}>\n        {coupons.map(coupon => (\n          <Coupon key={coupon.id} coupon={coupon} />\n        ))}\n      </div> */}\n    </div>\n    </div>\n  );\n}\n\nconst outerContainer = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '50vh', // 화면 높이를 100%로 설정 (필요한 경우 조절)\n  };\n\nconst introContainer = {\n    display: 'flex',\n    flexDirection: 'column', // children들을 열 방향으로 배열\n    alignItems: 'center', // children들을 가운데 정렬\n    backgroundColor: '#f0f0f0', // 연한 회색 배경\n    padding: '0px',\n    borderRadius: '8px', // 소프트한 테두리를 위한 둥근 모서리 추가\n    textAlign: 'center',\n    width : '70%',\n    height: '100%'\n};\n\nconst storeInfoContainer = {\n    textAlign: 'left', \n    padding: '20px',\n    marginBottom: '10px', // 쿠폰 컨테이너와의 간격을 조절\n    width : '100%',\n  };\n\nconst imageStyle = {\n  width: '100%',\n  height: 'auto',\n  objectFit: 'cover',\n};\n\nconst infoList = {\n  listStyleType: 'none',\n  padding: '0',\n  margin: '10px 0',\n};\n\n\nexport default StoreIntro;","/Users/nahyun/git/EEE/src/components/MainPage/Button.js",[],[],"/Users/nahyun/git/EEE/src/components/Review/ReviewSection.js",[],[],"/Users/nahyun/git/EEE/src/components/Coupon/Coupon.js",[],[],"/Users/nahyun/git/EEE/src/components/Review/ReviewList.js",[],[],"/Users/nahyun/git/EEE/src/components/Menu/MenuRegisterationForm.js",["411"],[],"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios, { formToJSON } from 'axios';\nimport { sendAxiosRequest } from '../utility/common';\n\nfunction MenuRegisterationForm() {\n  const [menu, setMenu] = useState({\n    menuImage: null,\n    menuName: '',\n    menuSize: '',\n    menuPrice: '',\n    menuContent: '',\n  });\n\n  const [previewImage, setPreviewImage] = useState(null); // 이미지 미리보기 URL\n\n  const handleImageChange = (e) => {\n    const file = e.target.files[0];\n    if (!file) {\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      // 이미지 파일 데이터를 상태에 저장하고 미리보기 설정\n      setMenu({ ...menu, menuImage: file });\n      setPreviewImage(reader.result);\n    };\n    reader.readAsDataURL(file);\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setMenu({ ...menu, [name]: value });\n  };\n\n\n  const navigate = useNavigate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    let formData = new FormData(e.target);\n    let formObj = formToJSON(formData);\n    sendAxiosRequest('/api/menu/new', 'POST', formObj, response => {\n      console.log('메뉴 응답값:', response.data);\n      alert('메뉴등록에 성공하셨습니다!');\n      navigate('/menuEdit');\n    },\n      error => {\n        console.error('API 호출 중 에러 발생: ', error);\n        alert('메뉴등록에 실패하셨습니다!');\n      }\n    )\n  };\n\n  return (\n    <div style={styles.container}>\n      <form onSubmit={handleSubmit} style={styles.form}>\n      <h2>메뉴 등록</h2>\n        <div>\n          <label>메뉴 이미지:</label>\n          <input style={styles.input} type=\"file\" onChange={handleImageChange} />\n          {previewImage && (\n            <div>\n              <h3>이미지 미리보기:</h3>\n              <img src={previewImage} alt=\"미리보기\" style={{ height: '100px' }} /> {/* 미리보기 이미지 크기는 조절 가능 */}\n            </div>\n          )}\n        </div>\n        <div>\n          <label>메뉴 이름:</label>\n          <input style={styles.input} type=\"text\" name=\"menuName\" value={menu.menuName} onChange={handleChange} />\n        </div>\n        <div>\n          <label>메뉴 사이즈:</label>\n          <input style={styles.input} type=\"text\" name=\"menuSize\" value={menu.menuSize} onChange={handleChange} />\n        </div>\n        <div>\n          <label>메뉴 가격:</label>\n          <input style={styles.input} type=\"number\" name=\"menuPrice\" value={menu.menuPrice} onChange={handleChange} />\n        </div>\n        <div>\n          <label>메뉴 설명:</label>\n          <textarea name=\"menuContent\" value={menu.menuContent} onChange={handleChange} />\n        </div>\n        <button type=\"submit\" style={styles.submitButton}>메뉴 등록</button>\n      </form>\n    </div>\n  );\n}\n\nconst styles = {\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '30vh',\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center', // 폼 내용을 중앙 정렬합니다.\n    padding: '20px',  // 내부 패딩을 추가합니다.\n    borderRadius: '12px',  // 모서리를 둥글게 합니다.\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2)', // 약간의 그림자 효과를 추가합니다.\n    background: 'white', // 배경색을 흰색으로 설정합니다.\n    width: '800px', \n  },\n  input: {\n    padding: '10px',\n    margin: '5px 0',\n    borderRadius: '6px',\n    border: '1px solid #ccc',\n    outline: 'none',\n    width: '300px', \n  },\n  submitButton: {\n    padding: '10px 20px',\n    cursor: 'pointer',\n    backgroundColor: '#0575E6',\n    border: 'none',\n    borderRadius: '8px',\n    color: 'white',\n  },\n}\n\n\nexport default MenuRegisterationForm;\n","/Users/nahyun/git/EEE/src/components/Notice/NoticeList.js",["412","413"],[],"import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\n//import Announce from '/components/MainPage/Announce';\nimport NoticeListItem from './NoticeListItem';\nimport { Routes, Route } from 'react-router-dom';\nimport styles from './NoticeList.css'\n\n\nfunction NoticeList() {\n\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    axios.get('/api/notice')\n      .then(response => setData(response.data))\n      .catch(error => console.log(error));\n      // console.log(data);\n  }, []);\n\n  return (\n    <>\n    <div className={styles.storeListBox}>\n      <NoticeListItem data={data}/>\n    </div>\n    </>\n  )\n}\n\nexport default NoticeList;","/Users/nahyun/git/EEE/src/components/Notice/NoticeDetail.js",["414"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useParams } from 'react-router-dom';\n\nfunction NoticeDetail() {\n  const [notice, setNotice] = useState({});\n  const { noticeNo } = useParams();\n\n  useEffect(() => {\n    axios.get(`/api/notice/detail/${noticeNo}`)\n      .then(response => setNotice(response.data))\n      .catch(error => console.log(error));\n  }, [noticeNo]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"top-controls\"></div>\n      <div style={{ padding: \"0 12px\" }}>\n        <table className=\"board_list text-center\">\n          <colgroup>\n            <col width=\"20%\" />\n            <col width=\"80%\" />\n          </colgroup>\n          <thead>\n          <tr>\n          <th>제목</th>\n          <td className=\"text-left\">{notice.noticeTitle}</td>\n          </tr>\n          <tr>\n          <th>내용</th>\n          <td>{notice.noticeContent}</td>\n          </tr>\n          </thead>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default NoticeDetail;\n","/Users/nahyun/git/EEE/src/components/Notice/NoticeListItem.js",[],[],"/Users/nahyun/git/EEE/src/components/Chat/Chat.js",["415","416"],[],"import React, { useState, useRef, useEffect } from 'react';\nimport { MessageBox, ChatList } from 'react-chat-elements';\nimport 'react-chat-elements/dist/main.css';\nimport axios from 'axios';\n\nconst Chat = ({ closeModal }) => {\n    const [chatMessage, setChatMessage] = useState('');\n    const [response, setResponse] = useState('');\n    const [messages, setMessages] = useState([]);\n    const chatContainerRef = useRef(null);\n\n    const handleMessage = async () => {\n        try {\n            const response = await axios.post('/api/chat/message', chatMessage, {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n\n            setMessages((prevMessages) => [\n                ...prevMessages,\n                {\n                    position: 'right',\n                    type: 'text',\n                    text: chatMessage,\n                    date: new Date(),\n                },\n                {\n                    position: 'left',\n                    type: 'text',\n                    text: response.data,\n                    date: new Date(),\n                },\n            ]);\n\n            setResponse(response.data);\n            setChatMessage('');\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    };\n\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            handleMessage();\n        }\n    };\n\n    useEffect(() => {\n        chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }, [messages]);\n\n    const handleOutsideClick = (e) => {\n        if (e.target.classList.contains('chat-modal-container')) {\n            closeModal();\n        }\n    };\n\n    return (\n        <div\n            className=\"chat-modal-container\"\n            style={{\n                position: 'fixed',\n                top: 0,\n                left: 0,\n                width: '100%',\n                height: '100%',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                zIndex: 9999,\n            }}\n            onClick={handleOutsideClick}\n        >\n            <div\n                style={{\n                    backgroundColor: '#2F80ED',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    padding: '20px',\n                    maxWidth: '600px',\n                    width: '70%',\n                    borderRadius: '20px',\n                    position: 'relative',\n                    maxHeight: '100%',\n                    overflow: 'auto',\n                }}\n            >\n                <ChatList\n                    className=\"chat-list\"\n                    dataSource={[\n                        {\n                            avatar: 'https://www.pngfind.com/pngs/m/676-6764066_fish-cartoon-images-fish-logo-png-transparent-png.png',\n                            alt: 'Fish',\n                            title: 'BA_ChatBot',\n                            subtitle: '무엇이든 물어보세요',\n                            date: new Date(),\n                            unread: 0,\n                        },\n                    ]}\n                    style={{ marginBottom: '20px' }}\n                />\n                <div\n                    ref={chatContainerRef}\n                    style={{ flex: '1', overflowY: 'auto', marginTop: '10px' }}\n                >\n                    {messages.map((message, index) => (\n                        <MessageBox\n                            key={index}\n                            position={message.position}\n                            type={message.type}\n                            text={message.text}\n                            date={message.date}\n                            avatar={\n                                message.position === 'left'\n                                    ? 'https://www.pngfind.com/pngs/m/676-6764066_fish-cartoon-images-fish-logo-png-transparent-png.png'\n                                    : null\n                            }\n                            text={message.text}\n                            title={message.position === 'left' ? 'BA_ChatBot' : 'You'}\n                            titleColor={message.position === 'left' ? '#FFFFFF' : '#4CAF50'}\n                            textFontSize={16}\n                            textFontColor=\"#333\"\n                            style={{\n                                backgroundColor: message.position === 'left' ? '#FFFFFF' : '#DCF8C6',\n                                borderRadius: message.position === 'left' ? '0px 10px 10px 10px' : '10px 0px 10px 10px',\n                                padding: '10px 15px',\n                                maxWidth: '70%',\n                                alignSelf: message.position === 'left' ? 'flex-start' : 'flex-end',\n                                marginBottom: 10,\n                            }}\n                        />\n                    ))}\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center', marginTop: '20px' }}>\n                    <input\n                        type=\"text\"\n                        value={chatMessage}\n                        onChange={(e) => setChatMessage(e.target.value)}\n                        onKeyPress={handleKeyPress}\n                        style={{ flex: '1', padding: '15px', borderRadius: '30px', border: 'none', fontSize: '16px' }}\n                        placeholder=\"메시지를 입력하세요...\"\n                    />\n                    <button\n                        onClick={handleMessage}\n                        style={{\n                            marginLeft: '10px',\n                            padding: '15px 25px',\n                            borderRadius: '30px',\n                            border: 'none',\n                            backgroundColor: '#4CAF50',\n                            color: '#fff',\n                            cursor: 'pointer',\n                            fontSize: '16px',\n                        }}\n                    >\n                        보내기\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Chat;\n","/Users/nahyun/git/EEE/src/components/Market/StoreList.js",["417","418","419","420","421","422","423","424","425"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Announce from '../MainPage/Announce';\nimport Coupon from '../MainPage/Announce';\nimport Category from '../MainPage/Category';\nimport StoreListItem from './StoreListItem';\nimport StoreHome from '../StoreHome';\nimport { Routes, Route } from 'react-router-dom';\nimport { isOpenNow, sendAxiosRequest, scrollMoveTop } from '../utility/common';\nimport styles from './StoreList.module.css'\n\nfunction StoreList() {\n  const pageRowCnt = 3;\n  let [startPageNo, setStartPageNo] = useState(0);\n  let [storeList, setStoreList] = useState([]);\n  let [newAddLength, setNewAddLength] = useState(pageRowCnt);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      console.log(newAddLength);\n      if (newAddLength < pageRowCnt) {\n        return;\n      }\n      if (\n        window.innerHeight + document.documentElement.scrollTop >=\n        document.documentElement.scrollHeight - 100\n      ) {\n\n        console.log(\"스크롤 이벤트 핸들러 작동\");\n        sendAxiosRequest(`/api/store/list?startPage=${startPageNo}`, 'GET', null, response => {\n          console.log(response.data);\n          let addReviewList = response.data;\n          setNewAddLength(addReviewList.length);\n          let newReviewList = [...storeList, ...addReviewList];\n\n          setStartPageNo(Math.floor(newReviewList.length / pageRowCnt));\n          setStoreList(newReviewList);\n        }, error => console.log(error))\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    }\n  }, [startPageNo, storeList]);\n\n  useEffect(() => {\n    sendAxiosRequest(\"/api/store/list\", \"GET\", null,\n      response => {\n        console.log(response.data);\n        setStoreList(response.data);\n        setNewAddLength(response.data.length);\n        setStartPageNo(Math.floor(newAddLength / pageRowCnt));\n      }, error => console.log(error));\n  }, []);\n\n\n\n  return (\n    <>\n      <Announce />\n      <div className={styles.storeListBox}>\n        {storeList.map((store, index) => (\n          <StoreListItem key={index} data={store} />\n        ))}\n      </div>\n      <div id=\"topBtnDiv\" onClick={scrollMoveTop}>↑</div>\n    </>\n  )\n}\n\nexport default StoreList;","/Users/nahyun/git/EEE/src/components/MyPage/StoreItemRegister.js",["426","427","428","429","430","431","432"],[],"import '../utility/Common.css';\nimport React, { useState, useEffect } from 'react';\nimport { Form, Card, Button } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport axios, { formToJSON } from 'axios';\nimport { sendAxiosRequest, addEventToElements, removeEventToElements } from '../utility/common';\n\nfunction formatNumber(number) {\n  return number.toLocaleString();\n}\n\nfunction updateItemNames() {\n  const itemCodeSelect = document.getElementById(\"item_code\");\n  const itemNameSelect = document.getElementById(\"item_name\");\n\n  const selectedValue = itemCodeSelect.value;\n  const itemNames = itemNameSelect;\n\n  const options = {\n    'N': ['품목구분 항목을 먼저 선택해주세요.'],\n    'S': ['광어', '우럭', '도미', '방어', '전복', '참치', '연어', '가리비', '전갱이'],\n    'F': ['광어', '우럭', '도미', '방어', '전복', '참치', '연어', '가리비', '전갱이'],\n    'C': ['새우'],\n    'M': ['가리비', '오징어'],\n    'E': ['기타']\n  };\n\n  itemNames.innerHTML = '';\n  options[selectedValue].forEach(fishName => {\n    const option = document.createElement('option');\n    option.value = fishName;\n    option.textContent = fishName;\n    itemNames.appendChild(option);\n  });\n}\n\n\nfunction updateOriginStatus() {\n  const originStatusSelects = document.querySelectorAll(\"[name=originStatus]\");\n  const originPlaceStatusSelect = document.getElementById(\"originPlaceStatus\");\n\n  let selectedValue;\n  originStatusSelects.forEach(input => {\n    if (input.checked) {\n      selectedValue = input.value;\n    }\n  })\n\n\n  const originPlaceNames = originPlaceStatusSelect;\n\n  const options = {\n    'D': ['동해', '서해', '남해', '제주', '완도', '기타'],\n    'I': ['일본', '중국', '러시아', '노르웨이', '기타']\n  };\n\n  originPlaceNames.innerHTML = '';\n  options[selectedValue].forEach(region => {\n    const option = document.createElement('option');\n    option.value = region;\n    option.textContent = region;\n    originPlaceNames.appendChild(option);\n  });\n}\nfunction StoreItemRegister() {\n  const [dailyPrice, setDailyPrice] = useState(''); // 사용자 입력을 저장할 상태\n  const [minPrice] = useState(1000); // 최소가격\n  const [maxPrice] = useState(1000000); // 최대가격\n\n  function handleDailyPriceChange(event) {\n    let inputNumber = parseInt(event.target.value.replace(/,/g, ''), 10);\n\n    // 최소 및 최대 값 적용\n    if (isNaN(inputNumber) || inputNumber < minPrice) {\n      inputNumber = minPrice;\n    } else if (inputNumber > maxPrice) {\n      inputNumber = maxPrice;\n    }\n\n    setDailyPrice(formatNumber(inputNumber));\n  }\n  // useEffect 내에서 updateItemNames를 호출\n  useEffect(() => {\n    const itemCodeSelect = document.getElementById(\"item_code\");\n    const originStatusSelects = document.querySelectorAll(\"[name=originStatus]\");\n\n    itemCodeSelect.addEventListener('change', updateItemNames);\n    addEventToElements('change', updateOriginStatus, originStatusSelects);\n\n    return () => {\n      itemCodeSelect.removeEventListener('change', updateItemNames);\n      removeEventToElements('change', updateOriginStatus, originStatusSelects);\n    };\n  }, []);\n\n\n\n  return (\n\n    <div className='ba-cursor-pointer-div'>\n      <form className='ba-form-container'>\n        <table>\n          <thead>\n            <tr>\n              <th colSpan=\"2\">품목 시세등록 </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th><label htmlFor=\"daliy_price_date\">기준날짜</label></th>\n              <td>\n                <input type='date' name='daliy_price_date' />\n              </td>\n            </tr>\n            <tr>\n              <th><label htmlFor=\"item_code\">품목구분</label></th>\n              <td>\n                <select name='item_code' id=\"item_code\">\n                  <option selected value=\"N\">선택안함</option>\n                  <option value=\"S\">생선(횟감)</option>\n                  <option value=\"F\">생선(비횟감)</option>\n                  <option value=\"C\">갑각류</option>\n                  <option value=\"M\">패류</option>\n                  <option value=\"E\">기타</option>\n                </select>\n              </td>\n            </tr>\n            <tr>\n              <th><label htmlFor=\"item_name\">품목</label></th>\n              <td>\n                <select name='item_name' id=\"item_name\">\n                  {/* <option selected>품목구분 항목을 먼저 선택해주세요.</option> */}\n                </select>\n              </td>\n            </tr>\n            <tr>\n              <th><label>크기</label></th>\n              <td>\n                <label htmlFor=\"sizeS\">\n                  <input type=\"radio\" id=\"sizeS\" name=\"itemSize\" value=\"S\" /> 소\n                </label>\n                <label htmlFor=\"sizeM\">\n                  <input type=\"radio\" id=\"sizeM\" name=\"itemSize\" value=\"M\" /> 중\n                </label>\n                <label htmlFor=\"sizeL\">\n                  <input type=\"radio\" id=\"sizeL\" name=\"itemSize\" value=\"L\" /> 대\n                </label>\n              </td>\n            </tr>\n            <tr>\n              <th><label>원산지</label></th>\n              <td>\n                <label htmlFor=\"originD\">\n                  <input type=\"radio\" id=\"originD\" name=\"originStatus\" value=\"D\" /> 국내산\n                </label>\n                <label htmlFor=\"originI\">\n                  <input type=\"radio\" id=\"originI\" name=\"originStatus\" value=\"I\" /> 수입산\n                </label>\n              </td>\n            </tr>\n            <tr>\n              <th><label htmlFor=\"originPlaceStatus\">지역명</label></th>\n              <td>\n                <select name=\"originPlaceStatus\" id=\"originPlaceStatus\">\n                  <option selected>원산지 항목을 먼저 선택해주세요.</option>\n                </select>\n              </td>\n            </tr>\n            <tr>\n              <th><label>자연산/양식</label></th>\n              <td>\n                <label htmlFor=\"wild_farm_statusW\">\n                  <input type=\"radio\" id=\"wild_farm_statusW\" name=\"wild_farm_status\" value=\"W\" /> 자연산\n                </label>\n                <label htmlFor=\"wild_farm_statusF\">\n                  <input type=\"radio\" id=\"wild_farm_statusF\" name=\"wild_farm_status\" value=\"F\" /> 양식\n                </label>\n              </td>\n            </tr>\n            <tr>\n              <th><label>금일가격</label></th>\n              <td>\n                <label htmlFor=\"daily_price\">\n                  <input type=\"text\" id=\"daily_price\" name=\"daily_price\" value={dailyPrice}\n                    onChange={handleDailyPriceChange} />(원)\n                </label>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <button type=\"button\" className='ba-btn ba-margin-tb50'>품목등록</button>\n      </form>\n    </div >\n\n  );\n}\n\n\n\n\nexport default StoreItemRegister;","/Users/nahyun/git/EEE/src/components/StoreItemDailyPrice/StoreItemAdd.js",["433","434","435"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { sendAxiosRequest } from '../utility/common';\nimport './StoreItemAdd.css';\nimport { useNavigate } from 'react-router-dom';\n\n\nfunction StroeItemAdd() {\n\n  const [fish, setFish] = useState('');\n  const [code, setCode] = useState('');\n  const [size, setSize] = useState('');\n  const [origin, setOrigin] = useState('');\n  const [place, setPlace] = useState('');\n  const [wild, setWild] = useState('');\n\n  const handleCode = () => {\n    setCode(\n      (fish === '광어'||'우럭'||'도미'||'방어'||'참치') ? 'S' :\n      (fish === '연어') ? 'F' :\n      (fish === '오징어') ? 'E' :\n      (fish === '새우') ? 'C' :\n      (fish === '가리비'||'전복') ? 'M' : '')\n    }\n\n  const handleSize = (e) => {\n    setSize(e.target.value)\n  }\n\n  const itemSize = \n  Number(size) >= 3 ? 'L' :\n  Number(size) >= 2 ? 'M' : 'S'\n  \n\n  const fishs = {\n    '광어': 1,\n    '우럭': 2,\n    '도미': 3,\n    '방어': 4,\n    '참치': 5,\n    '연어': 6,\n    '오징어': 7,\n    '새우': 8,\n    '가리비': 9,\n    '전복': 10\n  }\n\n  const codes = {\n    S: '생선/횟감',\n    F: '생선/비횟감',\n    C: '갑각류',\n    M: '패류',\n    E: '기타',\n  };\n\n  const DPlace = {\n    ES: '동해',\n    WS: '서해',\n    SS: '남해',\n    JJ: '제주',\n    WD: '완도'\n  }\n\n  const IPlace = {\n    JP: '일본',\n    CN: '중국',\n    RU: '러시아',\n    NW: '노르웨이'\n  }\n\n  const selectPlace = \n  (origin === \"D\") ? DPlace : \n  (origin === \"I\") ? IPlace : null;\n\n  const hiddenButtons = \n  (selectPlace !== null) ?\n    Object.keys(selectPlace).map((code) => (\n      <button\n        key={code}\n        className={place === code ? 'selected' : ''}\n        onClick={() => setPlace(code)}\n      >\n        {selectPlace[code]}\n      </button>\n    ))\n    : null;\n  \n  const navigate = useNavigate();\n  \n  const handleSubmit = () => {\n    console.log('dddd');\n    sendAxiosRequest ('/api/item/new', 'POST', item, response => {\n      console.log(response.data);\n      console.log(item);\n      navigate('/');\n    }, error => {\n      console.log(error);\n    });\n\n  };\n\n  const item = {\n    'itemName': fish,\n    'itemCode': code,\n    'itemSize': itemSize,\n    'originStatus': origin,\n    'originPlaceStatus': place,\n    'wildFarmStatus': wild\n  }\n\n\n\n\n  return (\n    <>\n      <p>품목 선택</p>\n      <div className=\"freezer_box\">\n      {\n        Object.keys(fishs).map((name) => (\n          <div key={name}\n            className={fish === name ? 'selected' : 'not_selected'} \n            onClick={() => {setFish(name); handleCode()}}>\n            <img src={`/images/fish${fishs[name]}.jpg`} alt={name} className='fish_image'/>\n            <p>{name}</p>\n          </div>\n        ))\n      }\n      </div>\n\n      <div className='fish_size'>\n        <p>무게 입력</p>\n        <div>\n          <input\n              type=\"text\"\n              value={size}\n              onChange={handleSize}\n              placeholder=\"예) 2.5\"\n            />\n        </div>\n      </div>\n      \n      <div className=\"fish_origin\">\n        <p>원산지</p>\n        \n        <div className=\"origin_buttons\">\n          <button className={origin === 'D' ? 'selected' : ''}\n            onClick={() => setOrigin('D')}>국내산</button>\n          <button className={origin === 'I' ? 'selected' : ''}\n            onClick={() => setOrigin('I')}>수입산</button>\n        </div>\n\n      </div>\n\n      <div className='fish_place'>\n        \n\n        <div className=\"filter_buttons\">\n          {hiddenButtons}\n        </div>\n      </div>\n\n      <div className='fish_origin'>\n        <p>자연산 / 양식</p>\n\n        <div className=\"origin_buttons\">\n          <button className={wild === 'W' ? 'selected' : ''}\n            onClick={() => setWild('W')}>자연산</button>\n          <button className={wild === 'F' ? 'selected' : ''}\n            onClick={() => setWild('F')}>양식</button>\n        </div>\n\n      </div>\n\n      <div className='fish_origin'>\n        <div className=\"origin_buttons\">\n        <button onClick={handleSubmit}>제출하기</button>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default StroeItemAdd;","/Users/nahyun/git/EEE/src/components/Pay/Pay.js",["436","437","438","439"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n// import swal from 'sweetalert';\n// import { response } from 'express';\n// import { error } from 'console';\n\nconst Payment = () => {\n  useEffect(() => {\n    const jquery = document.createElement(\"script\");\n    jquery.src = \"http://code.jquery.com/jquery-1.12.4.min.js\";\n    const iamport = document.createElement(\"script\");\n    iamport.src = \"https://cdn.iamport.kr/v1/iamport.js\";\n    document.head.appendChild(jquery);\n    document.head.appendChild(iamport);\n    return () => {\n      document.head.removeChild(jquery);\n      document.head.removeChild(iamport);\n    };\n  }, []);\n\n  function sendAxiosRequest(url, method, params, successCallback, errorCallback) {\n    console.log(url);\n    const axiosConfig = {\n      timeout: 5000,\n      url: url,\n      method: method,\n    };\n    if (params != null)\n      axiosConfig.params = params;\n    axios(axiosConfig).then(successCallback).catch(errorCallback);\n  }\n\n  const memberNo = 1;\n  const payNo = 1;\n  const orderNo = 1;\n  const [member, setMember] = useState(null);\n  const [pay, setPay] = useState(null);\n  const [order, setOrder] = useState(null);\n\n  useEffect(() => {\n    // Fetch member data\n    sendAxiosRequest(`/api/member/${memberNo}`, 'GET', null,\n      response => {\n\n        console.log('Member data:', response.data);\n        setMember(response.data); // Update member state\n      },\n      error => {\n        console.error('Error fetching member data:', error);\n      }\n    );\n\n    // Fetch order data\n    sendAxiosRequest(`/api/order/detail/${orderNo}`, 'GET', null,\n      response => {\n        console.log('Order data:', response.data);\n        setOrder(response.data); // Update order state\n      },\n      error => {\n        console.error('Error fetching order data:', error);\n      }\n    );\n  }, []); // Empty dependency array to ensure this effect runs only once\n\n  const requestPay = () => {\n    console.log('memberState', member);\n    console.log('orderState', order);\n\n    const { IMP } = window;\n    const buyerEmail = member ? member.memberEmail : '';\n    const buyerName = member ? member.memberName : '';\n    const buyerTel = member ? member.memberPhone : '';\n    const name = order ? order.orderNo : '';\n    const buyerAddr = order ? order.resipientAddr : '';\n    const buyerPostcode = order ? order.resipientZipcode : '';\n    const amount = order.orderPrice;\n\n    IMP.init('imp11340204');\n\n    IMP.request_pay({\n      pg: 'kakaopay.TC0ONETIME',\n      pay_method: 'card',\n      merchant_uid: new Date().getTime(),\n      name: name,\n      amount: amount,\n      buyer_email: buyerEmail,\n      buyer_name: buyerName,\n      buyer_tel: buyerTel,\n      buyer_addr: buyerAddr,\n      buyer_postcode: buyerPostcode,\n    }, async (rsp) => {\n      console.log('rsp: ', rsp);\n      try {\n        const { data } = await axios.post('/api/pay/verifyIamport/' + rsp.imp_uid);\n        if (rsp.paid_amount === amount) {\n          alert('결제 성공!');\n          const testPay = {\n            // \"payType\": \"C\",\n            // \"orderStatus\": \"Y\",\n            // \"payNo\": 123,\n            orderNo: order.orderNo,\n            payPrice: amount,\n            payStatus: rsp.success ? 'Y' : 'N'\n            // \"payDatetime\": \"2023-10-18T12:34:56\",  // 예: ISO 8601 형식의 날짜 및 시간\n            // \"payCancelDatetime\": \"2023-10-18T14:45:00\"  // 예: ISO 8601 형식의 날짜 및 시간\n          }\n\n          console.log('testPay.payStatus: ', testPay.payStatus);\n\n          axios.post('/api/pay/createPayment', testPay, {\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          })\n            .then(response => {\n              console.log('Pay data:', response.data);\n              setPay(response.data);\n            })\n            .catch(error => {\n              console.error('Error fetching pay data:', error);\n            });\n\n        } else if (rsp.paid_amount == amount) {\n          alert('결제 성공?');\n        } else {\n          alert('결제 실패?');\n        }\n      } catch (error) {\n        console.error('Error while verifying payment:', error);\n        alert('결제 실패');\n      }\n    });\n  };\n\n  return (\n    <div>\n      <button onClick={requestPay}>결제하기</button>\n    </div>\n  );\n};\n\nexport default Payment;\n\n","/Users/nahyun/git/EEE/src/components/MyPage/MenuEdit.js",["440","441","442","443","444","445"],[],"import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { sendAxiosRequest } from '../utility/common';\nimport axios, { formToJSON } from 'axios';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router-dom'; // 만약 react-router-dom을 사용한다면 이 부분을 추가합니다.\n\n\nfunction MenuEdit() {\n  const [menuData, setMenuData] = useState([]); // 메뉴 데이터를 저장할 상태\n  const { menuNo } = useParams(); // 현재 URL의 매개변수를 가져옵니다.\n  const navigate = useNavigate();\n  const location = useLocation(); // 추가된 부분\n  const store = location.state; // 추가된 부분\n  console.log(store);\n\n\n  // useEffect(() => {\n  //   axios.get(`/api/menu/${storeNo}`)\n  //     .then(response => {\n  //       setMenus(response.data);\n  //     })\n  //     .catch(error => {\n  //       console.error('Error fetching data: ', error);\n  //     });\n  // }, [storeNo]);\n\n  // useEffect(() => {\n  //   if (store && store.storeNo) {\n  //     // 상점 번호가 있는 경우에만 요청을 실행합니다.\n  //     sendAxiosRequest(`/api/menu/${store.storeNo}`, 'GET', null, response => {\n  //       if (response.data && response.data.length > 0) {\n  //         console.log(response.data);\n  //         setMenuData(response.data); // 받아온 데이터로 상태를 업데이트합니다.\n  //       }\n  //     }, error => {\n  //       console.error(\"An error occurred while fetching the menus:\", error);\n  //     });\n  //   }\n  // }, [store])\n\n  useEffect(() => {\n    // 상점 번호가 설정되어 있는 경우에만 메뉴 데이터를 요청합니다.\n    const fetchMenus = async () => {\n      try {\n        const response = await axios.get('/api/menu/my-menus'); // 세션을 기반으로 한 요청\n        if (response.data) {\n          console.log(response.data);\n          setMenuData(response.data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching user's menus:\", error);\n      }\n    };\n  \n    fetchMenus();\n  }, []); \n  \n\n\n  const handleDeleteMenu = (menuNo) => {\n    axios.post(`/api/menu/delete/${menuNo}`,)\n      .then(() => {\n        alert('메뉴가 삭제 되었습니다.');\n        console.log(\"menuData:\",menuData);\n        setMenuData(menuData.filter(menu => menu.menuNo !== menuNo)); // 삭제 후 상태 업데이트\n      })\n      .catch(error => {\n        console.error(\"Error deleting menu: \", error);\n      });\n  };\n\n\nconst renderMenus = menuData.map(menu => (\n  <div key={menu.menuNo} style={menuItemStyle}>\n    <h2 style={menuItemTitle}>{menu.menuName}</h2>\n\n    <p>사이즈: {menu.menuSize}</p>\n    <p>가격: {menu.menuPrice}</p>\n    <p>내용: {menu.menuContent}</p>\n    <div style={menuActions}>\n      <button onClick={() => handleDeleteMenu(menu.menuNo)}>삭제</button>\n      <Link \n        to={{\n          pathname: \"/MenuDetail\", // 수정할 메뉴의 상세 정보 페이지 경로\n          state: { detailMenu: menu } // 현재 메뉴의 데이터\n        }}\n      >      \n      <button>수정하기</button>\n    </Link>\n      {/* 추가적인 액션 버튼들이 위치할 수 있습니다. */}\n    </div>\n  </div>\n));\n\nreturn (\n  <div style={containerStyle}>\n    <Link to=\"/MenuRegisterationForm\" style={registerButtonLink}>\n      <button>메뉴 등록하기</button>\n    </Link>\n    <div style={menuList}>{renderMenus}</div>\n  </div>\n);\n}\n\n// 스타일 섹션\nconst containerStyle = {\npadding: '20px',\nmaxWidth: '800px', // 조금 더 좁은 컨테이너\nmargin: '0 auto',\n};\n\nconst menuList = {\nmarginTop: '20px',\n};\n\nconst menuItemStyle = {\nborderBottom: '1px solid #ddd', // 각 메뉴 아이템 아래에 구분선 추가\npadding: '10px 0',\n};\n\nconst menuItemTitle = {\nmargin: '0 0 10px 0',\nfontSize: '1.5em',\n};\n\nconst menuActions = {\nmarginTop: '10px',\n};\n\nconst deleteButton = {\nbackground: '#4169e1', \ncolor: '#fff',\nborder: 'none',\npadding: '5px 10px',\nborderRadius: '5px',\ncursor: 'pointer',\n};\n\nconst registerButtonLink = {\ndisplay: 'block',\ntextAlign: 'right',\nmarginBottom: '20px',\n};\n\nconst registerButton = {\nbackground: '#4169e1', \ncolor: 'white',\npadding: '10px 20px',\ntextDecoration: 'none',\nborderRadius: '5px',\ncursor: 'pointer',\n};\n\nexport default MenuEdit;\n","/Users/nahyun/git/EEE/src/components/Admin/AdminNoticeList.js",["446","447"],[],"import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\n//import Announce from '/components/MainPage/Announce';\nimport AdminNoticeListItem from './AdminNoticeListItem';\nimport { Routes, Route } from 'react-router-dom';\nimport styles from '../Notice/NoticeList.css'\n\n\nfunction AdminNoticeList() {\n\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    axios.get('/api/notice')\n      .then(response => setData(response.data))\n      .catch(error => console.log(error));\n      // console.log(data);\n  }, []);\n  \n\n  return (\n    <>\n    <div className={styles.storeListBox}>\n      <AdminNoticeListItem data={data}/>\n    </div>\n    </>\n  )\n}\n\nexport default AdminNoticeList;","/Users/nahyun/git/EEE/src/components/Admin/AdminNoticeDetail.js",[],[],"/Users/nahyun/git/EEE/src/components/Admin/NoticeRegisterationForm.js",["448"],[],"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios, { formToJSON } from 'axios';\nimport { sendAxiosRequest } from '../utility/common';\n\nfunction NoticeRegisterationForm() {\n  const [notice, setNotice] = useState({\n    noticeTitle: 'title',\n    noticeContent: 'content',\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setNotice({ ...notice, [name]: value });\n  };\n\n\n  const navigate = useNavigate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    let formData = new FormData(e.target);\n    let formObj = formToJSON(formData);\n    sendAxiosRequest('/api/notice/new', 'POST', formObj, response => {\n      console.log('응답값:', response.data);\n      alert('공지사항이 등록 되었습니다.');\n      navigate('/admin/notice/list');\n    },\n      error => {\n        console.error('API 호출 중 에러 발생: ', error);\n        alert('공지사항 등록에 실패하셨습니다!');\n      }\n    )\n  };\n\n  return (\n    <div style={styles.container}>\n      <form onSubmit={handleSubmit} style={styles.form}>\n      <h2>공지사항 등록</h2>\n        <div>\n          <label>제목 </label>\n          <input style={styles.input} type=\"text\" name=\"noticeTitle\" value={notice.noticeTitle} onChange={handleChange} />\n        </div>\n        <div>\n          <label>내용 </label>\n          <input style={styles.input} type=\"text\" name=\"noticeContent\" value={notice.noticeContent} onChange={handleChange} />\n        </div>\n        <button type=\"submit\" style={styles.submitButton}>등록</button>\n      </form>\n    </div>\n  );\n}\n\nconst styles = {\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '30vh',\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center', // 폼 내용을 중앙 정렬합니다.\n    padding: '20px',  // 내부 패딩을 추가합니다.\n    borderRadius: '12px',  // 모서리를 둥글게 합니다.\n    boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2)', // 약간의 그림자 효과를 추가합니다.\n    background: 'white', // 배경색을 흰색으로 설정합니다.\n    width: '800px',\n  },\n  input: {\n    padding: '10px',\n    margin: '5px 0',\n    borderRadius: '6px',\n    border: '1px solid #ccc',\n    outline: 'none',\n    width: '300px',\n  },\n  submitButton: {\n    padding: '10px 20px',\n    cursor: 'pointer',\n    backgroundColor: '#0575E6',\n    border: 'none',\n    borderRadius: '8px',\n    color: 'white',\n  },\n}\n\n\nexport default NoticeRegisterationForm;\n","/Users/nahyun/git/EEE/src/components/Admin/AdminNoticeListItem.js",[],[],"/Users/nahyun/git/EEE/src/components/MyPage/MenuDetail.js",["449"],[],"import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n// import { sendAxiosMultipartRequest, sendAxiosRequest } from '../utility/common';\nimport { useLocation } from 'react-router-dom';\n\n\nfunction MenuDetail() {\n\n\n  const { menuNo } = useParams();\n  const [editedName, setEditedName] = useState('');\n  const [editedSize, setEditedSize] = useState('');\n  const [editedPrice, setEditedPrice] = useState('');\n  const [editedContent, setEditedContent] = useState('');\n  const [menu, setMenu] = useState(null);\n  \n  // 만약 menuNo가 undefined라면, 잘못된 요청을 보내고 있을 수 있습니다.\nconsole.log('보내기 전 menuNo 확인:', menuNo);\n\n\n  useEffect(() => {\n      axios.get(`/api/menu/detail/${menuNo}`)\n      .then(response => {\n\n        console.log('응답 데이터:', response.data); \n          setMenu(response.data);\n          setEditedName(response.data.menuName);\n          setEditedSize(response.data.menuSize);\n          setEditedPrice(response.data.menuPrice);\n          setEditedContent(response.data.menuContent);\n        })\n        .catch(error => console.log(error));\n    }, [menuNo]);\n    \n\n\n  const navigate = useNavigate();\n\n  const handleUpdateMenu = () => {\n    const formData = new FormData();\n    formData.append('menuName', editedName);\n    formData.append('menuSize', editedSize);\n    formData.append('menuPrice', editedPrice);\n    formData.append('menuContent', editedContent);\n    formData.append('menuNo',menuNo);\n\n    axios.post(`/api/menu/update/${menuNo}`, formData)\n      .then(response => {\n        console.log(\"Menu updated successfully: \", response.data);\n        alert('메뉴가 수정 되었습니다.');\n        navigate('/menuEdit');\n      })\n      .catch(error => console.error(\"Failed to update notice: \", error));\n  };\n\n  if (menu === null) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <div className=\"container\">\n        <div className=\"top-controls\"></div>\n        <div style={{ padding: \"0 12px\" }}>\n          <table className=\"board_list text-center\">\n            <colgroup>\n              <col width=\"20%\" />\n              <col width=\"80%\" />\n            </colgroup>\n            <thead>\n              <tr>\n                <th>메뉴</th>\n                <td>\n                  <input\n                    type=\"text\"\n                    value={editedName}\n                    onChange={(e) => setEditedName(e.target.value)}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <th>사이즈</th>\n                <td>\n                  <input\n                    type=\"text\"\n                    value={editedSize}\n                    onChange={(e) => setEditedSize(e.target.value)}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <th>가격</th>\n                <td>\n                  <input\n                    type=\"text\"\n                    value={editedPrice}\n                    onChange={(e) => setEditedPrice(e.target.value)}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <th>내용</th>\n                <td>\n                  <input\n                    type=\"text\"\n                    value={editedContent}\n                    onChange={(e) => setEditedContent(e.target.value)}\n                  />\n                </td>\n              </tr>\n              <button onClick={handleUpdateMenu}>수정하기</button>\n            </thead>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MenuDetail;","/Users/nahyun/git/EEE/src/components/Market/StoreInfoDetail.js",["450"],[],"\nimport React from 'react';\n\nfunction StoreInfoDetail({storeDetail}) {\n\n  console.log('storeDetail,',storeDetail);\n  // console.log(storeInfo);\n\n    // storeDetail아 null이거나 필요한 속성이 없으면 렌더링하지 않습니다.\n    if (!storeDetail) {\n        return <div>Loading...</div>; // 혹은 다른 대체 컨텐츠\n      }\n  return (\n    <div style={outerContainer}>\n    <div style={introContainer}>\n      {/* <img src={storeDetail.image} alt={storeDetail.name} style={imageStyle} /> */}\n     <div style={storeInfoContainer}>\n      <h2>{storeDetail.storeName}</h2>\n      <ul style={infoList}>\n        <li style={listItem}>시장 이름:{storeDetail.marketName}</li>\n        <li style={listItem}>기본 주소:{storeDetail.storeAddr}</li>\n        <li style={listItem}>상세 주소:{storeDetail.storeDetailAddr}</li>\n        <li style={listItem}>사업등록번호:{storeDetail.licenseNo}</li>\n        <li style={listItem}>운영시간:{storeDetail.weekdayStartTime} ~ {storeDetail.weekdayEndTime}</li>\n        <li style={listItem}>{storeDetail.store}</li>\n      </ul>\n      </div>\n      {/* <div style={couponContainer}>\n        {coupons.map(coupon => (\n          <Coupon key={coupon.id} coupon={coupon} />\n        ))}\n      </div> */}\n    </div>\n    </div>\n  );\n}\n\nconst outerContainer = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    // backgroundColor: '#f7f7f7', // 아주 연한 회색 배경으로 조정\n  };\n\nconst introContainer = {\n    display: 'flex',\n    flexDirection: 'column', // children들을 열 방향으로 배열\n    alignItems: 'center', // children들을 가운데 정렬\n    // backgroundColor: '#f0f0f0',// 연한 회색 배경\n    padding: '0px',\n    borderRadius: '8px', // 소프트한 테두리를 위한 둥근 모서리 추가\n    textAlign: 'center',\n    width : '70%',\n    height: '100%'\n};\n\nconst storeInfoContainer = {\n    textAlign: 'left', \n    padding: '20px',\n    marginBottom: '10px', // 쿠폰 컨테이너와의 간격을 조절\n    width : '100%',\n  };\n\nconst imageStyle = {\n//   width: '100%',\n//   height: 'auto',\n//   objectFit: 'cover',\n};\n\nconst infoList = {\n  listStyleType: 'none',\n  padding: '0',\n  margin: '10px 0',\n  fontSize: '25px', // larger font size\n\n};\n\nconst listItem = {\n    marginBottom: '10px',\n}\n\n\nexport default StoreInfoDetail;",{"ruleId":"451","replacedBy":"452"},{"ruleId":"453","severity":1,"message":"454","line":1,"column":28,"nodeType":"455","messageId":"456","endLine":1,"endColumn":36},{"ruleId":"453","severity":1,"message":"457","line":2,"column":8,"nodeType":"455","messageId":"456","endLine":2,"endColumn":13},{"ruleId":"453","severity":1,"message":"458","line":23,"column":8,"nodeType":"455","messageId":"456","endLine":23,"endColumn":20},{"ruleId":"453","severity":1,"message":"459","line":33,"column":10,"nodeType":"455","messageId":"456","endLine":33,"endColumn":26},{"ruleId":"453","severity":1,"message":"460","line":50,"column":10,"nodeType":"455","messageId":"456","endLine":50,"endColumn":14},{"ruleId":"461","severity":1,"message":"462","line":71,"column":6,"nodeType":"463","endLine":71,"endColumn":8,"suggestions":"464"},{"ruleId":"453","severity":1,"message":"465","line":11,"column":10,"nodeType":"455","messageId":"456","endLine":11,"endColumn":18},{"ruleId":"453","severity":1,"message":"466","line":4,"column":8,"nodeType":"455","messageId":"456","endLine":4,"endColumn":14},{"ruleId":"453","severity":1,"message":"467","line":5,"column":8,"nodeType":"455","messageId":"456","endLine":5,"endColumn":16},{"ruleId":"453","severity":1,"message":"468","line":7,"column":8,"nodeType":"455","messageId":"456","endLine":7,"endColumn":17},{"ruleId":"453","severity":1,"message":"469","line":8,"column":10,"nodeType":"455","messageId":"456","endLine":8,"endColumn":16},{"ruleId":"453","severity":1,"message":"470","line":8,"column":18,"nodeType":"455","messageId":"456","endLine":8,"endColumn":23},{"ruleId":"453","severity":1,"message":"471","line":5,"column":8,"nodeType":"455","messageId":"456","endLine":5,"endColumn":21},{"ruleId":"453","severity":1,"message":"469","line":7,"column":10,"nodeType":"455","messageId":"456","endLine":7,"endColumn":16},{"ruleId":"453","severity":1,"message":"470","line":7,"column":18,"nodeType":"455","messageId":"456","endLine":7,"endColumn":23},{"ruleId":"453","severity":1,"message":"457","line":2,"column":8,"nodeType":"455","messageId":"456","endLine":2,"endColumn":13},{"ruleId":"453","severity":1,"message":"457","line":3,"column":8,"nodeType":"455","messageId":"456","endLine":3,"endColumn":13},{"ruleId":"453","severity":1,"message":"472","line":4,"column":10,"nodeType":"455","messageId":"456","endLine":4,"endColumn":19},{"ruleId":"453","severity":1,"message":"473","line":31,"column":9,"nodeType":"455","messageId":"456","endLine":31,"endColumn":16},{"ruleId":"453","severity":1,"message":"474","line":1,"column":17,"nodeType":"455","messageId":"456","endLine":1,"endColumn":26},{"ruleId":"453","severity":1,"message":"457","line":2,"column":8,"nodeType":"455","messageId":"456","endLine":2,"endColumn":13},{"ruleId":"453","severity":1,"message":"475","line":6,"column":22,"nodeType":"455","messageId":"456","endLine":6,"endColumn":30},{"ruleId":"453","severity":1,"message":"474","line":1,"column":16,"nodeType":"455","messageId":"456","endLine":1,"endColumn":25},{"ruleId":"453","severity":1,"message":"454","line":1,"column":27,"nodeType":"455","messageId":"456","endLine":1,"endColumn":35},{"ruleId":"453","severity":1,"message":"457","line":2,"column":8,"nodeType":"455","messageId":"456","endLine":2,"endColumn":13},{"ruleId":"476","severity":1,"message":"477","line":9,"column":7,"nodeType":"478","endLine":9,"endColumn":41},{"ruleId":"479","severity":1,"message":"480","line":26,"column":38,"nodeType":"481","messageId":"482","endLine":26,"endColumn":40},{"ruleId":"453","severity":1,"message":"483","line":42,"column":19,"nodeType":"455","messageId":"456","endLine":42,"endColumn":31},{"ruleId":"453","severity":1,"message":"484","line":44,"column":8,"nodeType":"455","messageId":"456","endLine":44,"endColumn":16},{"ruleId":"479","severity":1,"message":"480","line":47,"column":38,"nodeType":"481","messageId":"482","endLine":47,"endColumn":40},{"ruleId":"476","severity":1,"message":"477","line":53,"column":9,"nodeType":"478","endLine":53,"endColumn":147},{"ruleId":"476","severity":1,"message":"477","line":56,"column":65,"nodeType":"478","endLine":56,"endColumn":94},{"ruleId":"476","severity":1,"message":"477","line":57,"column":68,"nodeType":"478","endLine":57,"endColumn":97},{"ruleId":"476","severity":1,"message":"477","line":58,"column":66,"nodeType":"478","endLine":58,"endColumn":96},{"ruleId":"461","severity":1,"message":"485","line":146,"column":6,"nodeType":"463","endLine":146,"endColumn":31,"suggestions":"486"},{"ruleId":"461","severity":1,"message":"487","line":158,"column":6,"nodeType":"463","endLine":158,"endColumn":8,"suggestions":"488"},{"ruleId":"476","severity":1,"message":"477","line":170,"column":15,"nodeType":"478","endLine":170,"endColumn":154},{"ruleId":"476","severity":1,"message":"477","line":178,"column":19,"nodeType":"478","endLine":178,"endColumn":48},{"ruleId":"476","severity":1,"message":"477","line":182,"column":19,"nodeType":"478","endLine":182,"endColumn":48},{"ruleId":"476","severity":1,"message":"477","line":186,"column":19,"nodeType":"478","endLine":186,"endColumn":49},{"ruleId":"476","severity":1,"message":"477","line":196,"column":19,"nodeType":"478","endLine":196,"endColumn":227},{"ruleId":"476","severity":1,"message":"477","line":202,"column":27,"nodeType":"478","endLine":209,"endColumn":32},{"ruleId":"479","severity":1,"message":"489","line":217,"column":39,"nodeType":"481","messageId":"482","endLine":217,"endColumn":41},{"ruleId":"479","severity":1,"message":"489","line":223,"column":37,"nodeType":"481","messageId":"482","endLine":223,"endColumn":39},{"ruleId":"479","severity":1,"message":"489","line":276,"column":30,"nodeType":"481","messageId":"482","endLine":276,"endColumn":32},{"ruleId":"453","severity":1,"message":"490","line":334,"column":9,"nodeType":"455","messageId":"456","endLine":334,"endColumn":19},{"ruleId":"461","severity":1,"message":"491","line":359,"column":6,"nodeType":"463","endLine":359,"endColumn":8,"suggestions":"492"},{"ruleId":"476","severity":1,"message":"477","line":368,"column":15,"nodeType":"478","endLine":368,"endColumn":154},{"ruleId":"479","severity":1,"message":"489","line":374,"column":37,"nodeType":"481","messageId":"482","endLine":374,"endColumn":39},{"ruleId":"453","severity":1,"message":"457","line":4,"column":8,"nodeType":"455","messageId":"456","endLine":4,"endColumn":13},{"ruleId":"453","severity":1,"message":"493","line":4,"column":17,"nodeType":"455","messageId":"456","endLine":4,"endColumn":27},{"ruleId":"453","severity":1,"message":"472","line":5,"column":10,"nodeType":"455","messageId":"456","endLine":5,"endColumn":19},{"ruleId":"453","severity":1,"message":"494","line":12,"column":10,"nodeType":"455","messageId":"456","endLine":12,"endColumn":18},{"ruleId":"453","severity":1,"message":"495","line":12,"column":20,"nodeType":"455","messageId":"456","endLine":12,"endColumn":31},{"ruleId":"453","severity":1,"message":"454","line":1,"column":17,"nodeType":"455","messageId":"456","endLine":1,"endColumn":25},{"ruleId":"496","severity":1,"message":"497","line":125,"column":5,"nodeType":"498","messageId":"482","endLine":125,"endColumn":15},{"ruleId":"453","severity":1,"message":"457","line":4,"column":8,"nodeType":"455","messageId":"456","endLine":4,"endColumn":13},{"ruleId":"453","severity":1,"message":"493","line":4,"column":17,"nodeType":"455","messageId":"456","endLine":4,"endColumn":27},{"ruleId":"453","severity":1,"message":"499","line":5,"column":23,"nodeType":"455","messageId":"456","endLine":5,"endColumn":32},{"ruleId":"453","severity":1,"message":"454","line":13,"column":10,"nodeType":"455","messageId":"456","endLine":13,"endColumn":18},{"ruleId":"453","severity":1,"message":"500","line":13,"column":20,"nodeType":"455","messageId":"456","endLine":13,"endColumn":30},{"ruleId":"453","severity":1,"message":"472","line":15,"column":10,"nodeType":"455","messageId":"456","endLine":15,"endColumn":19},{"ruleId":"453","severity":1,"message":"460","line":24,"column":11,"nodeType":"455","messageId":"456","endLine":24,"endColumn":15},{"ruleId":"453","severity":1,"message":"501","line":24,"column":24,"nodeType":"455","messageId":"456","endLine":24,"endColumn":30},{"ruleId":"453","severity":1,"message":"457","line":2,"column":10,"nodeType":"455","messageId":"456","endLine":2,"endColumn":15},{"ruleId":"453","severity":1,"message":"493","line":2,"column":17,"nodeType":"455","messageId":"456","endLine":2,"endColumn":27},{"ruleId":"453","severity":1,"message":"502","line":5,"column":10,"nodeType":"455","messageId":"456","endLine":5,"endColumn":17},{"ruleId":"453","severity":1,"message":"503","line":6,"column":31,"nodeType":"455","messageId":"456","endLine":6,"endColumn":45},{"ruleId":"453","severity":1,"message":"504","line":6,"column":47,"nodeType":"455","messageId":"456","endLine":6,"endColumn":63},{"ruleId":"453","severity":1,"message":"505","line":22,"column":7,"nodeType":"455","messageId":"456","endLine":22,"endColumn":16},{"ruleId":"461","severity":1,"message":"506","line":43,"column":6,"nodeType":"463","endLine":43,"endColumn":8,"suggestions":"507"},{"ruleId":"453","severity":1,"message":"508","line":3,"column":10,"nodeType":"455","messageId":"456","endLine":3,"endColumn":18},{"ruleId":"453","severity":1,"message":"459","line":6,"column":10,"nodeType":"455","messageId":"456","endLine":6,"endColumn":26},{"ruleId":"453","severity":1,"message":"509","line":11,"column":19,"nodeType":"455","messageId":"456","endLine":11,"endColumn":29},{"ruleId":"453","severity":1,"message":"510","line":45,"column":9,"nodeType":"455","messageId":"456","endLine":45,"endColumn":28},{"ruleId":"453","severity":1,"message":"511","line":2,"column":10,"nodeType":"455","messageId":"456","endLine":2,"endColumn":14},{"ruleId":"453","severity":1,"message":"457","line":2,"column":8,"nodeType":"455","messageId":"456","endLine":2,"endColumn":13},{"ruleId":"453","severity":1,"message":"459","line":5,"column":21,"nodeType":"455","messageId":"456","endLine":5,"endColumn":37},{"ruleId":"453","severity":1,"message":"512","line":8,"column":15,"nodeType":"455","messageId":"456","endLine":8,"endColumn":23},{"ruleId":"461","severity":1,"message":"513","line":24,"column":6,"nodeType":"463","endLine":24,"endColumn":8,"suggestions":"514"},{"ruleId":"476","severity":1,"message":"477","line":29,"column":7,"nodeType":"478","endLine":29,"endColumn":74},{"ruleId":"476","severity":1,"message":"477","line":38,"column":11,"nodeType":"478","endLine":38,"endColumn":80},{"ruleId":"476","severity":1,"message":"477","line":41,"column":11,"nodeType":"478","endLine":41,"endColumn":84},{"ruleId":"479","severity":1,"message":"489","line":42,"column":17,"nodeType":"481","messageId":"482","endLine":42,"endColumn":19},{"ruleId":"453","severity":1,"message":"474","line":1,"column":17,"nodeType":"455","messageId":"456","endLine":1,"endColumn":26},{"ruleId":"453","severity":1,"message":"454","line":1,"column":28,"nodeType":"455","messageId":"456","endLine":1,"endColumn":36},{"ruleId":"453","severity":1,"message":"457","line":2,"column":8,"nodeType":"455","messageId":"456","endLine":2,"endColumn":13},{"ruleId":"453","severity":1,"message":"474","line":1,"column":17,"nodeType":"455","messageId":"456","endLine":1,"endColumn":26},{"ruleId":"453","severity":1,"message":"454","line":1,"column":28,"nodeType":"455","messageId":"456","endLine":1,"endColumn":36},{"ruleId":"453","severity":1,"message":"457","line":2,"column":8,"nodeType":"455","messageId":"456","endLine":2,"endColumn":13},{"ruleId":"476","severity":1,"message":"477","line":22,"column":8,"nodeType":"478","endLine":22,"endColumn":39},{"ruleId":"453","severity":1,"message":"474","line":1,"column":16,"nodeType":"455","messageId":"456","endLine":1,"endColumn":25},{"ruleId":"453","severity":1,"message":"457","line":2,"column":8,"nodeType":"455","messageId":"456","endLine":2,"endColumn":13},{"ruleId":"453","severity":1,"message":"515","line":3,"column":8,"nodeType":"455","messageId":"456","endLine":3,"endColumn":14},{"ruleId":"453","severity":1,"message":"474","line":1,"column":17,"nodeType":"455","messageId":"456","endLine":1,"endColumn":26},{"ruleId":"453","severity":1,"message":"516","line":1,"column":28,"nodeType":"455","messageId":"456","endLine":1,"endColumn":38},{"ruleId":"453","severity":1,"message":"454","line":1,"column":40,"nodeType":"455","messageId":"456","endLine":1,"endColumn":48},{"ruleId":"453","severity":1,"message":"511","line":2,"column":10,"nodeType":"455","messageId":"456","endLine":2,"endColumn":14},{"ruleId":"476","severity":1,"message":"477","line":33,"column":9,"nodeType":"478","endLine":33,"endColumn":39},{"ruleId":"453","severity":1,"message":"474","line":1,"column":16,"nodeType":"455","messageId":"456","endLine":1,"endColumn":25},{"ruleId":"453","severity":1,"message":"454","line":1,"column":27,"nodeType":"455","messageId":"456","endLine":1,"endColumn":35},{"ruleId":"453","severity":1,"message":"457","line":2,"column":8,"nodeType":"455","messageId":"456","endLine":2,"endColumn":13},{"ruleId":"453","severity":1,"message":"517","line":4,"column":16,"nodeType":"455","messageId":"456","endLine":4,"endColumn":23},{"ruleId":"453","severity":1,"message":"518","line":5,"column":8,"nodeType":"455","messageId":"456","endLine":5,"endColumn":14},{"ruleId":"453","severity":1,"message":"519","line":7,"column":8,"nodeType":"455","messageId":"456","endLine":7,"endColumn":19},{"ruleId":"453","severity":1,"message":"520","line":8,"column":10,"nodeType":"455","messageId":"456","endLine":8,"endColumn":21},{"ruleId":"453","severity":1,"message":"521","line":24,"column":36,"nodeType":"455","messageId":"456","endLine":24,"endColumn":47},{"ruleId":"453","severity":1,"message":"522","line":30,"column":32,"nodeType":"455","messageId":"456","endLine":30,"endColumn":41},{"ruleId":"476","severity":1,"message":"477","line":48,"column":9,"nodeType":"478","endLine":48,"endColumn":90},{"ruleId":"476","severity":1,"message":"477","line":52,"column":13,"nodeType":"478","endLine":52,"endColumn":80},{"ruleId":"476","severity":1,"message":"477","line":57,"column":9,"nodeType":"478","endLine":57,"endColumn":81},{"ruleId":"453","severity":1,"message":"466","line":72,"column":8,"nodeType":"455","messageId":"456","endLine":72,"endColumn":14},{"ruleId":"453","severity":1,"message":"457","line":3,"column":8,"nodeType":"455","messageId":"456","endLine":3,"endColumn":13},{"ruleId":"453","severity":1,"message":"469","line":5,"column":10,"nodeType":"455","messageId":"456","endLine":5,"endColumn":16},{"ruleId":"453","severity":1,"message":"470","line":5,"column":18,"nodeType":"455","messageId":"456","endLine":5,"endColumn":23},{"ruleId":"453","severity":1,"message":"511","line":3,"column":10,"nodeType":"455","messageId":"456","endLine":3,"endColumn":14},{"ruleId":"453","severity":1,"message":"523","line":8,"column":12,"nodeType":"455","messageId":"456","endLine":8,"endColumn":20},{"ruleId":"524","severity":1,"message":"525","line":120,"column":29,"nodeType":"526","messageId":"527","endLine":120,"endColumn":48},{"ruleId":"453","severity":1,"message":"457","line":2,"column":8,"nodeType":"455","messageId":"456","endLine":2,"endColumn":13},{"ruleId":"453","severity":1,"message":"466","line":4,"column":8,"nodeType":"455","messageId":"456","endLine":4,"endColumn":14},{"ruleId":"453","severity":1,"message":"467","line":5,"column":8,"nodeType":"455","messageId":"456","endLine":5,"endColumn":16},{"ruleId":"453","severity":1,"message":"468","line":7,"column":8,"nodeType":"455","messageId":"456","endLine":7,"endColumn":17},{"ruleId":"453","severity":1,"message":"469","line":8,"column":10,"nodeType":"455","messageId":"456","endLine":8,"endColumn":16},{"ruleId":"453","severity":1,"message":"470","line":8,"column":18,"nodeType":"455","messageId":"456","endLine":8,"endColumn":23},{"ruleId":"453","severity":1,"message":"472","line":9,"column":10,"nodeType":"455","messageId":"456","endLine":9,"endColumn":19},{"ruleId":"461","severity":1,"message":"485","line":47,"column":6,"nodeType":"463","endLine":47,"endColumn":30,"suggestions":"528"},{"ruleId":"461","severity":1,"message":"487","line":57,"column":6,"nodeType":"463","endLine":57,"endColumn":8,"suggestions":"529"},{"ruleId":"453","severity":1,"message":"530","line":3,"column":10,"nodeType":"455","messageId":"456","endLine":3,"endColumn":14},{"ruleId":"453","severity":1,"message":"531","line":3,"column":16,"nodeType":"455","messageId":"456","endLine":3,"endColumn":20},{"ruleId":"453","severity":1,"message":"518","line":3,"column":22,"nodeType":"455","messageId":"456","endLine":3,"endColumn":28},{"ruleId":"453","severity":1,"message":"520","line":4,"column":10,"nodeType":"455","messageId":"456","endLine":4,"endColumn":21},{"ruleId":"453","severity":1,"message":"457","line":5,"column":8,"nodeType":"455","messageId":"456","endLine":5,"endColumn":13},{"ruleId":"453","severity":1,"message":"493","line":5,"column":17,"nodeType":"455","messageId":"456","endLine":5,"endColumn":27},{"ruleId":"453","severity":1,"message":"459","line":6,"column":10,"nodeType":"455","messageId":"456","endLine":6,"endColumn":26},{"ruleId":"453","severity":1,"message":"474","line":1,"column":27,"nodeType":"455","messageId":"456","endLine":1,"endColumn":36},{"ruleId":"453","severity":1,"message":"457","line":2,"column":8,"nodeType":"455","messageId":"456","endLine":2,"endColumn":13},{"ruleId":"453","severity":1,"message":"532","line":48,"column":9,"nodeType":"455","messageId":"456","endLine":48,"endColumn":14},{"ruleId":"453","severity":1,"message":"533","line":34,"column":9,"nodeType":"455","messageId":"456","endLine":34,"endColumn":14},{"ruleId":"453","severity":1,"message":"534","line":37,"column":10,"nodeType":"455","messageId":"456","endLine":37,"endColumn":13},{"ruleId":"453","severity":1,"message":"535","line":94,"column":17,"nodeType":"455","messageId":"456","endLine":94,"endColumn":21},{"ruleId":"479","severity":1,"message":"489","line":123,"column":36,"nodeType":"481","messageId":"482","endLine":123,"endColumn":38},{"ruleId":"453","severity":1,"message":"459","line":4,"column":10,"nodeType":"455","messageId":"456","endLine":4,"endColumn":26},{"ruleId":"453","severity":1,"message":"493","line":5,"column":17,"nodeType":"455","messageId":"456","endLine":5,"endColumn":27},{"ruleId":"453","severity":1,"message":"536","line":12,"column":11,"nodeType":"455","messageId":"456","endLine":12,"endColumn":17},{"ruleId":"453","severity":1,"message":"537","line":13,"column":9,"nodeType":"455","messageId":"456","endLine":13,"endColumn":17},{"ruleId":"453","severity":1,"message":"538","line":132,"column":7,"nodeType":"455","messageId":"456","endLine":132,"endColumn":19},{"ruleId":"453","severity":1,"message":"539","line":147,"column":7,"nodeType":"455","messageId":"456","endLine":147,"endColumn":21},{"ruleId":"453","severity":1,"message":"469","line":5,"column":10,"nodeType":"455","messageId":"456","endLine":5,"endColumn":16},{"ruleId":"453","severity":1,"message":"470","line":5,"column":18,"nodeType":"455","messageId":"456","endLine":5,"endColumn":23},{"ruleId":"453","severity":1,"message":"457","line":3,"column":8,"nodeType":"455","messageId":"456","endLine":3,"endColumn":13},{"ruleId":"453","severity":1,"message":"540","line":6,"column":10,"nodeType":"455","messageId":"456","endLine":6,"endColumn":21},{"ruleId":"453","severity":1,"message":"541","line":65,"column":7,"nodeType":"455","messageId":"456","endLine":65,"endColumn":17},"no-new-object",["542"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'UserProvider' is defined but never used.","'sendAxiosRequest' is defined but never used.","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'login'. Either include it or remove the dependency array.","ArrayExpression",["543"],"'MenuItem' is defined but never used.","'Coupon' is defined but never used.","'Category' is defined but never used.","'StoreHome' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'StoreListItem' is defined but never used.","'isOpenNow' is defined but never used.","'useForm' is assigned a value but never used.","'useEffect' is defined but never used.","'setState' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'setLoginUser' is assigned a value but never used.","'memberNo' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'newAddLength'. Either include it or remove the dependency array.",["544"],"React Hook useEffect has a missing dependency: 'newAddLength'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setStartPageNo' needs the current value of 'newAddLength'.",["545"],"Expected '===' and instead saw '=='.","'pageRowCnt' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.reviewNo'. Either include it or remove the dependency array.",["546"],"'formToJSON' is defined but never used.","'menuData' is assigned a value but never used.","'setMenuData' is assigned a value but never used.","no-dupe-keys","Duplicate key 'transition'.","ObjectExpression","'useParams' is defined but never used.","'useContext' is defined but never used.","'logout' is assigned a value but never used.","'useUser' is defined but never used.","'getAccessToken' is defined but never used.","'getLoginUserInfo' is defined but never used.","'loginInit' is defined but never used.","React Hook useEffect has missing dependencies: 'accessToken', 'currentURL', 'decodedAccToken', and 'decodedRefToken'. Either include them or remove the dependency array.",["547"],"'Carousel' is defined but never used.","'setLoading' is assigned a value but never used.","'recommendationItems' is assigned a value but never used.","'Link' is defined but never used.","'setStore' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'store'. Either include it or remove the dependency array.",["548"],"'styles' is defined but never used.","'useReducer' is defined but never used.","'NavLink' is defined but never used.","'Button' is defined but never used.","'Placeholder' is defined but never used.","'useNavigate' is defined but never used.","'startSecond' is assigned a value but never used.","'endSecond' is assigned a value but never used.","'response' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps",["549"],["550"],"'Form' is defined but never used.","'Card' is defined but never used.","'codes' is assigned a value but never used.","'payNo' is assigned a value but never used.","'pay' is assigned a value but never used.","'data' is assigned a value but never used.","'menuNo' is assigned a value but never used.","'navigate' is assigned a value but never used.","'deleteButton' is assigned a value but never used.","'registerButton' is assigned a value but never used.","'useLocation' is defined but never used.","'imageStyle' is assigned a value but never used.","no-object-constructor",{"desc":"551","fix":"552"},{"desc":"553","fix":"554"},{"desc":"555","fix":"556"},{"desc":"557","fix":"558"},{"desc":"559","fix":"560"},{"desc":"561","fix":"562"},{"desc":"563","fix":"564"},{"desc":"555","fix":"565"},"Update the dependencies array to be: [login]",{"range":"566","text":"567"},"Update the dependencies array to be: [startPageNo, reviewList, newAddLength]",{"range":"568","text":"569"},"Update the dependencies array to be: [newAddLength]",{"range":"570","text":"571"},"Update the dependencies array to be: [props.reviewNo]",{"range":"572","text":"573"},"Update the dependencies array to be: [accessToken, currentURL, decodedAccToken, decodedRefToken]",{"range":"574","text":"575"},"Update the dependencies array to be: [store]",{"range":"576","text":"577"},"Update the dependencies array to be: [newAddLength, startPageNo, storeList]",{"range":"578","text":"579"},{"range":"580","text":"571"},[3206,3208],"[login]",[6231,6256],"[startPageNo, reviewList, newAddLength]",[6680,6682],"[newAddLength]",[15602,15604],"[props.reviewNo]",[1920,1922],"[accessToken, currentURL, decodedAccToken, decodedRefToken]",[675,677],"[store]",[1611,1635],"[newAddLength, startPageNo, storeList]",[1959,1961]]